[Mon May 20 23:53:50 2013] [info] Listening at "http://*:3000".
[Mon May 20 23:53:55 2013] [debug] Your secret passphrase needs to be changed!!!
[Mon May 20 23:53:55 2013] [debug] GET "/".
[Mon May 20 23:53:55 2013] [debug] Routing to controller "AnnoTree::Example" and action "welcome".
[Mon May 20 23:53:55 2013] [debug] Rendering template "example/welcome.html.ep".
[Mon May 20 23:53:55 2013] [debug] Careful, "layout" is a reserved stash value.
[Mon May 20 23:53:55 2013] [debug] Rendering template "layouts/default.html.ep".
[Mon May 20 23:53:55 2013] [debug] 200 OK (0.004288s, 233.209/s).
[Mon May 20 23:54:02 2013] [debug] GET "/".
[Mon May 20 23:54:02 2013] [debug] Routing to controller "AnnoTree::Example" and action "welcome".
[Mon May 20 23:54:02 2013] [debug] Rendering cached template "example/welcome.html.ep".
[Mon May 20 23:54:02 2013] [debug] Careful, "layout" is a reserved stash value.
[Mon May 20 23:54:02 2013] [debug] Rendering cached template "layouts/default.html.ep".
[Mon May 20 23:54:02 2013] [debug] 200 OK (0.000769s, 1300.390/s).
[Mon May 20 23:59:28 2013] [debug] Your secret passphrase needs to be changed!!!
[Mon May 20 23:59:28 2013] [debug] GET "/".
[Mon May 20 23:59:28 2013] [debug] Routing to controller "AnnoTree::Example" and action "welcome".
[Mon May 20 23:59:28 2013] [debug] Rendering template "example/welcome.html.ep".
[Mon May 20 23:59:28 2013] [debug] Careful, "layout" is a reserved stash value.
[Mon May 20 23:59:28 2013] [debug] Rendering template "layouts/default.html.ep".
[Mon May 20 23:59:28 2013] [debug] 200 OK (0.004122s, 242.601/s).
[Tue May 21 00:28:36 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 00:28:36 2013] [debug] GET "/".
[Tue May 21 00:28:36 2013] [debug] Routing to controller "AnnoTree::Example" and action "welcome".
[Tue May 21 00:28:36 2013] [debug] Rendering template "example/welcome.html.ep".
[Tue May 21 00:28:36 2013] [debug] Careful, "layout" is a reserved stash value.
[Tue May 21 00:28:36 2013] [debug] Rendering template "layouts/default.html.ep".
[Tue May 21 00:28:36 2013] [debug] 200 OK (0.004456s, 224.417/s).
[Tue May 21 00:28:40 2013] [debug] GET "/forest".
[Tue May 21 00:28:40 2013] [debug] Template "not_found.development.html.ep" not found.
[Tue May 21 00:28:40 2013] [debug] Template "not_found.html.ep" not found.
[Tue May 21 00:28:40 2013] [debug] Rendering inline template.
[Tue May 21 00:28:40 2013] [debug] Rendering inline template.
[Tue May 21 00:28:40 2013] [debug] 404 Not Found (0.010395s, 96.200/s).
[Tue May 21 00:29:19 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 00:29:19 2013] [debug] GET "/forest".
[Tue May 21 00:29:19 2013] [debug] Routing to controller "AnnoTree::Forest" and action "listAll".
[Tue May 21 00:29:19 2013] [error] Not a CODE reference at /home/matt/Documents/AnnoTree/WebServices/anno_tree/script/../lib/AnnoTree/Forest.pm line 8.

[Tue May 21 00:29:19 2013] [debug] Template "exception.development.html.ep" not found.
[Tue May 21 00:29:19 2013] [debug] Template "exception.html.ep" not found.
[Tue May 21 00:29:19 2013] [debug] Rendering inline template.
[Tue May 21 00:29:19 2013] [debug] Rendering inline template.
[Tue May 21 00:29:19 2013] [debug] 500 Internal Server Error (0.016011s, 62.457/s).
[Tue May 21 00:29:36 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 00:29:36 2013] [debug] GET "/forest".
[Tue May 21 00:29:36 2013] [debug] Routing to controller "AnnoTree::Forest" and action "listAll".
[Tue May 21 00:29:36 2013] [debug] Template "list.html.ep" not found.
[Tue May 21 00:29:36 2013] [debug] Template "not_found.development.html.ep" not found.
[Tue May 21 00:29:36 2013] [debug] Template "not_found.html.ep" not found.
[Tue May 21 00:29:36 2013] [debug] Rendering inline template.
[Tue May 21 00:29:36 2013] [debug] Rendering inline template.
[Tue May 21 00:29:36 2013] [debug] 404 Not Found (0.011321s, 88.331/s).
[Tue May 21 00:30:49 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 00:30:49 2013] [debug] GET "/forest".
[Tue May 21 00:30:49 2013] [debug] Routing to controller "AnnoTree::Forest" and action "listAll".
[Tue May 21 00:30:49 2013] [debug] 200 OK (0.000756s, 1322.751/s).
[Tue May 21 00:33:31 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 00:33:31 2013] [debug] GET "/forest".
[Tue May 21 00:33:31 2013] [debug] Routing to controller "AnnoTree::Forest" and action "listAll".
[Tue May 21 00:33:31 2013] [debug] Template "list.json.ep" not found.
[Tue May 21 00:33:31 2013] [debug] Template "not_found.development.json.ep" not found.
[Tue May 21 00:33:31 2013] [debug] Template "not_found.json.ep" not found.
[Tue May 21 00:33:31 2013] [debug] Template "not_found.development.html.ep" not found.
[Tue May 21 00:33:31 2013] [debug] Template "not_found.html.ep" not found.
[Tue May 21 00:33:31 2013] [debug] Rendering inline template.
[Tue May 21 00:33:31 2013] [debug] Rendering inline template.
[Tue May 21 00:33:31 2013] [debug] 404 Not Found (0.011820s, 84.602/s).
[Tue May 21 00:34:52 2013] [debug] GET "/forest.json".
[Tue May 21 00:34:52 2013] [debug] Routing to controller "AnnoTree::Forest" and action "listAll".
[Tue May 21 00:34:52 2013] [debug] Template "list.json.ep" not found.
[Tue May 21 00:34:52 2013] [debug] Template "not_found.development.json.ep" not found.
[Tue May 21 00:34:52 2013] [debug] Template "not_found.json.ep" not found.
[Tue May 21 00:34:52 2013] [debug] Template "not_found.development.html.ep" not found.
[Tue May 21 00:34:52 2013] [debug] Template "not_found.html.ep" not found.
[Tue May 21 00:34:52 2013] [debug] Rendering cached inline template.
[Tue May 21 00:34:52 2013] [debug] Rendering cached inline template.
[Tue May 21 00:34:52 2013] [debug] 404 Not Found (0.003983s, 251.067/s).
[Tue May 21 00:35:12 2013] [info] Listening at "http://*:3000".
[Tue May 21 00:35:18 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 00:35:18 2013] [debug] GET "/forest.json".
[Tue May 21 00:35:18 2013] [debug] Routing to controller "AnnoTree::Forest" and action "listAll".
[Tue May 21 00:35:18 2013] [debug] Template "list.json.ep" not found.
[Tue May 21 00:35:18 2013] [debug] Template "not_found.development.json.ep" not found.
[Tue May 21 00:35:18 2013] [debug] Template "not_found.json.ep" not found.
[Tue May 21 00:35:18 2013] [debug] Template "not_found.development.html.ep" not found.
[Tue May 21 00:35:18 2013] [debug] Template "not_found.html.ep" not found.
[Tue May 21 00:35:18 2013] [debug] Rendering inline template.
[Tue May 21 00:35:18 2013] [debug] Rendering inline template.
[Tue May 21 00:35:18 2013] [debug] 404 Not Found (0.011871s, 84.239/s).
[Tue May 21 00:35:26 2013] [debug] GET "/forest/forest.json".
[Tue May 21 00:35:26 2013] [debug] Template "not_found.development.html.ep" not found.
[Tue May 21 00:35:26 2013] [debug] Template "not_found.html.ep" not found.
[Tue May 21 00:35:26 2013] [debug] Rendering inline template.
[Tue May 21 00:35:26 2013] [debug] Rendering inline template.
[Tue May 21 00:35:26 2013] [debug] 404 Not Found (0.010394s, 96.209/s).
[Tue May 21 00:35:32 2013] [debug] GET "/forest.forest.json".
[Tue May 21 00:35:32 2013] [debug] Routing to controller "AnnoTree::Forest" and action "listAll".
[Tue May 21 00:35:32 2013] [debug] Template "list.forest.json.ep" not found.
[Tue May 21 00:35:32 2013] [debug] Template "not_found.development.forest.json.ep" not found.
[Tue May 21 00:35:32 2013] [debug] Template "not_found.forest.json.ep" not found.
[Tue May 21 00:35:32 2013] [debug] Template "not_found.development.html.ep" not found.
[Tue May 21 00:35:32 2013] [debug] Template "not_found.html.ep" not found.
[Tue May 21 00:35:32 2013] [debug] Rendering cached inline template.
[Tue May 21 00:35:32 2013] [debug] Rendering cached inline template.
[Tue May 21 00:35:32 2013] [debug] 404 Not Found (0.004039s, 247.586/s).
[Tue May 21 00:35:35 2013] [debug] GET "/forest".
[Tue May 21 00:35:35 2013] [debug] Routing to controller "AnnoTree::Forest" and action "listAll".
[Tue May 21 00:35:35 2013] [debug] Template "list.html.ep" not found.
[Tue May 21 00:35:35 2013] [debug] Template "not_found.development.html.ep" not found.
[Tue May 21 00:35:35 2013] [debug] Template "not_found.html.ep" not found.
[Tue May 21 00:35:35 2013] [debug] Rendering cached inline template.
[Tue May 21 00:35:35 2013] [debug] Rendering cached inline template.
[Tue May 21 00:35:35 2013] [debug] 404 Not Found (0.003768s, 265.393/s).
[Tue May 21 00:36:14 2013] [info] Listening at "http://*:3000".
[Tue May 21 00:36:17 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 00:36:17 2013] [debug] GET "/forest".
[Tue May 21 00:36:17 2013] [debug] Routing to controller "AnnoTree::Forest" and action "listAll".
[Tue May 21 00:36:17 2013] [debug] Template "list.html.ep" not found.
[Tue May 21 00:36:17 2013] [debug] Template "not_found.development.html.ep" not found.
[Tue May 21 00:36:17 2013] [debug] Template "not_found.html.ep" not found.
[Tue May 21 00:36:17 2013] [debug] Rendering inline template.
[Tue May 21 00:36:17 2013] [debug] Rendering inline template.
[Tue May 21 00:36:17 2013] [debug] 404 Not Found (0.011775s, 84.926/s).
[Tue May 21 00:36:18 2013] [debug] GET "/forest".
[Tue May 21 00:36:18 2013] [debug] Routing to controller "AnnoTree::Forest" and action "listAll".
[Tue May 21 00:36:18 2013] [debug] Template "list.html.ep" not found.
[Tue May 21 00:36:18 2013] [debug] Template "not_found.development.html.ep" not found.
[Tue May 21 00:36:18 2013] [debug] Template "not_found.html.ep" not found.
[Tue May 21 00:36:18 2013] [debug] Rendering cached inline template.
[Tue May 21 00:36:18 2013] [debug] Rendering cached inline template.
[Tue May 21 00:36:18 2013] [debug] 404 Not Found (0.003438s, 290.867/s).
[Tue May 21 00:36:28 2013] [debug] GET "/".
[Tue May 21 00:36:28 2013] [debug] Routing to controller "AnnoTree::Example" and action "welcome".
[Tue May 21 00:36:28 2013] [debug] Rendering template "example/welcome.html.ep".
[Tue May 21 00:36:28 2013] [debug] Careful, "layout" is a reserved stash value.
[Tue May 21 00:36:28 2013] [debug] Rendering template "layouts/default.html.ep".
[Tue May 21 00:36:28 2013] [debug] 200 OK (0.003835s, 260.756/s).
[Tue May 21 00:36:33 2013] [debug] GET "/forest".
[Tue May 21 00:36:33 2013] [debug] Routing to controller "AnnoTree::Forest" and action "listAll".
[Tue May 21 00:36:33 2013] [debug] Template "list.html.ep" not found.
[Tue May 21 00:36:33 2013] [debug] Template "not_found.development.html.ep" not found.
[Tue May 21 00:36:33 2013] [debug] Template "not_found.html.ep" not found.
[Tue May 21 00:36:33 2013] [debug] Rendering cached inline template.
[Tue May 21 00:36:33 2013] [debug] Rendering cached inline template.
[Tue May 21 00:36:33 2013] [debug] 404 Not Found (0.003566s, 280.426/s).
[Tue May 21 00:37:57 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 00:37:57 2013] [debug] GET "/forest".
[Tue May 21 00:37:57 2013] [debug] Routing to controller "AnnoTree::Forest" and action "listAll".
[Tue May 21 00:37:57 2013] [debug] Template "list.json.ep" not found.
[Tue May 21 00:37:57 2013] [debug] Template "not_found.development.json.ep" not found.
[Tue May 21 00:37:57 2013] [debug] Template "not_found.json.ep" not found.
[Tue May 21 00:37:57 2013] [debug] Template "not_found.development.html.ep" not found.
[Tue May 21 00:37:57 2013] [debug] Template "not_found.html.ep" not found.
[Tue May 21 00:37:57 2013] [debug] Rendering inline template.
[Tue May 21 00:37:57 2013] [debug] Rendering inline template.
[Tue May 21 00:37:57 2013] [debug] 404 Not Found (0.011620s, 86.059/s).
[Tue May 21 00:37:58 2013] [debug] GET "/forest".
[Tue May 21 00:37:58 2013] [debug] Routing to controller "AnnoTree::Forest" and action "listAll".
[Tue May 21 00:37:58 2013] [debug] Template "list.json.ep" not found.
[Tue May 21 00:37:58 2013] [debug] Template "not_found.development.json.ep" not found.
[Tue May 21 00:37:58 2013] [debug] Template "not_found.json.ep" not found.
[Tue May 21 00:37:58 2013] [debug] Template "not_found.development.html.ep" not found.
[Tue May 21 00:37:58 2013] [debug] Template "not_found.html.ep" not found.
[Tue May 21 00:37:58 2013] [debug] Rendering cached inline template.
[Tue May 21 00:37:58 2013] [debug] Rendering cached inline template.
[Tue May 21 00:37:58 2013] [debug] 404 Not Found (0.003585s, 278.940/s).
[Tue May 21 00:38:02 2013] [debug] GET "/forest.json".
[Tue May 21 00:38:02 2013] [debug] Routing to controller "AnnoTree::Forest" and action "listAll".
[Tue May 21 00:38:02 2013] [debug] Template "list.json.ep" not found.
[Tue May 21 00:38:02 2013] [debug] Template "not_found.development.json.ep" not found.
[Tue May 21 00:38:02 2013] [debug] Template "not_found.json.ep" not found.
[Tue May 21 00:38:02 2013] [debug] Template "not_found.development.html.ep" not found.
[Tue May 21 00:38:02 2013] [debug] Template "not_found.html.ep" not found.
[Tue May 21 00:38:02 2013] [debug] Rendering cached inline template.
[Tue May 21 00:38:02 2013] [debug] Rendering cached inline template.
[Tue May 21 00:38:02 2013] [debug] 404 Not Found (0.004210s, 237.530/s).
[Tue May 21 00:38:05 2013] [debug] GET "/forest".
[Tue May 21 00:38:05 2013] [debug] Routing to controller "AnnoTree::Forest" and action "listAll".
[Tue May 21 00:38:05 2013] [debug] Template "list.json.ep" not found.
[Tue May 21 00:38:05 2013] [debug] Template "not_found.development.json.ep" not found.
[Tue May 21 00:38:05 2013] [debug] Template "not_found.json.ep" not found.
[Tue May 21 00:38:05 2013] [debug] Template "not_found.development.html.ep" not found.
[Tue May 21 00:38:05 2013] [debug] Template "not_found.html.ep" not found.
[Tue May 21 00:38:05 2013] [debug] Rendering cached inline template.
[Tue May 21 00:38:05 2013] [debug] Rendering cached inline template.
[Tue May 21 00:38:05 2013] [debug] 404 Not Found (0.003675s, 272.109/s).
[Tue May 21 00:39:25 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 00:39:25 2013] [debug] GET "/forest".
[Tue May 21 00:39:25 2013] [debug] Routing to controller "AnnoTree::Forest" and action "list".
[Tue May 21 00:39:25 2013] [debug] Template "forest/list.html.ep" not found.
[Tue May 21 00:39:25 2013] [debug] Template "not_found.development.html.ep" not found.
[Tue May 21 00:39:25 2013] [debug] Template "not_found.html.ep" not found.
[Tue May 21 00:39:25 2013] [debug] Rendering inline template.
[Tue May 21 00:39:25 2013] [debug] Rendering inline template.
[Tue May 21 00:39:25 2013] [debug] 404 Not Found (0.011361s, 88.020/s).
[Tue May 21 00:39:27 2013] [debug] GET "/forest".
[Tue May 21 00:39:27 2013] [debug] Routing to controller "AnnoTree::Forest" and action "list".
[Tue May 21 00:39:27 2013] [debug] Template "forest/list.html.ep" not found.
[Tue May 21 00:39:27 2013] [debug] Template "not_found.development.html.ep" not found.
[Tue May 21 00:39:27 2013] [debug] Template "not_found.html.ep" not found.
[Tue May 21 00:39:27 2013] [debug] Rendering cached inline template.
[Tue May 21 00:39:27 2013] [debug] Rendering cached inline template.
[Tue May 21 00:39:27 2013] [debug] 404 Not Found (0.003427s, 291.800/s).
[Tue May 21 00:39:40 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 00:39:40 2013] [debug] GET "/forest".
[Tue May 21 00:39:40 2013] [debug] Routing to controller "AnnoTree::Forest" and action "list".
[Tue May 21 00:39:40 2013] [debug] Template "forest/list.html.ep" not found.
[Tue May 21 00:39:40 2013] [debug] Template "not_found.development.html.ep" not found.
[Tue May 21 00:39:40 2013] [debug] Template "not_found.html.ep" not found.
[Tue May 21 00:39:40 2013] [debug] Rendering inline template.
[Tue May 21 00:39:40 2013] [debug] Rendering inline template.
[Tue May 21 00:39:40 2013] [debug] 404 Not Found (0.011406s, 87.673/s).
[Tue May 21 00:39:40 2013] [debug] GET "/forest".
[Tue May 21 00:39:40 2013] [debug] Routing to controller "AnnoTree::Forest" and action "list".
[Tue May 21 00:39:40 2013] [debug] Template "forest/list.html.ep" not found.
[Tue May 21 00:39:40 2013] [debug] Template "not_found.development.html.ep" not found.
[Tue May 21 00:39:40 2013] [debug] Template "not_found.html.ep" not found.
[Tue May 21 00:39:40 2013] [debug] Rendering cached inline template.
[Tue May 21 00:39:40 2013] [debug] Rendering cached inline template.
[Tue May 21 00:39:40 2013] [debug] 404 Not Found (0.003484s, 287.026/s).
[Tue May 21 00:39:41 2013] [debug] GET "/forest".
[Tue May 21 00:39:41 2013] [debug] Routing to controller "AnnoTree::Forest" and action "list".
[Tue May 21 00:39:41 2013] [debug] Template "forest/list.html.ep" not found.
[Tue May 21 00:39:41 2013] [debug] Template "not_found.development.html.ep" not found.
[Tue May 21 00:39:41 2013] [debug] Template "not_found.html.ep" not found.
[Tue May 21 00:39:41 2013] [debug] Rendering cached inline template.
[Tue May 21 00:39:41 2013] [debug] Rendering cached inline template.
[Tue May 21 00:39:41 2013] [debug] 404 Not Found (0.003416s, 292.740/s).
[Tue May 21 00:39:42 2013] [debug] GET "/forest".
[Tue May 21 00:39:42 2013] [debug] Routing to controller "AnnoTree::Forest" and action "list".
[Tue May 21 00:39:42 2013] [debug] Template "forest/list.html.ep" not found.
[Tue May 21 00:39:42 2013] [debug] Template "not_found.development.html.ep" not found.
[Tue May 21 00:39:42 2013] [debug] Template "not_found.html.ep" not found.
[Tue May 21 00:39:42 2013] [debug] Rendering cached inline template.
[Tue May 21 00:39:42 2013] [debug] Rendering cached inline template.
[Tue May 21 00:39:42 2013] [debug] 404 Not Found (0.003434s, 291.206/s).
[Tue May 21 00:40:27 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 00:40:27 2013] [debug] GET "/forest".
[Tue May 21 00:40:27 2013] [debug] Routing to controller "AnnoTree::Forest" and action "list".
[Tue May 21 00:40:27 2013] [debug] Rendering template "forest/list.json.ep".
[Tue May 21 00:40:27 2013] [debug] 200 OK (0.002868s, 348.675/s).
[Tue May 21 00:43:10 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 00:43:10 2013] [debug] GET "/forest".
[Tue May 21 00:43:10 2013] [debug] Routing to controller "AnnoTree::Forest" and action "list".
[Tue May 21 00:43:10 2013] [debug] Rendering template "forest/list.json.ep".
[Tue May 21 00:43:10 2013] [debug] 200 OK (0.002803s, 356.761/s).
[Tue May 21 01:00:03 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 01:00:03 2013] [debug] GET "/forest".
[Tue May 21 01:00:03 2013] [debug] Routing to controller "AnnoTree::Forest" and action "list".
[Tue May 21 01:00:03 2013] [debug] Rendering template "forest/list.json.ep".
[Tue May 21 01:00:03 2013] [debug] 200 OK (0.002811s, 355.745/s).
[Tue May 21 01:02:45 2013] [debug] GET "/forest".
[Tue May 21 01:02:45 2013] [debug] Routing to controller "AnnoTree::Forest" and action "list".
[Tue May 21 01:02:45 2013] [debug] Rendering cached template "forest/list.json.ep".
[Tue May 21 01:02:45 2013] [debug] 200 OK (0.000387s, 2583.979/s).
[Tue May 21 01:05:33 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 01:05:33 2013] [debug] GET "/forest".
[Tue May 21 01:05:33 2013] [debug] Routing to controller "AnnoTree::Forest" and action "list".
[Tue May 21 01:05:33 2013] [debug] Rendering template "forest/list.json.ep".
[Tue May 21 01:05:33 2013] [debug] 200 OK (0.002917s, 342.818/s).
[Tue May 21 01:05:50 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 01:05:50 2013] [debug] GET "/forest".
[Tue May 21 01:05:50 2013] [debug] Routing to controller "AnnoTree::Forest" and action "list".
[Tue May 21 01:05:50 2013] [debug] Rendering template "forest/list.json.ep".
[Tue May 21 01:05:50 2013] [debug] 200 OK (0.002925s, 341.880/s).
[Tue May 21 01:06:35 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 01:06:35 2013] [debug] GET "/forest".
[Tue May 21 01:06:35 2013] [debug] Routing to controller "AnnoTree::Forest" and action "list".
[Tue May 21 01:06:35 2013] [debug] Rendering template "forest/list.json.ep".
[Tue May 21 01:06:35 2013] [debug] 200 OK (0.002877s, 347.584/s).
[Tue May 21 01:07:44 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 01:07:44 2013] [debug] GET "/forest".
[Tue May 21 01:07:44 2013] [debug] Routing to controller "AnnoTree::Forest" and action "list".
[Tue May 21 01:07:44 2013] [debug] Rendering template "forest/list.json.ep".
[Tue May 21 01:07:44 2013] [debug] 200 OK (0.003048s, 328.084/s).
[Tue May 21 01:19:07 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 01:19:07 2013] [debug] GET "/forest/1".
[Tue May 21 01:19:07 2013] [error] Global symbol "@companies" requires explicit package name at /home/matt/Documents/AnnoTree/WebServices/anno_tree/script/../lib/AnnoTree/Forest.pm line 16.
Global symbol "@companies" requires explicit package name at /home/matt/Documents/AnnoTree/WebServices/anno_tree/script/../lib/AnnoTree/Forest.pm line 33.
Compilation failed in require at (eval 231) line 1.

[Tue May 21 01:19:07 2013] [debug] Template "exception.development.html.ep" not found.
[Tue May 21 01:19:07 2013] [debug] Template "exception.html.ep" not found.
[Tue May 21 01:19:07 2013] [debug] Rendering inline template.
[Tue May 21 01:19:07 2013] [debug] Rendering inline template.
[Tue May 21 01:19:07 2013] [debug] 500 Internal Server Error (0.015997s, 62.512/s).
[Tue May 21 01:19:17 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 01:19:17 2013] [debug] GET "/forest/1".
[Tue May 21 01:19:17 2013] [error] Global symbol "@companies" requires explicit package name at /home/matt/Documents/AnnoTree/WebServices/anno_tree/script/../lib/AnnoTree/Forest.pm line 16.
Global symbol "@companies" requires explicit package name at /home/matt/Documents/AnnoTree/WebServices/anno_tree/script/../lib/AnnoTree/Forest.pm line 33.
Compilation failed in require at (eval 231) line 1.

[Tue May 21 01:19:17 2013] [debug] Template "exception.development.html.ep" not found.
[Tue May 21 01:19:17 2013] [debug] Template "exception.html.ep" not found.
[Tue May 21 01:19:17 2013] [debug] Rendering inline template.
[Tue May 21 01:19:17 2013] [debug] Rendering inline template.
[Tue May 21 01:19:17 2013] [debug] 500 Internal Server Error (0.016114s, 62.058/s).
[Tue May 21 01:19:29 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 01:19:29 2013] [debug] GET "/forest/1".
[Tue May 21 01:19:29 2013] [debug] Routing to controller "AnnoTree::Forest" and action "unique".
[Tue May 21 01:19:29 2013] [debug] 200 OK (0.000859s, 1164.144/s).
[Tue May 21 01:19:57 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 01:19:57 2013] [debug] GET "/forest/1".
[Tue May 21 01:19:57 2013] [debug] Routing to controller "AnnoTree::Forest" and action "unique".
[Tue May 21 01:19:57 2013] [debug] 200 OK (0.000834s, 1199.041/s).
[Tue May 21 01:20:01 2013] [debug] GET "/forest/0".
[Tue May 21 01:20:01 2013] [debug] Routing to controller "AnnoTree::Forest" and action "unique".
[Tue May 21 01:20:01 2013] [debug] 200 OK (0.000373s, 2680.965/s).
[Tue May 21 01:20:14 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 01:20:14 2013] [debug] GET "/forest/0".
[Tue May 21 01:20:14 2013] [debug] Routing to controller "AnnoTree::Forest" and action "unique".
[Tue May 21 01:20:14 2013] [debug] 200 OK (0.000834s, 1199.041/s).
[Tue May 21 01:20:14 2013] [debug] GET "/forest/0".
[Tue May 21 01:20:14 2013] [debug] Routing to controller "AnnoTree::Forest" and action "unique".
[Tue May 21 01:20:14 2013] [debug] 200 OK (0.000221s, 4524.887/s).
[Tue May 21 01:20:18 2013] [debug] GET "/forest/1".
[Tue May 21 01:20:18 2013] [debug] Routing to controller "AnnoTree::Forest" and action "unique".
[Tue May 21 01:20:18 2013] [debug] 200 OK (0.000375s, 2666.667/s).
[Tue May 21 01:20:22 2013] [debug] GET "/forest/2".
[Tue May 21 01:20:22 2013] [debug] Routing to controller "AnnoTree::Forest" and action "unique".
[Tue May 21 01:20:22 2013] [debug] 200 OK (0.000370s, 2702.703/s).
[Tue May 21 01:20:24 2013] [debug] GET "/forest".
[Tue May 21 01:20:24 2013] [debug] Routing to controller "AnnoTree::Forest" and action "list".
[Tue May 21 01:20:24 2013] [debug] Rendering template "forest/list.json.ep".
[Tue May 21 01:20:24 2013] [debug] 200 OK (0.002676s, 373.692/s).
[Tue May 21 01:20:27 2013] [debug] GET "/forest/0".
[Tue May 21 01:20:27 2013] [debug] Routing to controller "AnnoTree::Forest" and action "unique".
[Tue May 21 01:20:27 2013] [debug] 200 OK (0.000232s, 4310.345/s).
[Tue May 21 01:25:47 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 01:25:47 2013] [debug] GET "/forest/0".
[Tue May 21 01:25:47 2013] [debug] Routing to controller "AnnoTree::Forest" and action "unique".
[Tue May 21 01:25:47 2013] [debug] Template "forest/unique.html.ep" not found.
[Tue May 21 01:25:47 2013] [debug] Template "not_found.development.html.ep" not found.
[Tue May 21 01:25:47 2013] [debug] Template "not_found.html.ep" not found.
[Tue May 21 01:25:47 2013] [debug] Rendering inline template.
[Tue May 21 01:25:47 2013] [debug] Rendering inline template.
[Tue May 21 01:25:47 2013] [debug] 404 Not Found (0.011664s, 85.734/s).
[Tue May 21 01:26:33 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 01:26:33 2013] [debug] GET "/forest/0".
[Tue May 21 01:26:33 2013] [debug] Routing to controller "AnnoTree::Forest" and action "unique".
[Tue May 21 01:26:33 2013] [debug] Rendering template "forest/unique.json.ep".
[Tue May 21 01:26:33 2013] [debug] 200 OK (0.002978s, 335.796/s).
[Tue May 21 01:27:02 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 01:27:02 2013] [debug] GET "/forest/0".
[Tue May 21 01:27:02 2013] [debug] Routing to controller "AnnoTree::Forest" and action "unique".
[Tue May 21 01:27:02 2013] [debug] Rendering template "forest/unique.json.ep".
[Tue May 21 01:27:02 2013] [debug] 200 OK (0.003389s, 295.072/s).
[Tue May 21 01:27:11 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 01:27:11 2013] [debug] GET "/forest/0".
[Tue May 21 01:27:11 2013] [debug] Routing to controller "AnnoTree::Forest" and action "unique".
[Tue May 21 01:27:11 2013] [debug] Rendering template "forest/unique.json.ep".
[Tue May 21 01:27:11 2013] [debug] 200 OK (0.002882s, 346.981/s).
[Tue May 21 01:27:16 2013] [debug] GET "/forest/2".
[Tue May 21 01:27:16 2013] [debug] Routing to controller "AnnoTree::Forest" and action "unique".
[Tue May 21 01:27:16 2013] [debug] Rendering cached template "forest/unique.json.ep".
[Tue May 21 01:27:16 2013] [debug] 200 OK (0.000657s, 1522.070/s).
[Tue May 21 01:27:22 2013] [debug] GET "/forest/0".
[Tue May 21 01:27:22 2013] [debug] Routing to controller "AnnoTree::Forest" and action "unique".
[Tue May 21 01:27:22 2013] [debug] Rendering cached template "forest/unique.json.ep".
[Tue May 21 01:27:22 2013] [debug] 200 OK (0.000431s, 2320.186/s).
[Tue May 21 01:27:25 2013] [debug] GET "/forest/1".
[Tue May 21 01:27:25 2013] [debug] Routing to controller "AnnoTree::Forest" and action "unique".
[Tue May 21 01:27:25 2013] [debug] Rendering cached template "forest/unique.json.ep".
[Tue May 21 01:27:25 2013] [debug] 200 OK (0.000577s, 1733.102/s).
[Tue May 21 01:34:01 2013] [debug] GET "/forest/w".
[Tue May 21 01:34:01 2013] [debug] Routing to controller "AnnoTree::Forest" and action "unique".
[Tue May 21 01:34:01 2013] [debug] Rendering cached template "forest/unique.json.ep".
[Tue May 21 01:34:01 2013] [debug] 200 OK (0.000589s, 1697.793/s).
[Tue May 21 01:34:06 2013] [debug] GET "/forest/werwer".
[Tue May 21 01:34:06 2013] [debug] Routing to controller "AnnoTree::Forest" and action "unique".
[Tue May 21 01:34:06 2013] [debug] Rendering cached template "forest/unique.json.ep".
[Tue May 21 01:34:06 2013] [debug] 200 OK (0.000604s, 1655.629/s).
[Tue May 21 01:37:40 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 01:37:40 2013] [debug] GET "/forest/werwer".
[Tue May 21 01:37:40 2013] [debug] Template "not_found.development.html.ep" not found.
[Tue May 21 01:37:40 2013] [debug] Template "not_found.html.ep" not found.
[Tue May 21 01:37:40 2013] [debug] Rendering inline template.
[Tue May 21 01:37:40 2013] [debug] Rendering inline template.
[Tue May 21 01:37:40 2013] [debug] 404 Not Found (0.011217s, 89.150/s).
[Tue May 21 01:37:44 2013] [debug] GET "/forest/w".
[Tue May 21 01:37:44 2013] [debug] Template "not_found.development.html.ep" not found.
[Tue May 21 01:37:44 2013] [debug] Template "not_found.html.ep" not found.
[Tue May 21 01:37:44 2013] [debug] Rendering cached inline template.
[Tue May 21 01:37:44 2013] [debug] Rendering cached inline template.
[Tue May 21 01:37:44 2013] [debug] 404 Not Found (0.003439s, 290.782/s).
[Tue May 21 01:37:46 2013] [debug] GET "/forest/0".
[Tue May 21 01:37:46 2013] [debug] Template "not_found.development.html.ep" not found.
[Tue May 21 01:37:46 2013] [debug] Template "not_found.html.ep" not found.
[Tue May 21 01:37:46 2013] [debug] Rendering cached inline template.
[Tue May 21 01:37:46 2013] [debug] Rendering cached inline template.
[Tue May 21 01:37:46 2013] [debug] 404 Not Found (0.003453s, 289.603/s).
[Tue May 21 01:37:50 2013] [debug] GET "/forest/".
[Tue May 21 01:37:50 2013] [debug] Routing to controller "AnnoTree::Forest" and action "list".
[Tue May 21 01:37:50 2013] [debug] Rendering template "forest/list.json.ep".
[Tue May 21 01:37:50 2013] [debug] 200 OK (0.002460s, 406.504/s).
[Tue May 21 01:37:52 2013] [debug] GET "/forest/0".
[Tue May 21 01:37:52 2013] [debug] Template "not_found.development.html.ep" not found.
[Tue May 21 01:37:52 2013] [debug] Template "not_found.html.ep" not found.
[Tue May 21 01:37:52 2013] [debug] Rendering cached inline template.
[Tue May 21 01:37:52 2013] [debug] Rendering cached inline template.
[Tue May 21 01:37:52 2013] [debug] 404 Not Found (0.003548s, 281.849/s).
[Tue May 21 01:39:18 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 01:39:18 2013] [debug] GET "/forest/0".
[Tue May 21 01:39:18 2013] [debug] Template "not_found.development.html.ep" not found.
[Tue May 21 01:39:18 2013] [debug] Template "not_found.html.ep" not found.
[Tue May 21 01:39:18 2013] [debug] Rendering inline template.
[Tue May 21 01:39:18 2013] [debug] Rendering inline template.
[Tue May 21 01:39:18 2013] [debug] 404 Not Found (0.010952s, 91.308/s).
[Tue May 21 01:40:06 2013] [debug] GET "/forest/".
[Tue May 21 01:40:06 2013] [debug] Routing to controller "AnnoTree::Forest" and action "list".
[Tue May 21 01:40:06 2013] [debug] Rendering template "forest/list.json.ep".
[Tue May 21 01:40:06 2013] [debug] 200 OK (0.002313s, 432.339/s).
[Tue May 21 01:40:08 2013] [debug] GET "/forest".
[Tue May 21 01:40:08 2013] [debug] Routing to controller "AnnoTree::Forest" and action "list".
[Tue May 21 01:40:08 2013] [debug] Rendering cached template "forest/list.json.ep".
[Tue May 21 01:40:08 2013] [debug] 200 OK (0.000570s, 1754.386/s).
[Tue May 21 01:40:11 2013] [debug] GET "/forest/1".
[Tue May 21 01:40:11 2013] [debug] Template "not_found.development.html.ep" not found.
[Tue May 21 01:40:11 2013] [debug] Template "not_found.html.ep" not found.
[Tue May 21 01:40:11 2013] [debug] Rendering cached inline template.
[Tue May 21 01:40:11 2013] [debug] Rendering cached inline template.
[Tue May 21 01:40:11 2013] [debug] 404 Not Found (0.003526s, 283.607/s).
[Tue May 21 01:40:31 2013] [debug] GET "/forest/werwe".
[Tue May 21 01:40:31 2013] [debug] Template "not_found.development.html.ep" not found.
[Tue May 21 01:40:31 2013] [debug] Template "not_found.html.ep" not found.
[Tue May 21 01:40:31 2013] [debug] Rendering cached inline template.
[Tue May 21 01:40:31 2013] [debug] Rendering cached inline template.
[Tue May 21 01:40:31 2013] [debug] 404 Not Found (0.003685s, 271.370/s).
[Tue May 21 01:40:35 2013] [debug] GET "/forest/0".
[Tue May 21 01:40:35 2013] [debug] Template "not_found.development.html.ep" not found.
[Tue May 21 01:40:35 2013] [debug] Template "not_found.html.ep" not found.
[Tue May 21 01:40:35 2013] [debug] Rendering cached inline template.
[Tue May 21 01:40:35 2013] [debug] Rendering cached inline template.
[Tue May 21 01:40:35 2013] [debug] 404 Not Found (0.003844s, 260.146/s).
[Tue May 21 01:41:38 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 01:41:38 2013] [debug] GET "/forest/0".
[Tue May 21 01:41:38 2013] [debug] Template "not_found.development.html.ep" not found.
[Tue May 21 01:41:38 2013] [debug] Template "not_found.html.ep" not found.
[Tue May 21 01:41:38 2013] [debug] Rendering inline template.
[Tue May 21 01:41:38 2013] [debug] Rendering inline template.
[Tue May 21 01:41:38 2013] [debug] 404 Not Found (0.011038s, 90.596/s).
[Tue May 21 01:41:38 2013] [debug] GET "/forest/0".
[Tue May 21 01:41:38 2013] [debug] Template "not_found.development.html.ep" not found.
[Tue May 21 01:41:38 2013] [debug] Template "not_found.html.ep" not found.
[Tue May 21 01:41:38 2013] [debug] Rendering cached inline template.
[Tue May 21 01:41:38 2013] [debug] Rendering cached inline template.
[Tue May 21 01:41:38 2013] [debug] 404 Not Found (0.003419s, 292.483/s).
[Tue May 21 01:41:39 2013] [debug] GET "/forest/0".
[Tue May 21 01:41:39 2013] [debug] Template "not_found.development.html.ep" not found.
[Tue May 21 01:41:39 2013] [debug] Template "not_found.html.ep" not found.
[Tue May 21 01:41:39 2013] [debug] Rendering cached inline template.
[Tue May 21 01:41:39 2013] [debug] Rendering cached inline template.
[Tue May 21 01:41:39 2013] [debug] 404 Not Found (0.003395s, 294.551/s).
[Tue May 21 01:41:39 2013] [debug] GET "/forest/0".
[Tue May 21 01:41:39 2013] [debug] Template "not_found.development.html.ep" not found.
[Tue May 21 01:41:39 2013] [debug] Template "not_found.html.ep" not found.
[Tue May 21 01:41:39 2013] [debug] Rendering cached inline template.
[Tue May 21 01:41:39 2013] [debug] Rendering cached inline template.
[Tue May 21 01:41:39 2013] [debug] 404 Not Found (0.003394s, 294.638/s).
[Tue May 21 01:43:05 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 01:43:05 2013] [debug] GET "/forest/0".
[Tue May 21 01:43:05 2013] [debug] Template "not_found.development.html.ep" not found.
[Tue May 21 01:43:05 2013] [debug] Template "not_found.html.ep" not found.
[Tue May 21 01:43:05 2013] [debug] Rendering inline template.
[Tue May 21 01:43:05 2013] [debug] Rendering inline template.
[Tue May 21 01:43:05 2013] [debug] 404 Not Found (0.011128s, 89.863/s).
[Tue May 21 01:43:06 2013] [debug] GET "/forest/0".
[Tue May 21 01:43:06 2013] [debug] Template "not_found.development.html.ep" not found.
[Tue May 21 01:43:06 2013] [debug] Template "not_found.html.ep" not found.
[Tue May 21 01:43:06 2013] [debug] Rendering cached inline template.
[Tue May 21 01:43:06 2013] [debug] Rendering cached inline template.
[Tue May 21 01:43:06 2013] [debug] 404 Not Found (0.003344s, 299.043/s).
[Tue May 21 01:43:06 2013] [debug] GET "/forest/0".
[Tue May 21 01:43:06 2013] [debug] Template "not_found.development.html.ep" not found.
[Tue May 21 01:43:06 2013] [debug] Template "not_found.html.ep" not found.
[Tue May 21 01:43:06 2013] [debug] Rendering cached inline template.
[Tue May 21 01:43:06 2013] [debug] Rendering cached inline template.
[Tue May 21 01:43:06 2013] [debug] 404 Not Found (0.003384s, 295.508/s).
[Tue May 21 01:43:06 2013] [debug] GET "/forest/0".
[Tue May 21 01:43:06 2013] [debug] Template "not_found.development.html.ep" not found.
[Tue May 21 01:43:06 2013] [debug] Template "not_found.html.ep" not found.
[Tue May 21 01:43:06 2013] [debug] Rendering cached inline template.
[Tue May 21 01:43:06 2013] [debug] Rendering cached inline template.
[Tue May 21 01:43:06 2013] [debug] 404 Not Found (0.003463s, 288.767/s).
[Tue May 21 01:43:07 2013] [debug] GET "/forest/0".
[Tue May 21 01:43:07 2013] [debug] Template "not_found.development.html.ep" not found.
[Tue May 21 01:43:07 2013] [debug] Template "not_found.html.ep" not found.
[Tue May 21 01:43:07 2013] [debug] Rendering cached inline template.
[Tue May 21 01:43:07 2013] [debug] Rendering cached inline template.
[Tue May 21 01:43:07 2013] [debug] 404 Not Found (0.003393s, 294.724/s).
[Tue May 21 01:43:07 2013] [debug] GET "/forest/0".
[Tue May 21 01:43:07 2013] [debug] Template "not_found.development.html.ep" not found.
[Tue May 21 01:43:07 2013] [debug] Template "not_found.html.ep" not found.
[Tue May 21 01:43:07 2013] [debug] Rendering cached inline template.
[Tue May 21 01:43:07 2013] [debug] Rendering cached inline template.
[Tue May 21 01:43:07 2013] [debug] 404 Not Found (0.003596s, 278.087/s).
[Tue May 21 01:43:07 2013] [debug] GET "/forest/0".
[Tue May 21 01:43:07 2013] [debug] Template "not_found.development.html.ep" not found.
[Tue May 21 01:43:07 2013] [debug] Template "not_found.html.ep" not found.
[Tue May 21 01:43:07 2013] [debug] Rendering cached inline template.
[Tue May 21 01:43:07 2013] [debug] Rendering cached inline template.
[Tue May 21 01:43:07 2013] [debug] 404 Not Found (0.003520s, 284.091/s).
[Tue May 21 01:43:07 2013] [debug] GET "/forest/0".
[Tue May 21 01:43:07 2013] [debug] Template "not_found.development.html.ep" not found.
[Tue May 21 01:43:07 2013] [debug] Template "not_found.html.ep" not found.
[Tue May 21 01:43:07 2013] [debug] Rendering cached inline template.
[Tue May 21 01:43:07 2013] [debug] Rendering cached inline template.
[Tue May 21 01:43:07 2013] [debug] 404 Not Found (0.003465s, 288.600/s).
[Tue May 21 01:43:07 2013] [debug] GET "/forest/0".
[Tue May 21 01:43:07 2013] [debug] Template "not_found.development.html.ep" not found.
[Tue May 21 01:43:07 2013] [debug] Template "not_found.html.ep" not found.
[Tue May 21 01:43:07 2013] [debug] Rendering cached inline template.
[Tue May 21 01:43:07 2013] [debug] Rendering cached inline template.
[Tue May 21 01:43:07 2013] [debug] 404 Not Found (0.003482s, 287.191/s).
[Tue May 21 01:43:45 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 01:43:45 2013] [debug] GET "/forest/0".
[Tue May 21 01:43:45 2013] [debug] Routing to controller "AnnoTree::Forest" and action "unique".
[Tue May 21 01:43:45 2013] [debug] Rendering template "forest/unique.json.ep".
[Tue May 21 01:43:45 2013] [debug] 200 OK (0.002958s, 338.066/s).
[Tue May 21 01:43:48 2013] [debug] GET "/forest/1".
[Tue May 21 01:43:48 2013] [debug] Routing to controller "AnnoTree::Forest" and action "unique".
[Tue May 21 01:43:48 2013] [debug] Rendering cached template "forest/unique.json.ep".
[Tue May 21 01:43:48 2013] [debug] 200 OK (0.000592s, 1689.189/s).
[Tue May 21 01:45:05 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 01:45:05 2013] [debug] GET "/forest/0".
[Tue May 21 01:45:05 2013] [debug] Template "not_found.development.html.ep" not found.
[Tue May 21 01:45:05 2013] [debug] Template "not_found.html.ep" not found.
[Tue May 21 01:45:05 2013] [debug] Rendering inline template.
[Tue May 21 01:45:05 2013] [debug] Rendering inline template.
[Tue May 21 01:45:05 2013] [debug] 404 Not Found (0.011143s, 89.742/s).
[Tue May 21 02:02:16 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 02:02:16 2013] [debug] GET "/forest/0".
[Tue May 21 02:02:16 2013] [debug] Template "not_found.development.html.ep" not found.
[Tue May 21 02:02:16 2013] [debug] Template "not_found.html.ep" not found.
[Tue May 21 02:02:16 2013] [debug] Rendering inline template.
[Tue May 21 02:02:16 2013] [debug] Rendering inline template.
[Tue May 21 02:02:16 2013] [debug] 404 Not Found (0.010996s, 90.942/s).
[Tue May 21 02:02:18 2013] [debug] GET "/forest/0".
[Tue May 21 02:02:18 2013] [debug] Template "not_found.development.html.ep" not found.
[Tue May 21 02:02:18 2013] [debug] Template "not_found.html.ep" not found.
[Tue May 21 02:02:18 2013] [debug] Rendering cached inline template.
[Tue May 21 02:02:18 2013] [debug] Rendering cached inline template.
[Tue May 21 02:02:18 2013] [debug] 404 Not Found (0.003881s, 257.666/s).
[Tue May 21 02:02:19 2013] [debug] GET "/forest/0".
[Tue May 21 02:02:19 2013] [debug] Template "not_found.development.html.ep" not found.
[Tue May 21 02:02:19 2013] [debug] Template "not_found.html.ep" not found.
[Tue May 21 02:02:19 2013] [debug] Rendering cached inline template.
[Tue May 21 02:02:19 2013] [debug] Rendering cached inline template.
[Tue May 21 02:02:19 2013] [debug] 404 Not Found (0.003366s, 297.089/s).
[Tue May 21 02:03:58 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 02:03:58 2013] [debug] GET "/forest/0".
[Tue May 21 02:03:58 2013] [debug] Routing to controller "AnnoTree::Forest" and action "unique".
[Tue May 21 02:03:58 2013] [debug] Rendering template "forest/unique.json.ep".
[Tue May 21 02:03:58 2013] [debug] 200 OK (0.003033s, 329.707/s).
[Tue May 21 02:04:02 2013] [debug] GET "/forest/we".
[Tue May 21 02:04:02 2013] [debug] Template "not_found.development.html.ep" not found.
[Tue May 21 02:04:02 2013] [debug] Template "not_found.html.ep" not found.
[Tue May 21 02:04:02 2013] [debug] Rendering inline template.
[Tue May 21 02:04:02 2013] [debug] Rendering inline template.
[Tue May 21 02:04:02 2013] [debug] 404 Not Found (0.010514s, 95.111/s).
[Tue May 21 02:04:04 2013] [debug] GET "/forest/w".
[Tue May 21 02:04:04 2013] [debug] Template "not_found.development.html.ep" not found.
[Tue May 21 02:04:04 2013] [debug] Template "not_found.html.ep" not found.
[Tue May 21 02:04:04 2013] [debug] Rendering cached inline template.
[Tue May 21 02:04:04 2013] [debug] Rendering cached inline template.
[Tue May 21 02:04:04 2013] [debug] 404 Not Found (0.003939s, 253.872/s).
[Tue May 21 02:11:26 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 02:11:26 2013] [debug] GET "/forest/0".
[Tue May 21 02:11:26 2013] [debug] Template "not_found.development.html.ep" not found.
[Tue May 21 02:11:26 2013] [debug] Template "not_found.html.ep" not found.
[Tue May 21 02:11:26 2013] [debug] Rendering inline template.
[Tue May 21 02:11:26 2013] [debug] Rendering inline template.
[Tue May 21 02:11:26 2013] [debug] 404 Not Found (0.011374s, 87.920/s).
[Tue May 21 02:11:31 2013] [debug] GET "/forest/0".
[Tue May 21 02:11:31 2013] [debug] Template "not_found.development.html.ep" not found.
[Tue May 21 02:11:31 2013] [debug] Template "not_found.html.ep" not found.
[Tue May 21 02:11:31 2013] [debug] Rendering cached inline template.
[Tue May 21 02:11:31 2013] [debug] Rendering cached inline template.
[Tue May 21 02:11:31 2013] [debug] 404 Not Found (0.003458s, 289.184/s).
[Tue May 21 02:11:31 2013] [debug] GET "/forest/0".
[Tue May 21 02:11:31 2013] [debug] Template "not_found.development.html.ep" not found.
[Tue May 21 02:11:31 2013] [debug] Template "not_found.html.ep" not found.
[Tue May 21 02:11:31 2013] [debug] Rendering cached inline template.
[Tue May 21 02:11:31 2013] [debug] Rendering cached inline template.
[Tue May 21 02:11:31 2013] [debug] 404 Not Found (0.003426s, 291.886/s).
[Tue May 21 02:11:32 2013] [debug] GET "/forest/0".
[Tue May 21 02:11:32 2013] [debug] Template "not_found.development.html.ep" not found.
[Tue May 21 02:11:32 2013] [debug] Template "not_found.html.ep" not found.
[Tue May 21 02:11:32 2013] [debug] Rendering cached inline template.
[Tue May 21 02:11:32 2013] [debug] Rendering cached inline template.
[Tue May 21 02:11:32 2013] [debug] 404 Not Found (0.003390s, 294.985/s).
[Tue May 21 02:11:32 2013] [debug] GET "/forest/0".
[Tue May 21 02:11:32 2013] [debug] Template "not_found.development.html.ep" not found.
[Tue May 21 02:11:32 2013] [debug] Template "not_found.html.ep" not found.
[Tue May 21 02:11:32 2013] [debug] Rendering cached inline template.
[Tue May 21 02:11:32 2013] [debug] Rendering cached inline template.
[Tue May 21 02:11:32 2013] [debug] 404 Not Found (0.003446s, 290.192/s).
[Tue May 21 02:11:32 2013] [debug] GET "/forest/0".
[Tue May 21 02:11:32 2013] [debug] Template "not_found.development.html.ep" not found.
[Tue May 21 02:11:32 2013] [debug] Template "not_found.html.ep" not found.
[Tue May 21 02:11:32 2013] [debug] Rendering cached inline template.
[Tue May 21 02:11:32 2013] [debug] Rendering cached inline template.
[Tue May 21 02:11:32 2013] [debug] 404 Not Found (0.003404s, 293.772/s).
[Tue May 21 02:11:32 2013] [debug] GET "/forest/0".
[Tue May 21 02:11:32 2013] [debug] Template "not_found.development.html.ep" not found.
[Tue May 21 02:11:32 2013] [debug] Template "not_found.html.ep" not found.
[Tue May 21 02:11:32 2013] [debug] Rendering cached inline template.
[Tue May 21 02:11:32 2013] [debug] Rendering cached inline template.
[Tue May 21 02:11:32 2013] [debug] 404 Not Found (0.003451s, 289.771/s).
[Tue May 21 02:13:07 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 02:13:07 2013] [debug] GET "/forest/0".
[Tue May 21 02:13:07 2013] [debug] Routing to controller "AnnoTree::Forest" and action "unique".
[Tue May 21 02:13:07 2013] [debug] Rendering template "forest/unique.json.ep".
[Tue May 21 02:13:07 2013] [debug] 200 OK (0.003016s, 331.565/s).
[Tue May 21 02:13:10 2013] [debug] GET "/forest/1".
[Tue May 21 02:13:10 2013] [debug] Routing to controller "AnnoTree::Forest" and action "unique".
[Tue May 21 02:13:10 2013] [debug] Rendering cached template "forest/unique.json.ep".
[Tue May 21 02:13:10 2013] [debug] 200 OK (0.000551s, 1814.882/s).
[Tue May 21 02:13:12 2013] [debug] GET "/forest/2".
[Tue May 21 02:13:12 2013] [debug] Routing to controller "AnnoTree::Forest" and action "unique".
[Tue May 21 02:13:12 2013] [debug] Rendering cached template "forest/unique.json.ep".
[Tue May 21 02:13:12 2013] [debug] 200 OK (0.000576s, 1736.111/s).
[Tue May 21 02:54:31 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 02:54:31 2013] [debug] GET "/forest/".
[Tue May 21 02:54:31 2013] [debug] Routing to controller "AnnoTree::Forest" and action "list".
[Tue May 21 02:54:31 2013] [debug] Rendering template "forest/list.json.ep".
[Tue May 21 02:54:31 2013] [debug] 200 OK (0.003180s, 314.465/s).
[Tue May 21 02:58:20 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 02:58:20 2013] [debug] GET "/0/tree/".
[Tue May 21 02:58:20 2013] [error] syntax error at /home/matt/Documents/AnnoTree/WebServices/anno_tree/script/../lib/AnnoTree/Tree.pm line 6, near "@trees (
    "
Global symbol "$tree" requires explicit package name at /home/matt/Documents/AnnoTree/WebServices/anno_tree/script/../lib/AnnoTree/Tree.pm line 26.
Global symbol "@trees" requires explicit package name at /home/matt/Documents/AnnoTree/WebServices/anno_tree/script/../lib/AnnoTree/Tree.pm line 26.
Global symbol "@trees" requires explicit package name at /home/matt/Documents/AnnoTree/WebServices/anno_tree/script/../lib/AnnoTree/Tree.pm line 27.
Compilation failed in require at (eval 231) line 1.

[Tue May 21 02:58:20 2013] [debug] Template "exception.development.html.ep" not found.
[Tue May 21 02:58:20 2013] [debug] Template "exception.html.ep" not found.
[Tue May 21 02:58:20 2013] [debug] Rendering inline template.
[Tue May 21 02:58:20 2013] [debug] Rendering inline template.
[Tue May 21 02:58:20 2013] [debug] 500 Internal Server Error (0.016616s, 60.183/s).
[Tue May 21 02:58:37 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 02:58:37 2013] [debug] GET "/0/tree/".
[Tue May 21 02:58:37 2013] [error] syntax error at /home/matt/Documents/AnnoTree/WebServices/anno_tree/script/../lib/AnnoTree/Tree.pm line 6, near "@trees (
    "
Global symbol "$tree" requires explicit package name at /home/matt/Documents/AnnoTree/WebServices/anno_tree/script/../lib/AnnoTree/Tree.pm line 26.
Global symbol "@trees" requires explicit package name at /home/matt/Documents/AnnoTree/WebServices/anno_tree/script/../lib/AnnoTree/Tree.pm line 26.
Global symbol "@tree" requires explicit package name at /home/matt/Documents/AnnoTree/WebServices/anno_tree/script/../lib/AnnoTree/Tree.pm line 27.
Compilation failed in require at (eval 231) line 1.

[Tue May 21 02:58:37 2013] [debug] Template "exception.development.html.ep" not found.
[Tue May 21 02:58:37 2013] [debug] Template "exception.html.ep" not found.
[Tue May 21 02:58:37 2013] [debug] Rendering inline template.
[Tue May 21 02:58:37 2013] [debug] Rendering inline template.
[Tue May 21 02:58:37 2013] [debug] 500 Internal Server Error (0.016450s, 60.790/s).
[Tue May 21 02:58:53 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 02:58:53 2013] [debug] GET "/0/tree/".
[Tue May 21 02:58:53 2013] [error] syntax error at /home/matt/Documents/AnnoTree/WebServices/anno_tree/script/../lib/AnnoTree/Tree.pm line 6, near "@trees (
    "
Global symbol "@trees" requires explicit package name at /home/matt/Documents/AnnoTree/WebServices/anno_tree/script/../lib/AnnoTree/Tree.pm line 26.
Global symbol "@tree" requires explicit package name at /home/matt/Documents/AnnoTree/WebServices/anno_tree/script/../lib/AnnoTree/Tree.pm line 27.
Compilation failed in require at (eval 231) line 1.

[Tue May 21 02:58:53 2013] [debug] Template "exception.development.html.ep" not found.
[Tue May 21 02:58:53 2013] [debug] Template "exception.html.ep" not found.
[Tue May 21 02:58:53 2013] [debug] Rendering inline template.
[Tue May 21 02:58:53 2013] [debug] Rendering inline template.
[Tue May 21 02:58:53 2013] [debug] 500 Internal Server Error (0.016421s, 60.898/s).
[Tue May 21 02:59:25 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 02:59:25 2013] [debug] GET "/0/tree/".
[Tue May 21 02:59:25 2013] [error] syntax error at /home/matt/Documents/AnnoTree/WebServices/anno_tree/script/../lib/AnnoTree/Tree.pm line 6, near "@trees (
    "
Global symbol "@trees" requires explicit package name at /home/matt/Documents/AnnoTree/WebServices/anno_tree/script/../lib/AnnoTree/Tree.pm line 26.
Global symbol "@tree" requires explicit package name at /home/matt/Documents/AnnoTree/WebServices/anno_tree/script/../lib/AnnoTree/Tree.pm line 27.
Compilation failed in require at (eval 231) line 1.

[Tue May 21 02:59:25 2013] [debug] Template "exception.development.html.ep" not found.
[Tue May 21 02:59:25 2013] [debug] Template "exception.html.ep" not found.
[Tue May 21 02:59:25 2013] [debug] Rendering inline template.
[Tue May 21 02:59:25 2013] [debug] Rendering inline template.
[Tue May 21 02:59:25 2013] [debug] 500 Internal Server Error (0.016315s, 61.293/s).
[Tue May 21 03:00:12 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 03:00:12 2013] [debug] GET "/0/tree/".
[Tue May 21 03:00:12 2013] [error] syntax error at /home/matt/Documents/AnnoTree/WebServices/anno_tree/script/../lib/AnnoTree/Tree.pm line 6, near "@trees (
    "
Global symbol "@trees" requires explicit package name at /home/matt/Documents/AnnoTree/WebServices/anno_tree/script/../lib/AnnoTree/Tree.pm line 26.
Global symbol "@tree" requires explicit package name at /home/matt/Documents/AnnoTree/WebServices/anno_tree/script/../lib/AnnoTree/Tree.pm line 27.
Compilation failed in require at (eval 231) line 1.

[Tue May 21 03:00:12 2013] [debug] Template "exception.development.html.ep" not found.
[Tue May 21 03:00:12 2013] [debug] Template "exception.html.ep" not found.
[Tue May 21 03:00:12 2013] [debug] Rendering inline template.
[Tue May 21 03:00:12 2013] [debug] Rendering inline template.
[Tue May 21 03:00:12 2013] [debug] 500 Internal Server Error (0.016342s, 61.192/s).
[Tue May 21 03:00:29 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 03:00:29 2013] [debug] GET "/0/tree/".
[Tue May 21 03:00:29 2013] [error] syntax error at /home/matt/Documents/AnnoTree/WebServices/anno_tree/script/../lib/AnnoTree/Tree.pm line 6, near "@trees (
    "
Global symbol "@trees" requires explicit package name at /home/matt/Documents/AnnoTree/WebServices/anno_tree/script/../lib/AnnoTree/Tree.pm line 26.
Global symbol "@tree" requires explicit package name at /home/matt/Documents/AnnoTree/WebServices/anno_tree/script/../lib/AnnoTree/Tree.pm line 27.
Compilation failed in require at (eval 231) line 1.

[Tue May 21 03:00:29 2013] [debug] Template "exception.development.html.ep" not found.
[Tue May 21 03:00:29 2013] [debug] Template "exception.html.ep" not found.
[Tue May 21 03:00:29 2013] [debug] Rendering inline template.
[Tue May 21 03:00:29 2013] [debug] Rendering inline template.
[Tue May 21 03:00:29 2013] [debug] 500 Internal Server Error (0.016627s, 60.143/s).
[Tue May 21 03:00:30 2013] [debug] GET "/0/tree/".
[Tue May 21 03:00:30 2013] [debug] Routing to controller "AnnoTree::Tree" and action "list".
[Tue May 21 03:00:30 2013] [debug] Action not found in controller.
[Tue May 21 03:00:30 2013] [debug] Template "tree/list.html.ep" not found.
[Tue May 21 03:00:30 2013] [debug] Template "not_found.development.html.ep" not found.
[Tue May 21 03:00:30 2013] [debug] Template "not_found.html.ep" not found.
[Tue May 21 03:00:30 2013] [debug] Rendering inline template.
[Tue May 21 03:00:30 2013] [debug] Rendering inline template.
[Tue May 21 03:00:30 2013] [debug] 404 Not Found (0.010366s, 96.469/s).
[Tue May 21 03:00:56 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 03:00:56 2013] [debug] GET "/0/tree/".
[Tue May 21 03:00:56 2013] [error] syntax error at /home/matt/Documents/AnnoTree/WebServices/anno_tree/script/../lib/AnnoTree/Tree.pm line 6, near "@trees (
    "
Global symbol "@trees" requires explicit package name at /home/matt/Documents/AnnoTree/WebServices/anno_tree/script/../lib/AnnoTree/Tree.pm line 26.
Global symbol "@tree" requires explicit package name at /home/matt/Documents/AnnoTree/WebServices/anno_tree/script/../lib/AnnoTree/Tree.pm line 27.
Compilation failed in require at (eval 231) line 1.

[Tue May 21 03:00:56 2013] [debug] Template "exception.development.html.ep" not found.
[Tue May 21 03:00:56 2013] [debug] Template "exception.html.ep" not found.
[Tue May 21 03:00:56 2013] [debug] Rendering inline template.
[Tue May 21 03:00:56 2013] [debug] Rendering inline template.
[Tue May 21 03:00:56 2013] [debug] 500 Internal Server Error (0.016158s, 61.889/s).
[Tue May 21 03:01:22 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 03:01:22 2013] [debug] GET "/0/tree/".
[Tue May 21 03:01:22 2013] [error] syntax error at /home/matt/Documents/AnnoTree/WebServices/anno_tree/script/../lib/AnnoTree/Tree.pm line 6, near "@trees (
    "
Global symbol "@trees" requires explicit package name at /home/matt/Documents/AnnoTree/WebServices/anno_tree/script/../lib/AnnoTree/Tree.pm line 26.
Compilation failed in require at (eval 231) line 1.

[Tue May 21 03:01:22 2013] [debug] Template "exception.development.html.ep" not found.
[Tue May 21 03:01:22 2013] [debug] Template "exception.html.ep" not found.
[Tue May 21 03:01:22 2013] [debug] Rendering inline template.
[Tue May 21 03:01:22 2013] [debug] Rendering inline template.
[Tue May 21 03:01:22 2013] [debug] 500 Internal Server Error (0.016150s, 61.920/s).
[Tue May 21 03:01:52 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 03:01:52 2013] [debug] GET "/0/tree/".
[Tue May 21 03:01:52 2013] [error] syntax error at /home/matt/Documents/AnnoTree/WebServices/anno_tree/script/../lib/AnnoTree/Tree.pm line 6, near "@trees (
    "
Global symbol "@trees" requires explicit package name at /home/matt/Documents/AnnoTree/WebServices/anno_tree/script/../lib/AnnoTree/Tree.pm line 26.
Compilation failed in require at (eval 231) line 1.

[Tue May 21 03:01:52 2013] [debug] Template "exception.development.html.ep" not found.
[Tue May 21 03:01:52 2013] [debug] Template "exception.html.ep" not found.
[Tue May 21 03:01:52 2013] [debug] Rendering inline template.
[Tue May 21 03:01:52 2013] [debug] Rendering inline template.
[Tue May 21 03:01:52 2013] [debug] 500 Internal Server Error (0.016320s, 61.275/s).
[Tue May 21 03:01:54 2013] [debug] GET "/0/tree/".
[Tue May 21 03:01:54 2013] [debug] Routing to controller "AnnoTree::Tree" and action "list".
[Tue May 21 03:01:54 2013] [debug] Action not found in controller.
[Tue May 21 03:01:54 2013] [debug] Template "tree/list.html.ep" not found.
[Tue May 21 03:01:54 2013] [debug] Template "not_found.development.html.ep" not found.
[Tue May 21 03:01:54 2013] [debug] Template "not_found.html.ep" not found.
[Tue May 21 03:01:54 2013] [debug] Rendering inline template.
[Tue May 21 03:01:54 2013] [debug] Rendering inline template.
[Tue May 21 03:01:54 2013] [debug] 404 Not Found (0.010404s, 96.117/s).
[Tue May 21 03:01:55 2013] [debug] GET "/0/tree/".
[Tue May 21 03:01:55 2013] [debug] Routing to controller "AnnoTree::Tree" and action "list".
[Tue May 21 03:01:55 2013] [debug] Action not found in controller.
[Tue May 21 03:01:55 2013] [debug] Template "tree/list.html.ep" not found.
[Tue May 21 03:01:55 2013] [debug] Template "not_found.development.html.ep" not found.
[Tue May 21 03:01:55 2013] [debug] Template "not_found.html.ep" not found.
[Tue May 21 03:01:55 2013] [debug] Rendering cached inline template.
[Tue May 21 03:01:55 2013] [debug] Rendering cached inline template.
[Tue May 21 03:01:55 2013] [debug] 404 Not Found (0.003470s, 288.184/s).
[Tue May 21 03:02:12 2013] [debug] GET "/0/tree/".
[Tue May 21 03:02:12 2013] [debug] Routing to controller "AnnoTree::Tree" and action "list".
[Tue May 21 03:02:12 2013] [debug] Action not found in controller.
[Tue May 21 03:02:12 2013] [debug] Template "tree/list.html.ep" not found.
[Tue May 21 03:02:12 2013] [debug] Template "not_found.development.html.ep" not found.
[Tue May 21 03:02:12 2013] [debug] Template "not_found.html.ep" not found.
[Tue May 21 03:02:12 2013] [debug] Rendering cached inline template.
[Tue May 21 03:02:12 2013] [debug] Rendering cached inline template.
[Tue May 21 03:02:12 2013] [debug] 404 Not Found (0.003433s, 291.290/s).
[Tue May 21 03:04:38 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 03:04:38 2013] [debug] GET "/0/tree/".
[Tue May 21 03:04:38 2013] [error] syntax error at /home/matt/Documents/AnnoTree/WebServices/anno_tree/script/../lib/AnnoTree/Tree.pm line 6, near "@trees (
    "
syntax error at /home/matt/Documents/AnnoTree/WebServices/anno_tree/script/../lib/AnnoTree/Tree.pm line 24, near "->param{"
Global symbol "$self" requires explicit package name at /home/matt/Documents/AnnoTree/WebServices/anno_tree/script/../lib/AnnoTree/Tree.pm line 26.
Global symbol "$forestid" requires explicit package name at /home/matt/Documents/AnnoTree/WebServices/anno_tree/script/../lib/AnnoTree/Tree.pm line 26.
Global symbol "$self" requires explicit package name at /home/matt/Documents/AnnoTree/WebServices/anno_tree/script/../lib/AnnoTree/Tree.pm line 32.
syntax error at /home/matt/Documents/AnnoTree/WebServices/anno_tree/script/../lib/AnnoTree/Tree.pm line 33, near "}"
Compilation failed in require at (eval 231) line 1.

[Tue May 21 03:04:38 2013] [debug] Template "exception.development.html.ep" not found.
[Tue May 21 03:04:38 2013] [debug] Template "exception.html.ep" not found.
[Tue May 21 03:04:38 2013] [debug] Rendering inline template.
[Tue May 21 03:04:38 2013] [debug] Rendering inline template.
[Tue May 21 03:04:38 2013] [debug] 500 Internal Server Error (0.016372s, 61.080/s).
[Tue May 21 03:05:51 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 03:05:51 2013] [debug] GET "/0/tree/".
[Tue May 21 03:05:51 2013] [error] syntax error at /home/matt/Documents/AnnoTree/WebServices/anno_tree/script/../lib/AnnoTree/Tree.pm line 6, near "@trees (
    "
syntax error at /home/matt/Documents/AnnoTree/WebServices/anno_tree/script/../lib/AnnoTree/Tree.pm line 24, near "->param{"
Global symbol "$self" requires explicit package name at /home/matt/Documents/AnnoTree/WebServices/anno_tree/script/../lib/AnnoTree/Tree.pm line 26.
Global symbol "$forestid" requires explicit package name at /home/matt/Documents/AnnoTree/WebServices/anno_tree/script/../lib/AnnoTree/Tree.pm line 26.
Global symbol "$self" requires explicit package name at /home/matt/Documents/AnnoTree/WebServices/anno_tree/script/../lib/AnnoTree/Tree.pm line 32.
syntax error at /home/matt/Documents/AnnoTree/WebServices/anno_tree/script/../lib/AnnoTree/Tree.pm line 33, near "}"
Compilation failed in require at (eval 231) line 1.

[Tue May 21 03:05:51 2013] [debug] Template "exception.development.html.ep" not found.
[Tue May 21 03:05:51 2013] [debug] Template "exception.html.ep" not found.
[Tue May 21 03:05:51 2013] [debug] Rendering inline template.
[Tue May 21 03:05:51 2013] [debug] Rendering inline template.
[Tue May 21 03:05:51 2013] [debug] 500 Internal Server Error (0.016100s, 62.112/s).
[Tue May 21 03:06:48 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 03:06:48 2013] [debug] GET "/0/tree/".
[Tue May 21 03:06:48 2013] [error] syntax error at /home/matt/Documents/AnnoTree/WebServices/anno_tree/script/../lib/AnnoTree/Tree.pm line 6, near "@trees (
    "
Global symbol "@trees" requires explicit package name at /home/matt/Documents/AnnoTree/WebServices/anno_tree/script/../lib/AnnoTree/Tree.pm line 28.
Compilation failed in require at (eval 231) line 1.

[Tue May 21 03:06:48 2013] [debug] Template "exception.development.html.ep" not found.
[Tue May 21 03:06:48 2013] [debug] Template "exception.html.ep" not found.
[Tue May 21 03:06:48 2013] [debug] Rendering inline template.
[Tue May 21 03:06:48 2013] [debug] Rendering inline template.
[Tue May 21 03:06:48 2013] [debug] 500 Internal Server Error (0.016389s, 61.017/s).
[Tue May 21 03:07:11 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 03:07:11 2013] [debug] GET "/0/tree/".
[Tue May 21 03:07:11 2013] [error] syntax error at /home/matt/Documents/AnnoTree/WebServices/anno_tree/script/../lib/AnnoTree/Tree.pm line 6, near "@trees (
    "
Compilation failed in require at (eval 231) line 1.

[Tue May 21 03:07:11 2013] [debug] Template "exception.development.html.ep" not found.
[Tue May 21 03:07:11 2013] [debug] Template "exception.html.ep" not found.
[Tue May 21 03:07:11 2013] [debug] Rendering inline template.
[Tue May 21 03:07:11 2013] [debug] Rendering inline template.
[Tue May 21 03:07:11 2013] [debug] 500 Internal Server Error (0.016196s, 61.744/s).
[Tue May 21 03:07:39 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 03:07:39 2013] [debug] GET "/0/tree/".
[Tue May 21 03:07:39 2013] [debug] Routing to controller "AnnoTree::Tree" and action "list".
[Tue May 21 03:07:39 2013] [debug] 200 OK (0.000836s, 1196.172/s).
[Tue May 21 03:08:04 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 03:08:04 2013] [debug] GET "/0/tree/".
[Tue May 21 03:08:04 2013] [debug] Routing to controller "AnnoTree::Tree" and action "list".
[Tue May 21 03:08:04 2013] [debug] 200 OK (0.000868s, 1152.074/s).
[Tue May 21 03:08:04 2013] [error] Not a HASH reference at /home/matt/Documents/AnnoTree/WebServices/anno_tree/script/../lib/AnnoTree/Tree.pm line 29.

[Tue May 21 03:08:04 2013] [debug] Template "exception.development.html.ep" not found.
[Tue May 21 03:08:04 2013] [debug] Template "exception.html.ep" not found.
[Tue May 21 03:08:04 2013] [debug] Rendering inline template.
[Tue May 21 03:08:04 2013] [debug] Rendering inline template.
[Tue May 21 03:08:52 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 03:08:52 2013] [debug] GET "/0/tree/".
[Tue May 21 03:08:52 2013] [debug] Routing to controller "AnnoTree::Tree" and action "list".
[Tue May 21 03:08:52 2013] [debug] 200 OK (0.000924s, 1082.251/s).
[Tue May 21 03:08:52 2013] [error] Not a HASH reference at /home/matt/Documents/AnnoTree/WebServices/anno_tree/script/../lib/AnnoTree/Tree.pm line 29.

[Tue May 21 03:08:52 2013] [debug] Template "exception.development.html.ep" not found.
[Tue May 21 03:08:52 2013] [debug] Template "exception.html.ep" not found.
[Tue May 21 03:08:52 2013] [debug] Rendering inline template.
[Tue May 21 03:08:52 2013] [debug] Rendering inline template.
[Tue May 21 03:09:20 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 03:09:20 2013] [debug] GET "/0/tree/".
[Tue May 21 03:09:20 2013] [error] Global symbol "@tree" requires explicit package name at /home/matt/Documents/AnnoTree/WebServices/anno_tree/script/../lib/AnnoTree/Tree.pm line 29.
Compilation failed in require at (eval 231) line 1.

[Tue May 21 03:09:20 2013] [debug] Template "exception.development.html.ep" not found.
[Tue May 21 03:09:20 2013] [debug] Template "exception.html.ep" not found.
[Tue May 21 03:09:20 2013] [debug] Rendering inline template.
[Tue May 21 03:09:20 2013] [debug] Rendering inline template.
[Tue May 21 03:09:20 2013] [debug] 500 Internal Server Error (0.016361s, 61.121/s).
[Tue May 21 03:11:54 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 03:11:54 2013] [debug] GET "/0/tree/".
[Tue May 21 03:11:54 2013] [debug] Routing to controller "AnnoTree::Tree" and action "list".
[Tue May 21 03:11:54 2013] [debug] 200 OK (0.000885s, 1129.944/s).
[Tue May 21 03:13:58 2013] [info] Listening at "http://*:3000".
[Tue May 21 03:14:02 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 03:14:02 2013] [debug] GET "/0/tree/".
[Tue May 21 03:14:02 2013] [error] Global symbol "$msg" requires explicit package name at /home/matt/Documents/AnnoTree/WebServices/anno_tree/script/../lib/AnnoTree/Tree.pm line 31.
Global symbol "$self" requires explicit package name at /home/matt/Documents/AnnoTree/WebServices/anno_tree/script/../lib/AnnoTree/Tree.pm line 32.
Global symbol "$msg" requires explicit package name at /home/matt/Documents/AnnoTree/WebServices/anno_tree/script/../lib/AnnoTree/Tree.pm line 32.
Unmatched right curly bracket at /home/matt/Documents/AnnoTree/WebServices/anno_tree/script/../lib/AnnoTree/Tree.pm line 33, at end of line
syntax error at /home/matt/Documents/AnnoTree/WebServices/anno_tree/script/../lib/AnnoTree/Tree.pm line 33, near "}"
Compilation failed in require at (eval 231) line 1.

[Tue May 21 03:14:02 2013] [debug] Template "exception.development.html.ep" not found.
[Tue May 21 03:14:02 2013] [debug] Template "exception.html.ep" not found.
[Tue May 21 03:14:02 2013] [debug] Rendering inline template.
[Tue May 21 03:14:02 2013] [debug] Rendering inline template.
[Tue May 21 03:14:02 2013] [debug] 500 Internal Server Error (0.016303s, 61.338/s).
[Tue May 21 03:14:16 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 03:14:16 2013] [debug] GET "/0/tree/".
[Tue May 21 03:14:16 2013] [debug] Routing to controller "AnnoTree::Tree" and action "list".
[Tue May 21 03:14:16 2013] [debug] Rendering template "tree/list.json.ep".
[Tue May 21 03:14:16 2013] [debug] 200 OK (0.003126s, 319.898/s).
[Tue May 21 03:15:15 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 03:15:15 2013] [debug] GET "/0/tree/".
[Tue May 21 03:15:15 2013] [debug] Routing to controller "AnnoTree::Tree" and action "list".
[Tue May 21 03:15:15 2013] [debug] Rendering template "tree/list.json.ep".
[Tue May 21 03:15:15 2013] [debug] 200 OK (0.003050s, 327.869/s).
[Tue May 21 03:16:37 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 03:16:37 2013] [debug] GET "/0/tree/".
[Tue May 21 03:16:37 2013] [error] syntax error at /home/matt/Documents/AnnoTree/WebServices/anno_tree/script/../lib/AnnoTree/Tree.pm line 27, near """\"
Global symbol "$msg" requires explicit package name at /home/matt/Documents/AnnoTree/WebServices/anno_tree/script/../lib/AnnoTree/Tree.pm line 31.
Compilation failed in require at (eval 231) line 1.

[Tue May 21 03:16:37 2013] [debug] Template "exception.development.html.ep" not found.
[Tue May 21 03:16:37 2013] [debug] Template "exception.html.ep" not found.
[Tue May 21 03:16:37 2013] [debug] Rendering inline template.
[Tue May 21 03:16:37 2013] [debug] Rendering inline template.
[Tue May 21 03:16:37 2013] [debug] 500 Internal Server Error (0.016348s, 61.170/s).
[Tue May 21 03:17:46 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 03:17:46 2013] [debug] GET "/0/tree/".
[Tue May 21 03:17:46 2013] [debug] Routing to controller "AnnoTree::Tree" and action "list".
[Tue May 21 03:17:46 2013] [debug] Rendering template "tree/list.json.ep".
[Tue May 21 03:17:46 2013] [debug] 200 OK (0.003070s, 325.733/s).
[Tue May 21 11:16:04 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 11:16:04 2013] [debug] GET "/0/tree/".
[Tue May 21 11:16:04 2013] [debug] Routing to controller "AnnoTree::Tree" and action "list".
[Tue May 21 11:16:04 2013] [debug] Rendering template "tree/list.json.ep".
[Tue May 21 11:16:04 2013] [debug] 200 OK (0.003179s, 314.564/s).
[Tue May 21 11:16:05 2013] [debug] GET "/0/tree/".
[Tue May 21 11:16:05 2013] [debug] Routing to controller "AnnoTree::Tree" and action "list".
[Tue May 21 11:16:05 2013] [debug] Rendering cached template "tree/list.json.ep".
[Tue May 21 11:16:05 2013] [debug] 200 OK (0.000410s, 2439.024/s).
[Tue May 21 11:27:52 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 11:27:52 2013] [debug] GET "/0/tree/".
[Tue May 21 11:27:52 2013] [debug] Routing to controller "AnnoTree::Tree" and action "list".
[Tue May 21 11:27:52 2013] [debug] Rendering template "tree/list.json.ep".
[Tue May 21 11:27:52 2013] [debug] 200 OK (0.003066s, 326.158/s).
[Tue May 21 11:33:24 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 11:33:24 2013] [debug] GET "/0/tree/".
[Tue May 21 11:33:24 2013] [debug] Routing to controller "AnnoTree::Tree" and action "list".
[Tue May 21 11:33:24 2013] [debug] Rendering template "tree/list.json.ep".
[Tue May 21 11:33:24 2013] [debug] 200 OK (0.003219s, 310.655/s).
[Tue May 21 11:33:48 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 11:33:48 2013] [debug] GET "/0/tree/".
[Tue May 21 11:33:48 2013] [debug] Routing to controller "AnnoTree::Tree" and action "list".
[Tue May 21 11:33:48 2013] [debug] Rendering template "tree/list.json.ep".
[Tue May 21 11:33:48 2013] [debug] 200 OK (0.003262s, 306.560/s).
[Tue May 21 11:34:40 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 11:34:40 2013] [debug] GET "/0/tree/".
[Tue May 21 11:34:40 2013] [debug] Routing to controller "AnnoTree::Tree" and action "list".
[Tue May 21 11:34:40 2013] [debug] Rendering template "tree/list.json.ep".
[Tue May 21 11:34:40 2013] [debug] 200 OK (0.003079s, 324.781/s).
[Tue May 21 11:35:08 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 11:35:08 2013] [debug] GET "/0/tree/".
[Tue May 21 11:35:08 2013] [debug] Routing to controller "AnnoTree::Tree" and action "list".
[Tue May 21 11:35:08 2013] [debug] Rendering template "tree/list.json.ep".
[Tue May 21 11:35:08 2013] [debug] 200 OK (0.003112s, 321.337/s).
[Tue May 21 11:35:33 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 11:35:33 2013] [debug] GET "/0/tree/".
[Tue May 21 11:35:33 2013] [debug] Routing to controller "AnnoTree::Tree" and action "list".
[Tue May 21 11:35:33 2013] [debug] Rendering template "tree/list.json.ep".
[Tue May 21 11:35:33 2013] [debug] 200 OK (0.003096s, 322.997/s).
[Tue May 21 11:35:53 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 11:35:53 2013] [debug] GET "/0/tree/".
[Tue May 21 11:35:53 2013] [debug] Routing to controller "AnnoTree::Tree" and action "list".
[Tue May 21 11:35:53 2013] [debug] Rendering template "tree/list.json.ep".
[Tue May 21 11:35:53 2013] [debug] 200 OK (0.003220s, 310.559/s).
[Tue May 21 11:36:30 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 11:36:30 2013] [debug] GET "/0/tree/".
[Tue May 21 11:36:30 2013] [debug] Routing to controller "AnnoTree::Tree" and action "list".
[Tue May 21 11:36:30 2013] [debug] Rendering template "tree/list.json.ep".
[Tue May 21 11:36:30 2013] [debug] 200 OK (0.003114s, 321.130/s).
[Tue May 21 11:36:56 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 11:36:56 2013] [debug] GET "/0/tree/".
[Tue May 21 11:36:56 2013] [debug] Routing to controller "AnnoTree::Tree" and action "list".
[Tue May 21 11:36:56 2013] [debug] Rendering template "tree/list.json.ep".
[Tue May 21 11:36:56 2013] [debug] 200 OK (0.003109s, 321.647/s).
[Tue May 21 11:36:57 2013] [debug] GET "/0/tree/".
[Tue May 21 11:36:57 2013] [debug] Routing to controller "AnnoTree::Tree" and action "list".
[Tue May 21 11:36:57 2013] [debug] Rendering cached template "tree/list.json.ep".
[Tue May 21 11:36:57 2013] [debug] 200 OK (0.000432s, 2314.815/s).
[Tue May 21 11:37:09 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 11:37:09 2013] [debug] GET "/0/tree/".
[Tue May 21 11:37:09 2013] [debug] Routing to controller "AnnoTree::Tree" and action "list".
[Tue May 21 11:37:09 2013] [debug] Rendering template "tree/list.json.ep".
[Tue May 21 11:37:09 2013] [debug] 200 OK (0.003142s, 318.269/s).
[Tue May 21 11:37:39 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 11:37:39 2013] [debug] GET "/0/tree/".
[Tue May 21 11:37:39 2013] [debug] Routing to controller "AnnoTree::Tree" and action "list".
[Tue May 21 11:37:39 2013] [debug] Rendering template "tree/list.json.ep".
[Tue May 21 11:37:39 2013] [debug] 200 OK (0.003082s, 324.465/s).
[Tue May 21 11:37:47 2013] [debug] GET "/1/tree/".
[Tue May 21 11:37:47 2013] [debug] Routing to controller "AnnoTree::Tree" and action "list".
[Tue May 21 11:37:47 2013] [error] Can't use an undefined value as an ARRAY reference at /home/matt/Documents/AnnoTree/WebServices/anno_tree/script/../lib/AnnoTree/Tree.pm line 25.

[Tue May 21 11:37:47 2013] [debug] Template "exception.development.html.ep" not found.
[Tue May 21 11:37:47 2013] [debug] Template "exception.html.ep" not found.
[Tue May 21 11:37:47 2013] [debug] Rendering inline template.
[Tue May 21 11:37:47 2013] [debug] Rendering inline template.
[Tue May 21 11:37:47 2013] [debug] 500 Internal Server Error (0.015246s, 65.591/s).
[Tue May 21 11:38:27 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 11:38:27 2013] [debug] GET "/0/tree/".
[Tue May 21 11:38:27 2013] [error] Can't modify scalar chop in concatenation (.) or string at /home/matt/Documents/AnnoTree/WebServices/anno_tree/script/../lib/AnnoTree/Tree.pm line 32, near ""\n]";"
Compilation failed in require at (eval 231) line 1.

[Tue May 21 11:38:27 2013] [debug] Template "exception.development.html.ep" not found.
[Tue May 21 11:38:27 2013] [debug] Template "exception.html.ep" not found.
[Tue May 21 11:38:27 2013] [debug] Rendering inline template.
[Tue May 21 11:38:27 2013] [debug] Rendering inline template.
[Tue May 21 11:38:27 2013] [debug] 500 Internal Server Error (0.016539s, 60.463/s).
[Tue May 21 11:38:44 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 11:38:44 2013] [debug] GET "/0/tree/".
[Tue May 21 11:38:44 2013] [debug] Routing to controller "AnnoTree::Tree" and action "list".
[Tue May 21 11:38:44 2013] [debug] Rendering template "tree/list.json.ep".
[Tue May 21 11:38:44 2013] [debug] 200 OK (0.003085s, 324.149/s).
[Tue May 21 11:39:08 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 11:39:08 2013] [debug] GET "/0/tree/".
[Tue May 21 11:39:08 2013] [debug] Routing to controller "AnnoTree::Tree" and action "list".
[Tue May 21 11:39:08 2013] [debug] Rendering template "tree/list.json.ep".
[Tue May 21 11:39:08 2013] [debug] 200 OK (0.003283s, 304.599/s).
[Tue May 21 11:39:30 2013] [debug] GET "/".
[Tue May 21 11:39:30 2013] [debug] Routing to controller "AnnoTree::Example" and action "welcome".
[Tue May 21 11:39:30 2013] [debug] Rendering template "example/welcome.html.ep".
[Tue May 21 11:39:30 2013] [debug] Careful, "layout" is a reserved stash value.
[Tue May 21 11:39:30 2013] [debug] Rendering template "layouts/default.html.ep".
[Tue May 21 11:39:30 2013] [debug] 200 OK (0.003963s, 252.334/s).
[Tue May 21 12:00:24 2013] [debug] GET "/0/forest".
[Tue May 21 12:00:24 2013] [debug] Template "not_found.development.html.ep" not found.
[Tue May 21 12:00:24 2013] [debug] Template "not_found.html.ep" not found.
[Tue May 21 12:00:24 2013] [debug] Rendering inline template.
[Tue May 21 12:00:24 2013] [debug] Rendering inline template.
[Tue May 21 12:00:24 2013] [debug] 404 Not Found (0.010491s, 95.320/s).
[Tue May 21 12:00:29 2013] [debug] GET "/forest".
[Tue May 21 12:00:29 2013] [debug] Routing to controller "AnnoTree::Forest" and action "list".
[Tue May 21 12:00:29 2013] [debug] Rendering template "forest/list.json.ep".
[Tue May 21 12:00:29 2013] [debug] 200 OK (0.002413s, 414.422/s).
[Tue May 21 12:00:32 2013] [debug] GET "/forest/0".
[Tue May 21 12:00:32 2013] [debug] Routing to controller "AnnoTree::Forest" and action "unique".
[Tue May 21 12:00:32 2013] [debug] Rendering template "forest/unique.json.ep".
[Tue May 21 12:00:32 2013] [debug] 200 OK (0.002061s, 485.201/s).
[Tue May 21 12:00:36 2013] [debug] GET "/0/tree".
[Tue May 21 12:00:36 2013] [debug] Routing to controller "AnnoTree::Tree" and action "list".
[Tue May 21 12:00:36 2013] [debug] Rendering cached template "tree/list.json.ep".
[Tue May 21 12:00:36 2013] [debug] 200 OK (0.000737s, 1356.852/s).
[Tue May 21 12:02:18 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 12:02:18 2013] [debug] GET "/0/tree".
[Tue May 21 12:02:18 2013] [debug] Routing to controller "AnnoTree::Tree" and action "list".
[Tue May 21 12:02:18 2013] [debug] Rendering template "tree/list.json.ep".
[Tue May 21 12:02:18 2013] [debug] 200 OK (0.003096s, 322.997/s).
[Tue May 21 12:03:55 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 12:03:55 2013] [debug] GET "/0/tree".
[Tue May 21 12:03:55 2013] [debug] Routing to controller "AnnoTree::Tree" and action "list".
[Tue May 21 12:03:55 2013] [debug] Rendering template "tree/list.json.ep".
[Tue May 21 12:03:55 2013] [debug] 200 OK (0.003063s, 326.477/s).
[Tue May 21 12:09:43 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 12:09:43 2013] [debug] GET "/0/tree".
[Tue May 21 12:09:43 2013] [debug] Routing to controller "AnnoTree::Tree" and action "list".
[Tue May 21 12:09:43 2013] [debug] 200 OK (0.000929s, 1076.426/s).
[Tue May 21 12:09:43 2013] [debug] Rendering template "tree/list.json.ep".
[Tue May 21 12:09:43 2013] [error] Global symbol "$treeArray" requires explicit package name at template tree/list.json.ep line 2.
1: 
2: %== print $treeArray;
3: <!--
4: {
5:     <%== $content %> 
6: }
7: -->

[Tue May 21 12:09:43 2013] [debug] Template "exception.development.json.ep" not found.
[Tue May 21 12:09:43 2013] [debug] Template "exception.json.ep" not found.
[Tue May 21 12:09:43 2013] [debug] Template "exception.development.html.ep" not found.
[Tue May 21 12:09:43 2013] [debug] Template "exception.html.ep" not found.
[Tue May 21 12:09:43 2013] [debug] Rendering inline template.
[Tue May 21 12:09:43 2013] [debug] Rendering inline template.
[Tue May 21 12:11:25 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 12:11:25 2013] [debug] GET "/0/tree".
[Tue May 21 12:11:25 2013] [debug] Routing to controller "AnnoTree::Tree" and action "list".
[Tue May 21 12:11:25 2013] [error] Not a SCALAR reference at /home/matt/Documents/AnnoTree/WebServices/anno_tree/script/../lib/AnnoTree/Tree.pm line 28.

[Tue May 21 12:11:25 2013] [debug] Template "exception.development.html.ep" not found.
[Tue May 21 12:11:25 2013] [debug] Template "exception.html.ep" not found.
[Tue May 21 12:11:25 2013] [debug] Rendering inline template.
[Tue May 21 12:11:25 2013] [debug] Rendering inline template.
[Tue May 21 12:11:25 2013] [debug] 500 Internal Server Error (0.016217s, 61.664/s).
[Tue May 21 12:13:07 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 12:13:07 2013] [debug] GET "/0/tree".
[Tue May 21 12:13:07 2013] [debug] Routing to controller "AnnoTree::Tree" and action "list".
[Tue May 21 12:13:07 2013] [debug] Rendering template "tree/list.json.ep".
[Tue May 21 12:13:07 2013] [error] Global symbol "$content" requires explicit package name at template tree/list.json.ep line 5.
1: 
2: %== print $numTrees;
3: <!--
4: {
5:     <%== $content %> 
6: }
7: -->

[Tue May 21 12:13:07 2013] [debug] Template "exception.development.json.ep" not found.
[Tue May 21 12:13:07 2013] [debug] Template "exception.json.ep" not found.
[Tue May 21 12:13:07 2013] [debug] Template "exception.development.html.ep" not found.
[Tue May 21 12:13:07 2013] [debug] Template "exception.html.ep" not found.
[Tue May 21 12:13:07 2013] [debug] Rendering inline template.
[Tue May 21 12:13:07 2013] [debug] Rendering inline template.
[Tue May 21 12:13:07 2013] [debug] 500 Internal Server Error (0.018509s, 54.028/s).
[Tue May 21 12:13:28 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 12:13:28 2013] [debug] GET "/0/tree".
[Tue May 21 12:13:28 2013] [debug] Routing to controller "AnnoTree::Tree" and action "list".
[Tue May 21 12:13:28 2013] [debug] Rendering template "tree/list.json.ep".
[Tue May 21 12:13:28 2013] [error] Can't modify scalar in concatenation (.) or string at template tree/list.json.ep line 6, at EOF
1: 
2: %== print $numTrees;
3: <!--
4: {
5:     <%== #$content %> 
6: }
7: -->

[Tue May 21 12:13:28 2013] [debug] Template "exception.development.json.ep" not found.
[Tue May 21 12:13:28 2013] [debug] Template "exception.json.ep" not found.
[Tue May 21 12:13:28 2013] [debug] Template "exception.development.html.ep" not found.
[Tue May 21 12:13:28 2013] [debug] Template "exception.html.ep" not found.
[Tue May 21 12:13:28 2013] [debug] Rendering inline template.
[Tue May 21 12:13:28 2013] [debug] Rendering inline template.
[Tue May 21 12:13:28 2013] [debug] 500 Internal Server Error (0.018241s, 54.822/s).
[Tue May 21 12:14:20 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 12:14:20 2013] [debug] GET "/0/tree".
[Tue May 21 12:14:20 2013] [debug] Routing to controller "AnnoTree::Tree" and action "list".
[Tue May 21 12:14:20 2013] [debug] Rendering template "tree/list.json.ep".
[Tue May 21 12:14:20 2013] [error] Can't modify scalar in concatenation (.) or string at template tree/list.json.ep line 4, at EOF
Not enough arguments for scalar at template tree/list.json.ep line 5, at EOF
Missing right curly or square bracket at template tree/list.json.ep line 5, at end of line
syntax error at template tree/list.json.ep line 5, at EOF
1: 
2: %== print $numTrees;
3: %== # {
4:     %== #$content  
5: %== #}

[Tue May 21 12:14:20 2013] [debug] Template "exception.development.json.ep" not found.
[Tue May 21 12:14:20 2013] [debug] Template "exception.json.ep" not found.
[Tue May 21 12:14:20 2013] [debug] Template "exception.development.html.ep" not found.
[Tue May 21 12:14:20 2013] [debug] Template "exception.html.ep" not found.
[Tue May 21 12:14:20 2013] [debug] Rendering inline template.
[Tue May 21 12:14:20 2013] [debug] Rendering inline template.
[Tue May 21 12:14:20 2013] [debug] 500 Internal Server Error (0.018424s, 54.277/s).
[Tue May 21 12:14:50 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 12:14:50 2013] [debug] GET "/0/tree".
[Tue May 21 12:14:50 2013] [debug] Routing to controller "AnnoTree::Tree" and action "list".
[Tue May 21 12:14:50 2013] [debug] Rendering template "tree/list.json.ep".
[Tue May 21 12:14:50 2013] [error] Can't modify scalar in concatenation (.) or string at template tree/list.json.ep line 4, at EOF
1: {
2:     %== print $numTrees;
3:     %== #$content  
4: }

[Tue May 21 12:14:50 2013] [debug] Template "exception.development.json.ep" not found.
[Tue May 21 12:14:50 2013] [debug] Template "exception.json.ep" not found.
[Tue May 21 12:14:50 2013] [debug] Template "exception.development.html.ep" not found.
[Tue May 21 12:14:50 2013] [debug] Template "exception.html.ep" not found.
[Tue May 21 12:14:50 2013] [debug] Rendering inline template.
[Tue May 21 12:14:50 2013] [debug] Rendering inline template.
[Tue May 21 12:14:50 2013] [debug] 500 Internal Server Error (0.018307s, 54.624/s).
[Tue May 21 12:15:11 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 12:15:11 2013] [debug] GET "/0/tree".
[Tue May 21 12:15:11 2013] [debug] Routing to controller "AnnoTree::Tree" and action "list".
[Tue May 21 12:15:11 2013] [debug] Rendering template "tree/list.json.ep".
[Tue May 21 12:15:11 2013] [error] Can't modify scalar in concatenation (.) or string at template tree/list.json.ep line 4, at EOF
1: {
2:     %== $numTrees;
3:     %== #$content  
4: }

[Tue May 21 12:15:11 2013] [debug] Template "exception.development.json.ep" not found.
[Tue May 21 12:15:11 2013] [debug] Template "exception.json.ep" not found.
[Tue May 21 12:15:11 2013] [debug] Template "exception.development.html.ep" not found.
[Tue May 21 12:15:11 2013] [debug] Template "exception.html.ep" not found.
[Tue May 21 12:15:11 2013] [debug] Rendering inline template.
[Tue May 21 12:15:11 2013] [debug] Rendering inline template.
[Tue May 21 12:15:11 2013] [debug] 500 Internal Server Error (0.018166s, 55.048/s).
[Tue May 21 12:21:28 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 12:21:28 2013] [debug] GET "/0/tree".
[Tue May 21 12:21:28 2013] [debug] Routing to controller "AnnoTree::Tree" and action "list".
[Tue May 21 12:21:28 2013] [debug] Rendering template "tree/list.json.ep".
[Tue May 21 12:21:28 2013] [debug] 200 OK (0.003103s, 322.269/s).
[Tue May 21 12:21:28 2013] [debug] Rendering template "tree/list.json.ep".
[Tue May 21 12:31:04 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 12:31:04 2013] [debug] GET "/0/tree".
[Tue May 21 12:31:04 2013] [debug] Routing to controller "AnnoTree::Tree" and action "list".
[Tue May 21 12:31:04 2013] [debug] Rendering template "tree/list.json.ep".
[Tue May 21 12:31:04 2013] [debug] 200 OK (0.003266s, 306.185/s).
[Tue May 21 12:31:04 2013] [debug] Rendering template "tree/list.json.ep".
[Tue May 21 12:31:41 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 12:31:41 2013] [debug] GET "/0/tree".
[Tue May 21 12:31:41 2013] [debug] Routing to controller "AnnoTree::Tree" and action "list".
[Tue May 21 12:31:41 2013] [debug] Rendering template "tree/list.json.ep".
[Tue May 21 12:31:41 2013] [debug] 200 OK (0.003218s, 310.752/s).
[Tue May 21 12:31:41 2013] [debug] Rendering template "tree/list.json.ep".
[Tue May 21 12:34:55 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 12:34:55 2013] [debug] GET "/0/tree".
[Tue May 21 12:34:55 2013] [debug] Routing to controller "AnnoTree::Tree" and action "list".
[Tue May 21 12:34:55 2013] [debug] Rendering template "tree/list.json.ep".
[Tue May 21 12:34:55 2013] [debug] 200 OK (0.003351s, 298.418/s).
[Tue May 21 12:34:55 2013] [debug] Rendering template "tree/list.json.ep".
[Tue May 21 12:36:32 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 12:36:32 2013] [debug] GET "/0/tree".
[Tue May 21 12:36:32 2013] [debug] Routing to controller "AnnoTree::Tree" and action "list".
[Tue May 21 12:36:32 2013] [debug] Rendering template "tree/list.json.ep".
[Tue May 21 12:36:32 2013] [debug] 200 OK (0.003286s, 304.321/s).
[Tue May 21 12:36:32 2013] [debug] Rendering template "tree/list.json.ep".
[Tue May 21 12:38:13 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 12:38:13 2013] [debug] GET "/0/tree".
[Tue May 21 12:38:13 2013] [debug] Routing to controller "AnnoTree::Tree" and action "list".
[Tue May 21 12:38:13 2013] [debug] Rendering template "tree/list.json.ep".
[Tue May 21 12:38:13 2013] [error] syntax error at template tree/list.json.ep line 8, near ") $_M "
3:     "trees": [
4:         <% for my $i (0..($numTrees - 1)) { %>
5:         {
6:             "id": "<%== $treeRef->[$i]->{'id'} %>"
7:         }
8:         <% print "," if $i != ($numTrees - 1) %>
9:         <% } %>
10:     ]
11: }

[Tue May 21 12:38:13 2013] [debug] Template "exception.development.json.ep" not found.
[Tue May 21 12:38:13 2013] [debug] Template "exception.json.ep" not found.
[Tue May 21 12:38:13 2013] [debug] Template "exception.development.html.ep" not found.
[Tue May 21 12:38:13 2013] [debug] Template "exception.html.ep" not found.
[Tue May 21 12:38:13 2013] [debug] Rendering inline template.
[Tue May 21 12:38:13 2013] [debug] Rendering inline template.
[Tue May 21 12:38:13 2013] [debug] 500 Internal Server Error (0.018544s, 53.926/s).
[Tue May 21 12:38:53 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 12:38:53 2013] [debug] GET "/0/tree".
[Tue May 21 12:38:53 2013] [debug] Routing to controller "AnnoTree::Tree" and action "list".
[Tue May 21 12:38:53 2013] [debug] Rendering template "tree/list.json.ep".
[Tue May 21 12:38:53 2013] [debug] 200 OK (0.003338s, 299.581/s).
[Tue May 21 12:38:53 2013] [debug] Rendering template "tree/list.json.ep".
[Tue May 21 12:40:46 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 12:40:46 2013] [debug] GET "/0/tree".
[Tue May 21 12:40:46 2013] [debug] Routing to controller "AnnoTree::Tree" and action "list".
[Tue May 21 12:40:46 2013] [debug] Rendering template "tree/list.json.ep".
[Tue May 21 12:40:46 2013] [debug] 200 OK (0.003551s, 281.611/s).
[Tue May 21 12:40:46 2013] [debug] Rendering template "tree/list.json.ep".
[Tue May 21 12:41:06 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 12:41:06 2013] [debug] GET "/0/tree".
[Tue May 21 12:41:06 2013] [debug] Routing to controller "AnnoTree::Tree" and action "list".
[Tue May 21 12:41:06 2013] [debug] Rendering template "tree/list.json.ep".
[Tue May 21 12:41:06 2013] [debug] 200 OK (0.003730s, 268.097/s).
[Tue May 21 12:41:06 2013] [debug] Rendering template "tree/list.json.ep".
[Tue May 21 12:46:28 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 12:46:28 2013] [debug] GET "/0/tree".
[Tue May 21 12:46:28 2013] [error] syntax error at /home/matt/Documents/AnnoTree/WebServices/anno_tree/script/../lib/AnnoTree/Tree.pm line 44, near "]"
Global symbol "@trees" requires explicit package name at /home/matt/Documents/AnnoTree/WebServices/anno_tree/script/../lib/AnnoTree/Tree.pm line 51.
Global symbol "@trees" requires explicit package name at /home/matt/Documents/AnnoTree/WebServices/anno_tree/script/../lib/AnnoTree/Tree.pm line 52.
Missing right curly or square bracket at /home/matt/Documents/AnnoTree/WebServices/anno_tree/script/../lib/AnnoTree/Tree.pm line 57, at end of line
Compilation failed in require at (eval 231) line 1.

[Tue May 21 12:46:28 2013] [debug] Template "exception.development.html.ep" not found.
[Tue May 21 12:46:28 2013] [debug] Template "exception.html.ep" not found.
[Tue May 21 12:46:28 2013] [debug] Rendering inline template.
[Tue May 21 12:46:28 2013] [debug] Rendering inline template.
[Tue May 21 12:46:28 2013] [debug] 500 Internal Server Error (0.016224s, 61.637/s).
[Tue May 21 12:47:10 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 12:47:10 2013] [debug] GET "/0/tree".
[Tue May 21 12:47:10 2013] [debug] Routing to controller "AnnoTree::Tree" and action "list".
[Tue May 21 12:47:10 2013] [debug] Rendering template "tree/list.json.ep".
[Tue May 21 12:47:10 2013] [debug] 200 OK (0.003589s, 278.629/s).
[Tue May 21 12:47:13 2013] [debug] GET "/1/tree".
[Tue May 21 12:47:13 2013] [debug] Routing to controller "AnnoTree::Tree" and action "list".
[Tue May 21 12:47:13 2013] [debug] Rendering cached template "tree/list.json.ep".
[Tue May 21 12:47:13 2013] [debug] 200 OK (0.000640s, 1562.500/s).
[Tue May 21 12:54:54 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 12:54:54 2013] [debug] GET "/1/tree".
[Tue May 21 12:54:54 2013] [debug] Routing to controller "AnnoTree::Tree" and action "list".
[Tue May 21 12:54:54 2013] [debug] Rendering template "tree/list.json.ep".
[Tue May 21 12:54:54 2013] [debug] 200 OK (0.003556s, 281.215/s).
[Tue May 21 12:54:57 2013] [debug] GET "/2/tree".
[Tue May 21 12:54:57 2013] [debug] Routing to controller "AnnoTree::Tree" and action "list".
[Tue May 21 12:54:57 2013] [debug] Rendering cached template "tree/list.json.ep".
[Tue May 21 12:54:57 2013] [debug] 200 OK (0.000600s, 1666.667/s).
[Tue May 21 12:55:28 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 12:55:28 2013] [debug] GET "/2/tree".
[Tue May 21 12:55:28 2013] [debug] Routing to controller "AnnoTree::Tree" and action "list".
[Tue May 21 12:55:28 2013] [debug] Rendering template "tree/list.json.ep".
[Tue May 21 12:55:28 2013] [debug] 200 OK (0.003618s, 276.396/s).
[Tue May 21 20:38:00 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 20:38:00 2013] [debug] GET "/forest".
[Tue May 21 20:38:00 2013] [debug] Routing to controller "AnnoTree::Forest" and action "list".
[Tue May 21 20:38:00 2013] [debug] Rendering template "forest/list.json.ep".
[Tue May 21 20:38:00 2013] [debug] 200 OK (0.003363s, 297.354/s).
[Tue May 21 20:38:11 2013] [debug] GET "/forest/0".
[Tue May 21 20:38:11 2013] [debug] Routing to controller "AnnoTree::Forest" and action "unique".
[Tue May 21 20:38:11 2013] [debug] Rendering template "forest/unique.json.ep".
[Tue May 21 20:38:11 2013] [debug] 200 OK (0.001979s, 505.306/s).
[Tue May 21 20:38:14 2013] [debug] GET "/forest/1".
[Tue May 21 20:38:14 2013] [debug] Routing to controller "AnnoTree::Forest" and action "unique".
[Tue May 21 20:38:14 2013] [debug] Rendering cached template "forest/unique.json.ep".
[Tue May 21 20:38:14 2013] [debug] 200 OK (0.000595s, 1680.672/s).
[Tue May 21 20:38:16 2013] [debug] GET "/forest/2".
[Tue May 21 20:38:16 2013] [debug] Routing to controller "AnnoTree::Forest" and action "unique".
[Tue May 21 20:38:16 2013] [debug] Rendering cached template "forest/unique.json.ep".
[Tue May 21 20:38:16 2013] [debug] 200 OK (0.000748s, 1336.898/s).
[Tue May 21 20:38:18 2013] [debug] GET "/forest/3".
[Tue May 21 20:38:18 2013] [debug] Routing to controller "AnnoTree::Forest" and action "unique".
[Tue May 21 20:38:18 2013] [debug] Rendering cached template "forest/unique.json.ep".
[Tue May 21 20:38:18 2013] [debug] 200 OK (0.000643s, 1555.210/s).
[Tue May 21 20:38:21 2013] [debug] GET "/forest/5".
[Tue May 21 20:38:21 2013] [debug] Routing to controller "AnnoTree::Forest" and action "unique".
[Tue May 21 20:38:21 2013] [debug] Rendering cached template "forest/unique.json.ep".
[Tue May 21 20:38:21 2013] [debug] 200 OK (0.000618s, 1618.123/s).
[Tue May 21 20:38:24 2013] [debug] GET "/forest/0".
[Tue May 21 20:38:24 2013] [debug] Routing to controller "AnnoTree::Forest" and action "unique".
[Tue May 21 20:38:24 2013] [debug] Rendering cached template "forest/unique.json.ep".
[Tue May 21 20:38:24 2013] [debug] 200 OK (0.000476s, 2100.840/s).
[Tue May 21 20:38:28 2013] [debug] GET "/forest".
[Tue May 21 20:38:28 2013] [debug] Routing to controller "AnnoTree::Forest" and action "list".
[Tue May 21 20:38:28 2013] [debug] Rendering cached template "forest/list.json.ep".
[Tue May 21 20:38:28 2013] [debug] 200 OK (0.000459s, 2178.649/s).
[Tue May 21 20:51:30 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 20:51:30 2013] [debug] GET "/forest".
[Tue May 21 20:51:30 2013] [error] syntax error at /home/matt/Documents/AnnoTree/WebServices/anno_tree/script/../lib/AnnoTree/Forest.pm line 4, near "use Data:"
Global symbol "$companies" requires explicit package name at /home/matt/Documents/AnnoTree/WebServices/anno_tree/script/../lib/AnnoTree/Forest.pm line 25.
Compilation failed in require at (eval 231) line 1.

[Tue May 21 20:51:30 2013] [debug] Template "exception.development.html.ep" not found.
[Tue May 21 20:51:30 2013] [debug] Template "exception.html.ep" not found.
[Tue May 21 20:51:30 2013] [debug] Rendering inline template.
[Tue May 21 20:51:30 2013] [debug] Rendering inline template.
[Tue May 21 20:51:30 2013] [debug] 500 Internal Server Error (0.016385s, 61.031/s).
[Tue May 21 20:52:52 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 20:52:52 2013] [debug] GET "/forest".
[Tue May 21 20:52:52 2013] [error] syntax error at /home/matt/Documents/AnnoTree/WebServices/anno_tree/script/../lib/AnnoTree/Forest.pm line 4, near "use Data:"
Compilation failed in require at (eval 231) line 1.

[Tue May 21 20:52:52 2013] [debug] Template "exception.development.html.ep" not found.
[Tue May 21 20:52:52 2013] [debug] Template "exception.html.ep" not found.
[Tue May 21 20:52:52 2013] [debug] Rendering inline template.
[Tue May 21 20:52:52 2013] [debug] Rendering inline template.
[Tue May 21 20:52:52 2013] [debug] 500 Internal Server Error (0.016310s, 61.312/s).
[Tue May 21 20:53:10 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 20:53:10 2013] [debug] GET "/forest".
[Tue May 21 20:53:10 2013] [debug] Routing to controller "AnnoTree::Forest" and action "list".
[Tue May 21 20:53:10 2013] [debug] $VAR1 = [
          {
            'name' => 'Untitled Technologies',
            'description' => 'A company for only the truly brave'
          },
          {
            'name' => 'The Monkey Knows',
            'description' => 'How dare you try to rustle my jimmies'
          },
          {
            'description' => 'Because we will be pulling a bunch of these',
            'name' => 'Late Night'
          }
        ];

[Tue May 21 20:53:10 2013] [debug] Rendering template "forest/list.json.ep".
[Tue May 21 20:53:10 2013] [debug] 200 OK (0.003519s, 284.172/s).
[Tue May 21 21:16:04 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 21:16:04 2013] [debug] GET "/0/tree".
[Tue May 21 21:16:04 2013] [debug] Routing to controller "AnnoTree::Tree" and action "list".
[Tue May 21 21:16:04 2013] [debug] Rendering template "tree/list.json.ep".
[Tue May 21 21:16:04 2013] [error] Global symbol "@treeRef" requires explicit package name at template tree/list.json.ep line 2.
1: {
2:     "numTrees": "<%== scalar @treeRef %>",
3:     "trees": [
4:         <% for my $i (0..($numTrees - 1)) { %>
5:         {
6:             "id": "<%== $treeRef->[$i]->{'id'} %>",
7:             "name": "<%== $treeRef->[$i]->{'name'} %>",

[Tue May 21 21:16:04 2013] [debug] Template "exception.development.json.ep" not found.
[Tue May 21 21:16:04 2013] [debug] Template "exception.json.ep" not found.
[Tue May 21 21:16:04 2013] [debug] Template "exception.development.html.ep" not found.
[Tue May 21 21:16:04 2013] [debug] Template "exception.html.ep" not found.
[Tue May 21 21:16:04 2013] [debug] Rendering inline template.
[Tue May 21 21:16:05 2013] [debug] Rendering inline template.
[Tue May 21 21:16:05 2013] [debug] 500 Internal Server Error (0.019405s, 51.533/s).
[Tue May 21 21:16:36 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 21:16:36 2013] [debug] GET "/0/tree".
[Tue May 21 21:16:36 2013] [debug] Routing to controller "AnnoTree::Tree" and action "list".
[Tue May 21 21:16:36 2013] [debug] Rendering template "tree/list.json.ep".
[Tue May 21 21:16:36 2013] [error] syntax error at template tree/list.json.ep line 2, near "$@treeRef "
1: {
2:     "numTrees": "<%== $@treeRef %>",
3:     "trees": [
4:         <% for my $i (0..($numTrees - 1)) { %>
5:         {
6:             "id": "<%== $treeRef->[$i]->{'id'} %>",
7:             "name": "<%== $treeRef->[$i]->{'name'} %>",

[Tue May 21 21:16:36 2013] [debug] Template "exception.development.json.ep" not found.
[Tue May 21 21:16:36 2013] [debug] Template "exception.json.ep" not found.
[Tue May 21 21:16:36 2013] [debug] Template "exception.development.html.ep" not found.
[Tue May 21 21:16:36 2013] [debug] Template "exception.html.ep" not found.
[Tue May 21 21:16:36 2013] [debug] Rendering inline template.
[Tue May 21 21:16:36 2013] [debug] Rendering inline template.
[Tue May 21 21:16:36 2013] [debug] 500 Internal Server Error (0.018805s, 53.177/s).
[Tue May 21 21:18:27 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 21:18:27 2013] [debug] GET "/0/tree".
[Tue May 21 21:18:27 2013] [debug] Routing to controller "AnnoTree::Tree" and action "list".
[Tue May 21 21:18:27 2013] [debug] Rendering template "tree/list.json.ep".
[Tue May 21 21:18:27 2013] [debug] 200 OK (0.003596s, 278.087/s).
[Tue May 21 21:18:34 2013] [debug] GET "/2/tree".
[Tue May 21 21:18:34 2013] [debug] Routing to controller "AnnoTree::Tree" and action "list".
[Tue May 21 21:18:34 2013] [debug] Rendering cached template "tree/list.json.ep".
[Tue May 21 21:18:34 2013] [debug] 200 OK (0.000603s, 1658.375/s).
[Tue May 21 21:18:40 2013] [debug] GET "/1/tree".
[Tue May 21 21:18:40 2013] [debug] Routing to controller "AnnoTree::Tree" and action "list".
[Tue May 21 21:18:40 2013] [debug] Rendering cached template "tree/list.json.ep".
[Tue May 21 21:18:40 2013] [debug] 200 OK (0.000588s, 1700.680/s).
[Tue May 21 21:19:09 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 21:19:09 2013] [debug] GET "/1/tree".
[Tue May 21 21:19:09 2013] [debug] Routing to controller "AnnoTree::Tree" and action "list".
[Tue May 21 21:19:09 2013] [debug] Rendering template "tree/list.json.ep".
[Tue May 21 21:19:09 2013] [error] Global symbol "$numTrees" requires explicit package name at template tree/list.json.ep line 4.
Global symbol "$numTrees" requires explicit package name at template tree/list.json.ep line 12.
7:             "name": "<%== $treeRef->[$i]->{'name'} %>",
8:             "datetime": "<%== $treeRef->[$i]->{'datetime'} %>",
9:             "icon": "<%== $treeRef->[$i]->{'icon'} %>",
10:             "description": "<%== $treeRef->[$i]->{'description'} %>"
11:         }
12:         <%== "," if $i != ($numTrees - 1) %>
13:         <% } %>
14:     ]
15: }

[Tue May 21 21:19:09 2013] [debug] Template "exception.development.json.ep" not found.
[Tue May 21 21:19:09 2013] [debug] Template "exception.json.ep" not found.
[Tue May 21 21:19:09 2013] [debug] Template "exception.development.html.ep" not found.
[Tue May 21 21:19:09 2013] [debug] Template "exception.html.ep" not found.
[Tue May 21 21:19:09 2013] [debug] Rendering inline template.
[Tue May 21 21:19:09 2013] [debug] Rendering inline template.
[Tue May 21 21:19:09 2013] [debug] 500 Internal Server Error (0.018901s, 52.907/s).
[Tue May 21 21:21:04 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 21:21:04 2013] [debug] GET "/1/tree".
[Tue May 21 21:21:04 2013] [debug] Routing to controller "AnnoTree::Tree" and action "list".
[Tue May 21 21:21:04 2013] [debug] Rendering template "tree/list.json.ep".
[Tue May 21 21:21:04 2013] [debug] 200 OK (0.003684s, 271.444/s).
[Tue May 21 21:21:13 2013] [debug] GET "/0/tree".
[Tue May 21 21:21:13 2013] [debug] Routing to controller "AnnoTree::Tree" and action "list".
[Tue May 21 21:21:13 2013] [debug] Rendering cached template "tree/list.json.ep".
[Tue May 21 21:21:13 2013] [debug] 200 OK (0.000605s, 1652.893/s).
[Tue May 21 21:21:17 2013] [debug] GET "/2/tree".
[Tue May 21 21:21:17 2013] [debug] Routing to controller "AnnoTree::Tree" and action "list".
[Tue May 21 21:21:17 2013] [debug] Rendering cached template "tree/list.json.ep".
[Tue May 21 21:21:17 2013] [debug] 200 OK (0.000639s, 1564.945/s).
[Tue May 21 21:21:21 2013] [debug] GET "/4/tree".
[Tue May 21 21:21:21 2013] [debug] Routing to controller "AnnoTree::Tree" and action "list".
[Tue May 21 21:21:21 2013] [error] Can't use an undefined value as an ARRAY reference at /home/matt/Documents/AnnoTree/WebServices/anno_tree/script/../lib/AnnoTree/Tree.pm line 82.

[Tue May 21 21:21:21 2013] [debug] Template "exception.development.html.ep" not found.
[Tue May 21 21:21:21 2013] [debug] Template "exception.html.ep" not found.
[Tue May 21 21:21:21 2013] [debug] Rendering inline template.
[Tue May 21 21:21:21 2013] [debug] Rendering inline template.
[Tue May 21 21:21:21 2013] [debug] 500 Internal Server Error (0.016121s, 62.031/s).
[Tue May 21 21:21:27 2013] [debug] GET "/0/tree".
[Tue May 21 21:21:27 2013] [debug] Routing to controller "AnnoTree::Tree" and action "list".
[Tue May 21 21:21:27 2013] [debug] Rendering cached template "tree/list.json.ep".
[Tue May 21 21:21:27 2013] [debug] 200 OK (0.000499s, 2004.008/s).
[Tue May 21 21:23:17 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 21:23:17 2013] [debug] GET "/forests".
[Tue May 21 21:23:17 2013] [debug] Template "not_found.development.html.ep" not found.
[Tue May 21 21:23:17 2013] [debug] Template "not_found.html.ep" not found.
[Tue May 21 21:23:17 2013] [debug] Rendering inline template.
[Tue May 21 21:23:17 2013] [debug] Rendering inline template.
[Tue May 21 21:23:17 2013] [debug] 404 Not Found (0.011657s, 85.785/s).
[Tue May 21 21:23:33 2013] [debug] GET "/forest".
[Tue May 21 21:23:33 2013] [debug] Routing to controller "AnnoTree::Forest" and action "list".
[Tue May 21 21:23:33 2013] [debug] Rendering template "forest/list.json.ep".
[Tue May 21 21:23:33 2013] [error] Global symbol "$companiesRef" requires explicit package name at template forest/list.json.ep line 1.
syntax error at template forest/list.json.ep line 1, near "} $_M "
1: <% my $numForests = scalar @{$companiesRef} %>
2: {
3:     "numForests": "<%== $numForests %>",
4:     "forests": [
5:         {
6:             "id": "0",

[Tue May 21 21:23:33 2013] [debug] Template "exception.development.json.ep" not found.
[Tue May 21 21:23:33 2013] [debug] Template "exception.json.ep" not found.
[Tue May 21 21:23:33 2013] [debug] Template "exception.development.html.ep" not found.
[Tue May 21 21:23:33 2013] [debug] Template "exception.html.ep" not found.
[Tue May 21 21:23:33 2013] [debug] Rendering inline template.
[Tue May 21 21:23:33 2013] [debug] Rendering inline template.
[Tue May 21 21:23:34 2013] [debug] 500 Internal Server Error (0.018127s, 55.166/s).
[Tue May 21 21:23:57 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 21:23:57 2013] [debug] GET "/forest".
[Tue May 21 21:23:57 2013] [debug] Routing to controller "AnnoTree::Forest" and action "list".
[Tue May 21 21:23:57 2013] [debug] Rendering template "forest/list.json.ep".
[Tue May 21 21:23:57 2013] [error] syntax error at template forest/list.json.ep line 1, near "} $_M "
1: <% my $numForests = scalar @{$companies} %>
2: {
3:     "numForests": "<%== $numForests %>",
4:     "forests": [
5:         {
6:             "id": "0",

[Tue May 21 21:23:57 2013] [debug] Template "exception.development.json.ep" not found.
[Tue May 21 21:23:57 2013] [debug] Template "exception.json.ep" not found.
[Tue May 21 21:23:57 2013] [debug] Template "exception.development.html.ep" not found.
[Tue May 21 21:23:57 2013] [debug] Template "exception.html.ep" not found.
[Tue May 21 21:23:57 2013] [debug] Rendering inline template.
[Tue May 21 21:23:57 2013] [debug] Rendering inline template.
[Tue May 21 21:23:57 2013] [debug] 500 Internal Server Error (0.018856s, 53.034/s).
[Tue May 21 21:24:39 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 21:24:39 2013] [debug] GET "/forest".
[Tue May 21 21:24:39 2013] [debug] Routing to controller "AnnoTree::Forest" and action "list".
[Tue May 21 21:24:39 2013] [debug] Rendering template "forest/list.json.ep".
[Tue May 21 21:24:39 2013] [debug] 200 OK (0.003435s, 291.121/s).
[Tue May 21 21:32:19 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 21:32:19 2013] [debug] GET "/forest/0".
[Tue May 21 21:32:19 2013] [debug] Routing to controller "AnnoTree::Forest" and action "unique".
[Tue May 21 21:32:19 2013] [debug] Rendering template "forest/unique.json.ep".
[Tue May 21 21:32:19 2013] [debug] 200 OK (0.003433s, 291.290/s).
[Tue May 21 21:32:22 2013] [debug] GET "/forest/1".
[Tue May 21 21:32:22 2013] [debug] Routing to controller "AnnoTree::Forest" and action "unique".
[Tue May 21 21:32:22 2013] [debug] Rendering cached template "forest/unique.json.ep".
[Tue May 21 21:32:22 2013] [debug] 200 OK (0.000605s, 1652.893/s).
[Tue May 21 21:32:24 2013] [debug] GET "/forest/2".
[Tue May 21 21:32:24 2013] [debug] Routing to controller "AnnoTree::Forest" and action "unique".
[Tue May 21 21:32:24 2013] [debug] Rendering cached template "forest/unique.json.ep".
[Tue May 21 21:32:24 2013] [debug] 200 OK (0.000588s, 1700.680/s).
[Tue May 21 21:32:35 2013] [debug] GET "/forest".
[Tue May 21 21:32:35 2013] [debug] Routing to controller "AnnoTree::Forest" and action "list".
[Tue May 21 21:32:35 2013] [debug] Rendering template "forest/list.json.ep".
[Tue May 21 21:32:35 2013] [debug] 200 OK (0.002174s, 459.982/s).
[Tue May 21 21:34:07 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 21:34:07 2013] [debug] GET "/forest".
[Tue May 21 21:34:07 2013] [debug] Routing to controller "AnnoTree::Forest" and action "list".
[Tue May 21 21:34:07 2013] [debug] Rendering template "forest/list.json.ep".
[Tue May 21 21:34:07 2013] [debug] 200 OK (0.003333s, 300.030/s).
[Tue May 21 21:34:46 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 21:34:46 2013] [debug] GET "/forest".
[Tue May 21 21:34:46 2013] [debug] Routing to controller "AnnoTree::Forest" and action "list".
[Tue May 21 21:34:46 2013] [debug] Rendering template "forest/list.json.ep".
[Tue May 21 21:34:46 2013] [debug] 200 OK (0.003388s, 295.159/s).
[Tue May 21 21:36:44 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 21:36:44 2013] [debug] GET "/forest".
[Tue May 21 21:36:44 2013] [debug] Routing to controller "AnnoTree::Forest" and action "list".
[Tue May 21 21:36:44 2013] [debug] Rendering template "forest/list.json.ep".
[Tue May 21 21:36:44 2013] [debug] 200 OK (0.003449s, 289.939/s).
[Tue May 21 21:53:12 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 21:53:12 2013] [debug] GET "/forest/".
[Tue May 21 21:53:12 2013] [debug] Routing to controller "AnnoTree::Forest" and action "list".
[Tue May 21 21:53:12 2013] [debug] Rendering template "forest/list.json.ep".
[Tue May 21 21:53:12 2013] [error] Global symbol "$companies" requires explicit package name at template forest/list.json.ep line 1.
Global symbol "$companies" requires explicit package name at template forest/list.json.ep line 7.
Global symbol "$companies" requires explicit package name at template forest/list.json.ep line 8.
Global symbol "$companies" requires explicit package name at template forest/list.json.ep line 9.
4:     "forests": [
5:         <% for my $i (0..($numForests - 1)) { %>
6:         {
7:             "id": "<%== $companies->[$i]->{'id'} %>",
8:             "name": "<%== $companies->[$i]->{'name'} %>",
9:             "description": "<%== $companies->[$i]->{'description'} %>"
10:         }
11:         <%== "," if $i != ($numForests - 1) %>
12:         <% } %>
13:     ]
14: }

[Tue May 21 21:53:12 2013] [debug] Template "exception.development.json.ep" not found.
[Tue May 21 21:53:12 2013] [debug] Template "exception.json.ep" not found.
[Tue May 21 21:53:12 2013] [debug] Template "exception.development.html.ep" not found.
[Tue May 21 21:53:12 2013] [debug] Template "exception.html.ep" not found.
[Tue May 21 21:53:12 2013] [debug] Rendering inline template.
[Tue May 21 21:53:12 2013] [debug] Rendering inline template.
[Tue May 21 21:53:12 2013] [debug] 500 Internal Server Error (0.019142s, 52.241/s).
[Tue May 21 21:53:14 2013] [debug] GET "/forest/0".
[Tue May 21 21:53:14 2013] [debug] Routing to controller "AnnoTree::Forest" and action "unique".
[Tue May 21 21:53:14 2013] [debug] Rendering template "forest/unique.json.ep".
[Tue May 21 21:53:14 2013] [debug] 200 OK (0.002063s, 484.731/s).
[Tue May 21 21:53:17 2013] [debug] GET "/forest/1".
[Tue May 21 21:53:17 2013] [debug] Routing to controller "AnnoTree::Forest" and action "unique".
[Tue May 21 21:53:17 2013] [debug] Rendering cached template "forest/unique.json.ep".
[Tue May 21 21:53:17 2013] [debug] 200 OK (0.000687s, 1455.604/s).
[Tue May 21 21:53:19 2013] [debug] GET "/forest/2".
[Tue May 21 21:53:19 2013] [debug] Routing to controller "AnnoTree::Forest" and action "unique".
[Tue May 21 21:53:19 2013] [debug] Rendering cached template "forest/unique.json.ep".
[Tue May 21 21:53:19 2013] [debug] 200 OK (0.000617s, 1620.746/s).
[Tue May 21 21:53:47 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 21:53:47 2013] [debug] GET "/fores".
[Tue May 21 21:53:47 2013] [debug] Template "not_found.development.html.ep" not found.
[Tue May 21 21:53:47 2013] [debug] Template "not_found.html.ep" not found.
[Tue May 21 21:53:47 2013] [debug] Rendering inline template.
[Tue May 21 21:53:47 2013] [debug] Rendering inline template.
[Tue May 21 21:53:47 2013] [debug] 404 Not Found (0.011581s, 86.348/s).
[Tue May 21 21:53:49 2013] [debug] GET "/forest".
[Tue May 21 21:53:49 2013] [debug] Routing to controller "AnnoTree::Forest" and action "list".
[Tue May 21 21:53:49 2013] [debug] Rendering template "forest/list.json.ep".
[Tue May 21 21:53:49 2013] [debug] 200 OK (0.002587s, 386.548/s).
[Tue May 21 21:55:54 2013] [debug] GET "/0/tree".
[Tue May 21 21:55:54 2013] [debug] Routing to controller "AnnoTree::Tree" and action "list".
[Tue May 21 21:55:54 2013] [debug] Rendering template "tree/list.json.ep".
[Tue May 21 21:55:54 2013] [debug] 200 OK (0.002675s, 373.832/s).
[Tue May 21 22:03:29 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 22:03:29 2013] [debug] GET "/0/0/branch".
[Tue May 21 22:03:29 2013] [error] AnnoTree/Branch.pm did not return a true value at (eval 231) line 1.

[Tue May 21 22:03:29 2013] [debug] Template "exception.development.html.ep" not found.
[Tue May 21 22:03:29 2013] [debug] Template "exception.html.ep" not found.
[Tue May 21 22:03:29 2013] [debug] Rendering inline template.
[Tue May 21 22:03:29 2013] [debug] Rendering inline template.
[Tue May 21 22:03:29 2013] [debug] 500 Internal Server Error (0.015898s, 62.901/s).
[Tue May 21 22:03:40 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 22:03:40 2013] [debug] GET "/0/0/branch".
[Tue May 21 22:03:40 2013] [debug] Routing to controller "AnnoTree::Branch" and action "list".
[Tue May 21 22:03:40 2013] [debug] Rendering template "branch/list.json.ep".
[Tue May 21 22:03:40 2013] [debug] 200 OK (0.003082s, 324.465/s).
[Tue May 21 22:03:43 2013] [debug] GET "/w/0/branch".
[Tue May 21 22:03:43 2013] [debug] Template "not_found.development.html.ep" not found.
[Tue May 21 22:03:43 2013] [debug] Template "not_found.html.ep" not found.
[Tue May 21 22:03:43 2013] [debug] Rendering inline template.
[Tue May 21 22:03:43 2013] [debug] Rendering inline template.
[Tue May 21 22:03:43 2013] [debug] 404 Not Found (0.010661s, 93.800/s).
[Tue May 21 22:03:50 2013] [debug] GET "/0/0/branch".
[Tue May 21 22:03:50 2013] [debug] Routing to controller "AnnoTree::Branch" and action "list".
[Tue May 21 22:03:50 2013] [debug] Rendering cached template "branch/list.json.ep".
[Tue May 21 22:03:50 2013] [debug] 200 OK (0.000476s, 2100.840/s).
[Tue May 21 22:03:56 2013] [debug] GET "/0/e/branch".
[Tue May 21 22:03:56 2013] [debug] Template "not_found.development.html.ep" not found.
[Tue May 21 22:03:56 2013] [debug] Template "not_found.html.ep" not found.
[Tue May 21 22:03:56 2013] [debug] Rendering cached inline template.
[Tue May 21 22:03:56 2013] [debug] Rendering cached inline template.
[Tue May 21 22:03:56 2013] [debug] 404 Not Found (0.003583s, 279.096/s).
[Tue May 21 22:03:59 2013] [debug] GET "/0/0/branch".
[Tue May 21 22:03:59 2013] [debug] Routing to controller "AnnoTree::Branch" and action "list".
[Tue May 21 22:03:59 2013] [debug] Rendering cached template "branch/list.json.ep".
[Tue May 21 22:03:59 2013] [debug] 200 OK (0.000472s, 2118.644/s).
[Tue May 21 22:11:08 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 22:11:08 2013] [debug] GET "/0/tree".
[Tue May 21 22:11:08 2013] [debug] Routing to controller "AnnoTree::Tree" and action "list".
[Tue May 21 22:11:08 2013] [debug] Rendering template "tree/list.json.ep".
[Tue May 21 22:11:08 2013] [debug] 200 OK (0.004159s, 240.442/s).
[Tue May 21 22:11:12 2013] [debug] GET "/1/tree".
[Tue May 21 22:11:12 2013] [debug] Routing to controller "AnnoTree::Tree" and action "list".
[Tue May 21 22:11:12 2013] [debug] Rendering cached template "tree/list.json.ep".
[Tue May 21 22:11:12 2013] [debug] 200 OK (0.000611s, 1636.661/s).
[Tue May 21 22:11:16 2013] [debug] GET "/2/tree".
[Tue May 21 22:11:16 2013] [debug] Routing to controller "AnnoTree::Tree" and action "list".
[Tue May 21 22:11:16 2013] [debug] Rendering cached template "tree/list.json.ep".
[Tue May 21 22:11:16 2013] [debug] 200 OK (0.000621s, 1610.306/s).
[Tue May 21 22:11:19 2013] [debug] GET "/0/0/branch".
[Tue May 21 22:11:19 2013] [debug] Routing to controller "AnnoTree::Branch" and action "list".
[Tue May 21 22:11:19 2013] [debug] Rendering template "branch/list.json.ep".
[Tue May 21 22:11:19 2013] [debug] 200 OK (0.002064s, 484.496/s).
[Tue May 21 22:29:04 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 22:29:04 2013] [debug] GET "/0/0/branch".
[Tue May 21 22:29:04 2013] [debug] Routing to controller "AnnoTree::Branch" and action "list".
[Tue May 21 22:29:04 2013] [debug] $VAR1 = [
          {
            'created' => '2013-05-21 00:10:34',
            'description' => 'The mobile application',
            'status' => 'active',
            'id' => '0',
            'name' => 'App'
          },
          {
            'created' => '2013-05-21 11:46:54',
            'description' => 'The web based collaboration platform',
            'status' => 'active',
            'id' => '1',
            'name' => 'CCP'
          }
        ];

[Tue May 21 22:29:04 2013] [debug] Rendering template "branch/list.json.ep".
[Tue May 21 22:29:04 2013] [debug] 200 OK (0.003432s, 291.375/s).
[Tue May 21 22:33:06 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 22:33:06 2013] [debug] GET "/0/0/branch".
[Tue May 21 22:33:06 2013] [debug] Routing to controller "AnnoTree::Branch" and action "list".
[Tue May 21 22:33:06 2013] [debug] $VAR1 = [
          {
            'id' => '0',
            'name' => 'App',
            'description' => 'The mobile application',
            'created' => '2013-05-21 00:10:34',
            'status' => 'active'
          },
          {
            'created' => '2013-05-21 11:46:54',
            'description' => 'The web based collaboration platform',
            'status' => 'active',
            'id' => '1',
            'name' => 'CCP'
          }
        ];

[Tue May 21 22:33:06 2013] [debug] Rendering template "branch/list.json.ep".
[Tue May 21 22:33:06 2013] [error] syntax error at template branch/list.json.ep line 1, near "@($branchRef"
1: <% my $numBranches = scalar @($branchRef); %>
2: {
3:     "numBranches": "<%== $numBranches %>"
4: }

[Tue May 21 22:33:06 2013] [debug] Template "exception.development.json.ep" not found.
[Tue May 21 22:33:06 2013] [debug] Template "exception.json.ep" not found.
[Tue May 21 22:33:06 2013] [debug] Template "exception.development.html.ep" not found.
[Tue May 21 22:33:06 2013] [debug] Template "exception.html.ep" not found.
[Tue May 21 22:33:06 2013] [debug] Rendering inline template.
[Tue May 21 22:33:06 2013] [debug] Rendering inline template.
[Tue May 21 22:33:06 2013] [debug] 500 Internal Server Error (0.018881s, 52.963/s).
[Tue May 21 22:33:25 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 22:33:25 2013] [debug] GET "/0/0/branch".
[Tue May 21 22:33:25 2013] [debug] Routing to controller "AnnoTree::Branch" and action "list".
[Tue May 21 22:33:25 2013] [debug] $VAR1 = [
          {
            'name' => 'App',
            'id' => '0',
            'status' => 'active',
            'description' => 'The mobile application',
            'created' => '2013-05-21 00:10:34'
          },
          {
            'status' => 'active',
            'created' => '2013-05-21 11:46:54',
            'description' => 'The web based collaboration platform',
            'name' => 'CCP',
            'id' => '1'
          }
        ];

[Tue May 21 22:33:25 2013] [debug] Rendering template "branch/list.json.ep".
[Tue May 21 22:33:25 2013] [debug] 200 OK (0.003436s, 291.036/s).
[Tue May 21 22:36:03 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 22:36:03 2013] [debug] GET "/0/0/branch".
[Tue May 21 22:36:03 2013] [debug] Routing to controller "AnnoTree::Branch" and action "list".
[Tue May 21 22:36:03 2013] [debug] $VAR1 = [
          {
            'description' => 'The mobile application',
            'created' => '2013-05-21 00:10:34',
            'status' => 'active',
            'id' => '0',
            'name' => 'App'
          },
          {
            'status' => 'active',
            'description' => 'The web based collaboration platform',
            'created' => '2013-05-21 11:46:54',
            'name' => 'CCP',
            'id' => '1'
          }
        ];

[Tue May 21 22:36:03 2013] [debug] Rendering template "branch/list.json.ep".
[Tue May 21 22:36:03 2013] [debug] 200 OK (0.003483s, 287.109/s).
[Tue May 21 22:36:30 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 22:36:30 2013] [debug] GET "/0/0/branch".
[Tue May 21 22:36:30 2013] [debug] Routing to controller "AnnoTree::Branch" and action "list".
[Tue May 21 22:36:30 2013] [debug] $VAR1 = [
          {
            'description' => 'The mobile application',
            'created' => '2013-05-21 00:10:34',
            'status' => 'active',
            'id' => '0',
            'name' => 'App'
          },
          {
            'status' => 'active',
            'description' => 'The web based collaboration platform',
            'created' => '2013-05-21 11:46:54',
            'name' => 'CCP',
            'id' => '1'
          }
        ];

[Tue May 21 22:36:30 2013] [debug] Rendering template "branch/list.json.ep".
[Tue May 21 22:36:30 2013] [error] Global symbol "$numTrees" requires explicit package name at template branch/list.json.ep line 9.
4:     "branches": [
5:         <% for my $i (0..($numBranches - 1)) { %>
6:         {
7:             "id": "<%== $branchRef->[$i]->{'id'} %>"
8:         }
9:         <%== "," if $i != ($numTrees - 1) %>
10:         <% } %>
11:     ]
12: }

[Tue May 21 22:36:30 2013] [debug] Template "exception.development.json.ep" not found.
[Tue May 21 22:36:30 2013] [debug] Template "exception.json.ep" not found.
[Tue May 21 22:36:30 2013] [debug] Template "exception.development.html.ep" not found.
[Tue May 21 22:36:30 2013] [debug] Template "exception.html.ep" not found.
[Tue May 21 22:36:30 2013] [debug] Rendering inline template.
[Tue May 21 22:36:30 2013] [debug] Rendering inline template.
[Tue May 21 22:36:30 2013] [debug] 500 Internal Server Error (0.019431s, 51.464/s).
[Tue May 21 22:36:46 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 22:36:46 2013] [debug] GET "/0/0/branch".
[Tue May 21 22:36:46 2013] [debug] Routing to controller "AnnoTree::Branch" and action "list".
[Tue May 21 22:36:46 2013] [debug] $VAR1 = [
          {
            'status' => 'active',
            'description' => 'The mobile application',
            'created' => '2013-05-21 00:10:34',
            'name' => 'App',
            'id' => '0'
          },
          {
            'id' => '1',
            'name' => 'CCP',
            'description' => 'The web based collaboration platform',
            'created' => '2013-05-21 11:46:54',
            'status' => 'active'
          }
        ];

[Tue May 21 22:36:46 2013] [debug] Rendering template "branch/list.json.ep".
[Tue May 21 22:36:46 2013] [debug] 200 OK (0.003611s, 276.932/s).
[Tue May 21 22:39:16 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 22:39:16 2013] [debug] GET "/0/0/branch".
[Tue May 21 22:39:16 2013] [debug] Routing to controller "AnnoTree::Branch" and action "list".
[Tue May 21 22:39:16 2013] [debug] Rendering template "branch/list.json.ep".
[Tue May 21 22:39:16 2013] [debug] 200 OK (0.003689s, 271.076/s).
[Tue May 21 22:39:39 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 22:39:39 2013] [debug] GET "/0/0/branch".
[Tue May 21 22:39:39 2013] [debug] Routing to controller "AnnoTree::Branch" and action "list".
[Tue May 21 22:39:39 2013] [debug] Rendering template "branch/list.json.ep".
[Tue May 21 22:39:39 2013] [debug] 200 OK (0.003703s, 270.051/s).
[Tue May 21 22:45:28 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 22:45:28 2013] [debug] GET "/0/0/branch".
[Tue May 21 22:45:28 2013] [debug] Routing to controller "AnnoTree::Branch" and action "list".
[Tue May 21 22:45:28 2013] [debug] Rendering template "branch/list.json.ep".
[Tue May 21 22:45:28 2013] [debug] 200 OK (0.003687s, 271.223/s).
[Tue May 21 22:45:31 2013] [debug] GET "/0/1/branch".
[Tue May 21 22:45:31 2013] [debug] Routing to controller "AnnoTree::Branch" and action "list".
[Tue May 21 22:45:31 2013] [debug] Rendering cached template "branch/list.json.ep".
[Tue May 21 22:45:31 2013] [debug] 200 OK (0.000634s, 1577.287/s).
[Tue May 21 22:52:14 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 22:52:14 2013] [debug] GET "/0/1/branch".
[Tue May 21 22:52:14 2013] [debug] Routing to controller "AnnoTree::Branch" and action "list".
[Tue May 21 22:52:14 2013] [debug] Rendering template "branch/list.json.ep".
[Tue May 21 22:52:14 2013] [debug] 200 OK (0.003716s, 269.107/s).
[Tue May 21 22:52:20 2013] [debug] GET "/1/1/branch".
[Tue May 21 22:52:20 2013] [debug] Routing to controller "AnnoTree::Branch" and action "list".
[Tue May 21 22:52:20 2013] [debug] Rendering cached template "branch/list.json.ep".
[Tue May 21 22:52:20 2013] [error] Can't use an undefined value as an ARRAY reference at template branch/list.json.ep line 1.
1: <% my $numBranches = scalar @{$branchRef}; %>
2: {
3:     "numBranches": "<%== $numBranches %>",
4:     "branches": [
5:         <% for my $i (0..($numBranches - 1)) { %>
6:         {

[Tue May 21 22:52:20 2013] [debug] Template "exception.development.json.ep" not found.
[Tue May 21 22:52:20 2013] [debug] Template "exception.json.ep" not found.
[Tue May 21 22:52:20 2013] [debug] Template "exception.development.html.ep" not found.
[Tue May 21 22:52:20 2013] [debug] Template "exception.html.ep" not found.
[Tue May 21 22:52:20 2013] [debug] Rendering inline template.
[Tue May 21 22:52:20 2013] [debug] Rendering inline template.
[Tue May 21 22:52:20 2013] [debug] 500 Internal Server Error (0.016114s, 62.058/s).
[Tue May 21 22:52:24 2013] [debug] GET "/1/0/branch".
[Tue May 21 22:52:24 2013] [debug] Routing to controller "AnnoTree::Branch" and action "list".
[Tue May 21 22:52:24 2013] [debug] Rendering cached template "branch/list.json.ep".
[Tue May 21 22:52:24 2013] [debug] 200 OK (0.000656s, 1524.390/s).
[Tue May 21 23:31:04 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 23:31:04 2013] [debug] GET "/1/0/branch".
[Tue May 21 23:31:04 2013] [error] Unmatched right square bracket at /home/matt/Documents/AnnoTree/WebServices/anno_tree/script/../lib/AnnoTree/Branch.pm line 71, at end of line
syntax error at /home/matt/Documents/AnnoTree/WebServices/anno_tree/script/../lib/AnnoTree/Branch.pm line 71, near "]"
Global symbol "@branches" requires explicit package name at /home/matt/Documents/AnnoTree/WebServices/anno_tree/script/../lib/AnnoTree/Branch.pm line 79.
Compilation failed in require at (eval 231) line 1.

[Tue May 21 23:31:04 2013] [debug] Template "exception.development.html.ep" not found.
[Tue May 21 23:31:04 2013] [debug] Template "exception.html.ep" not found.
[Tue May 21 23:31:04 2013] [debug] Rendering inline template.
[Tue May 21 23:31:04 2013] [debug] Rendering inline template.
[Tue May 21 23:31:04 2013] [debug] 500 Internal Server Error (0.016851s, 59.344/s).
[Tue May 21 23:31:20 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 23:31:20 2013] [debug] GET "/1/0/branch".
[Tue May 21 23:31:20 2013] [debug] Routing to controller "AnnoTree::Branch" and action "list".
[Tue May 21 23:31:20 2013] [debug] Rendering template "branch/list.json.ep".
[Tue May 21 23:31:20 2013] [debug] 200 OK (0.003745s, 267.023/s).
[Tue May 21 23:31:23 2013] [debug] GET "/1/1/branch".
[Tue May 21 23:31:23 2013] [debug] Routing to controller "AnnoTree::Branch" and action "list".
[Tue May 21 23:31:23 2013] [debug] Rendering cached template "branch/list.json.ep".
[Tue May 21 23:31:23 2013] [debug] 200 OK (0.000652s, 1533.742/s).
[Tue May 21 23:40:57 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 23:40:57 2013] [debug] GET "/1/1/branch".
[Tue May 21 23:40:57 2013] [debug] Routing to controller "AnnoTree::Branch" and action "list".
[Tue May 21 23:40:57 2013] [debug] Rendering template "branch/list.json.ep".
[Tue May 21 23:40:57 2013] [debug] 200 OK (0.003832s, 260.960/s).
[Tue May 21 23:48:39 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 23:48:39 2013] [debug] GET "/1/1/branch".
[Tue May 21 23:48:39 2013] [debug] Routing to controller "AnnoTree::Branch" and action "list".
[Tue May 21 23:48:39 2013] [debug] Rendering template "branch/list.json.ep".
[Tue May 21 23:48:39 2013] [debug] 200 OK (0.003817s, 261.986/s).
[Tue May 21 23:48:45 2013] [debug] GET "/2/1/branch".
[Tue May 21 23:48:45 2013] [debug] Routing to controller "AnnoTree::Branch" and action "list".
[Tue May 21 23:48:45 2013] [debug] Rendering cached template "branch/list.json.ep".
[Tue May 21 23:48:45 2013] [debug] 200 OK (0.000625s, 1600.000/s).
[Tue May 21 23:48:56 2013] [debug] GET "/2/2/branch".
[Tue May 21 23:48:56 2013] [debug] Routing to controller "AnnoTree::Branch" and action "list".
[Tue May 21 23:48:56 2013] [debug] Rendering cached template "branch/list.json.ep".
[Tue May 21 23:48:56 2013] [debug] 200 OK (0.000673s, 1485.884/s).
[Tue May 21 23:48:59 2013] [debug] GET "/2/3/branch".
[Tue May 21 23:48:59 2013] [debug] Routing to controller "AnnoTree::Branch" and action "list".
[Tue May 21 23:48:59 2013] [debug] Rendering cached template "branch/list.json.ep".
[Tue May 21 23:48:59 2013] [debug] 200 OK (0.000580s, 1724.138/s).
[Tue May 21 23:49:03 2013] [debug] GET "/1/3/branch".
[Tue May 21 23:49:03 2013] [debug] Routing to controller "AnnoTree::Branch" and action "list".
[Tue May 21 23:49:03 2013] [debug] Rendering cached template "branch/list.json.ep".
[Tue May 21 23:49:03 2013] [error] Can't use an undefined value as an ARRAY reference at template branch/list.json.ep line 1.
1: <% my $numBranches = scalar @{$branchRef}; %>
2: {
3:     "numBranches": "<%== $numBranches %>",
4:     "branches": [
5:         <% for my $i (0..($numBranches - 1)) { %>
6:         {

[Tue May 21 23:49:03 2013] [debug] Template "exception.development.json.ep" not found.
[Tue May 21 23:49:03 2013] [debug] Template "exception.json.ep" not found.
[Tue May 21 23:49:03 2013] [debug] Template "exception.development.html.ep" not found.
[Tue May 21 23:49:03 2013] [debug] Template "exception.html.ep" not found.
[Tue May 21 23:49:03 2013] [debug] Rendering inline template.
[Tue May 21 23:49:03 2013] [debug] Rendering inline template.
[Tue May 21 23:49:03 2013] [debug] 500 Internal Server Error (0.016404s, 60.961/s).
[Tue May 21 23:49:07 2013] [debug] GET "/1/1/branch".
[Tue May 21 23:49:07 2013] [debug] Routing to controller "AnnoTree::Branch" and action "list".
[Tue May 21 23:49:07 2013] [debug] Rendering cached template "branch/list.json.ep".
[Tue May 21 23:49:07 2013] [debug] 200 OK (0.000513s, 1949.318/s).
[Tue May 21 23:49:10 2013] [debug] GET "/1/0/branch".
[Tue May 21 23:49:10 2013] [debug] Routing to controller "AnnoTree::Branch" and action "list".
[Tue May 21 23:49:10 2013] [debug] Rendering cached template "branch/list.json.ep".
[Tue May 21 23:49:10 2013] [debug] 200 OK (0.000628s, 1592.357/s).
[Tue May 21 23:49:13 2013] [debug] GET "/1/2/branch".
[Tue May 21 23:49:13 2013] [debug] Routing to controller "AnnoTree::Branch" and action "list".
[Tue May 21 23:49:13 2013] [debug] Rendering cached template "branch/list.json.ep".
[Tue May 21 23:49:13 2013] [debug] 200 OK (0.000716s, 1396.648/s).
[Tue May 21 23:50:25 2013] [debug] Your secret passphrase needs to be changed!!!
[Tue May 21 23:50:25 2013] [debug] GET "/1/tree".
[Tue May 21 23:50:25 2013] [debug] Routing to controller "AnnoTree::Tree" and action "list".
[Tue May 21 23:50:25 2013] [debug] Rendering template "tree/list.json.ep".
[Tue May 21 23:50:25 2013] [debug] 200 OK (0.003847s, 259.943/s).
[Tue May 21 23:50:58 2013] [debug] GET "/perldoc/*module".
[Tue May 21 23:50:58 2013] [debug] Routing to a callback.
[Tue May 21 23:50:58 2013] [debug] 302 Found (0.000593s, 1686.341/s).
[Tue May 21 23:51:07 2013] [debug] GET "/perldoc".
[Tue May 21 23:51:07 2013] [debug] Routing to a callback.
[Tue May 21 23:51:07 2013] [debug] Rendering inline template.
[Tue May 21 23:51:07 2013] [debug] Rendering inline template.
[Tue May 21 23:51:07 2013] [debug] 200 OK (0.035512s, 28.159/s).
[Tue May 21 23:51:14 2013] [debug] GET "/".
[Tue May 21 23:51:14 2013] [debug] Routing to controller "AnnoTree::Example" and action "welcome".
[Tue May 21 23:51:14 2013] [debug] Rendering template "example/welcome.html.ep".
[Tue May 21 23:51:14 2013] [debug] Careful, "layout" is a reserved stash value.
[Tue May 21 23:51:14 2013] [debug] Rendering template "layouts/default.html.ep".
[Tue May 21 23:51:14 2013] [debug] 200 OK (0.004778s, 209.293/s).
[Wed May 22 23:14:00 2013] [debug] Your secret passphrase needs to be changed!!!
[Wed May 22 23:14:00 2013] [debug] GET "/0/0/branch".
[Wed May 22 23:14:00 2013] [debug] Routing to controller "AnnoTree::Branch" and action "list".
[Wed May 22 23:14:00 2013] [debug] Rendering template "branch/list.json.ep".
[Wed May 22 23:14:00 2013] [debug] 200 OK (0.004790s, 208.768/s).
[Wed May 22 23:15:24 2013] [debug] GET "/0/forest".
[Wed May 22 23:15:24 2013] [debug] Template "not_found.development.html.ep" not found.
[Wed May 22 23:15:24 2013] [debug] Template "not_found.html.ep" not found.
[Wed May 22 23:15:24 2013] [debug] Rendering inline template.
[Wed May 22 23:15:24 2013] [debug] Rendering inline template.
[Wed May 22 23:15:24 2013] [debug] 404 Not Found (0.010713s, 93.345/s).
[Wed May 22 23:15:29 2013] [debug] GET "/forest".
[Wed May 22 23:15:29 2013] [debug] Routing to controller "AnnoTree::Forest" and action "list".
[Wed May 22 23:15:29 2013] [debug] Rendering template "forest/list.json.ep".
[Wed May 22 23:15:29 2013] [debug] 200 OK (0.002782s, 359.454/s).
[Wed May 22 23:15:38 2013] [debug] GET "/0/tree".
[Wed May 22 23:15:38 2013] [debug] Routing to controller "AnnoTree::Tree" and action "list".
[Wed May 22 23:15:38 2013] [debug] Rendering template "tree/list.json.ep".
[Wed May 22 23:15:38 2013] [debug] 200 OK (0.002840s, 352.113/s).
[Wed May 22 23:15:47 2013] [debug] GET "/0/0/tree".
[Wed May 22 23:15:47 2013] [debug] Template "not_found.development.html.ep" not found.
[Wed May 22 23:15:47 2013] [debug] Template "not_found.html.ep" not found.
[Wed May 22 23:15:47 2013] [debug] Rendering cached inline template.
[Wed May 22 23:15:47 2013] [debug] Rendering cached inline template.
[Wed May 22 23:15:47 2013] [debug] 404 Not Found (0.004004s, 249.750/s).
[Wed May 22 23:15:55 2013] [debug] GET "/0/0/branch".
[Wed May 22 23:15:55 2013] [debug] Routing to controller "AnnoTree::Branch" and action "list".
[Wed May 22 23:15:55 2013] [debug] Rendering cached template "branch/list.json.ep".
[Wed May 22 23:15:55 2013] [debug] 200 OK (0.000511s, 1956.947/s).
[Wed May 22 23:32:23 2013] [debug] Your secret passphrase needs to be changed!!!
[Wed May 22 23:32:23 2013] [debug] GET "/0/0/0/leaf".
[Wed May 22 23:32:23 2013] [debug] Routing to controller "AnnoTree::Leaves::Leaf" and action "list".
[Wed May 22 23:32:23 2013] [debug] 200 OK (0.000792s, 1262.626/s).
[Wed May 22 23:34:50 2013] [debug] Your secret passphrase needs to be changed!!!
[Wed May 22 23:34:50 2013] [debug] GET "/0/0/0/leaf".
[Wed May 22 23:34:50 2013] [debug] Routing to controller "AnnoTree::Leaves::Leaf" and action "list".
[Wed May 22 23:34:50 2013] [debug] Template "leaves/leaf/list.json.ep" not found.
[Wed May 22 23:34:50 2013] [debug] Template "not_found.development.json.ep" not found.
[Wed May 22 23:34:50 2013] [debug] Template "not_found.json.ep" not found.
[Wed May 22 23:34:50 2013] [debug] Template "not_found.development.html.ep" not found.
[Wed May 22 23:34:50 2013] [debug] Template "not_found.html.ep" not found.
[Wed May 22 23:34:50 2013] [debug] Rendering inline template.
[Wed May 22 23:34:50 2013] [debug] Rendering inline template.
[Wed May 22 23:34:50 2013] [debug] 404 Not Found (0.012358s, 80.919/s).
[Wed May 22 23:35:41 2013] [debug] Your secret passphrase needs to be changed!!!
[Wed May 22 23:35:41 2013] [debug] GET "/0/0/0/leaf".
[Wed May 22 23:35:41 2013] [debug] Routing to controller "AnnoTree::Leaves::Leaf" and action "list".
[Wed May 22 23:35:41 2013] [debug] Rendering template "leaves/leaf/list.json.ep".
[Wed May 22 23:35:41 2013] [debug] 200 OK (0.003300s, 303.030/s).
[Thu May 23 19:54:41 2013] [debug] Your secret passphrase needs to be changed!!!
[Thu May 23 19:54:41 2013] [debug] GET "/0/0/0/leaf/testupload".
[Thu May 23 19:54:41 2013] [debug] Routing to controller "AnnoTree::Leaves::Leaf" and action "testImageUpload".
[Thu May 23 19:54:41 2013] [debug] Template "leaves/leaf/testImageUpload.html.ep" not found.
[Thu May 23 19:54:41 2013] [debug] Template "not_found.development.html.ep" not found.
[Thu May 23 19:54:41 2013] [debug] Template "not_found.html.ep" not found.
[Thu May 23 19:54:41 2013] [debug] Rendering inline template.
[Thu May 23 19:54:41 2013] [debug] Rendering inline template.
[Thu May 23 19:54:41 2013] [debug] 404 Not Found (0.013155s, 76.017/s).
[Thu May 23 19:59:50 2013] [debug] Your secret passphrase needs to be changed!!!
[Thu May 23 19:59:50 2013] [debug] GET "/0/0/0/leaf/testupload".
[Thu May 23 19:59:50 2013] [debug] Routing to controller "AnnoTree::Leaves::Leaf" and action "testImageUpload".
[Thu May 23 19:59:50 2013] [debug] Template "testupload.html.ep" not found.
[Thu May 23 19:59:50 2013] [debug] Template "not_found.development.html.ep" not found.
[Thu May 23 19:59:50 2013] [debug] Template "not_found.html.ep" not found.
[Thu May 23 19:59:50 2013] [debug] Rendering inline template.
[Thu May 23 19:59:50 2013] [debug] Rendering inline template.
[Thu May 23 19:59:50 2013] [debug] 404 Not Found (0.012194s, 82.008/s).
[Thu May 23 20:00:28 2013] [debug] GET "/0/0/0/leaf/testupload".
[Thu May 23 20:00:28 2013] [debug] Routing to controller "AnnoTree::Leaves::Leaf" and action "testImageUpload".
[Thu May 23 20:00:28 2013] [debug] Template "testupload.html.ep" not found.
[Thu May 23 20:00:28 2013] [debug] Template "not_found.development.html.ep" not found.
[Thu May 23 20:00:28 2013] [debug] Template "not_found.html.ep" not found.
[Thu May 23 20:00:28 2013] [debug] Rendering cached inline template.
[Thu May 23 20:00:28 2013] [debug] Rendering cached inline template.
[Thu May 23 20:00:28 2013] [debug] 404 Not Found (0.003465s, 288.600/s).
[Thu May 23 20:00:31 2013] [debug] GET "/0/0/0/leaf/testupload".
[Thu May 23 20:00:31 2013] [debug] Routing to controller "AnnoTree::Leaves::Leaf" and action "testImageUpload".
[Thu May 23 20:00:31 2013] [debug] Template "testupload.html.ep" not found.
[Thu May 23 20:00:31 2013] [debug] Template "not_found.development.html.ep" not found.
[Thu May 23 20:00:31 2013] [debug] Template "not_found.html.ep" not found.
[Thu May 23 20:00:31 2013] [debug] Rendering cached inline template.
[Thu May 23 20:00:31 2013] [debug] Rendering cached inline template.
[Thu May 23 20:00:31 2013] [debug] 404 Not Found (0.003676s, 272.035/s).
[Thu May 23 20:01:00 2013] [debug] Your secret passphrase needs to be changed!!!
[Thu May 23 20:01:00 2013] [debug] GET "/0/0/0/leaf/testupload".
[Thu May 23 20:01:00 2013] [debug] Routing to controller "AnnoTree::Leaves::Leaf" and action "testImageUpload".
[Thu May 23 20:01:00 2013] [debug] Rendering template "leaves/leaf/testupload.html.ep".
[Thu May 23 20:01:00 2013] [debug] 200 OK (0.004169s, 239.866/s).
[Thu May 23 20:12:25 2013] [debug] Your secret passphrase needs to be changed!!!
[Thu May 23 20:12:25 2013] [debug] GET "/0/0/0/leaf/upload".
[Thu May 23 20:12:25 2013] [debug] Template "not_found.development.html.ep" not found.
[Thu May 23 20:12:25 2013] [debug] Template "not_found.html.ep" not found.
[Thu May 23 20:12:25 2013] [debug] Rendering inline template.
[Thu May 23 20:12:25 2013] [debug] Rendering inline template.
[Thu May 23 20:12:25 2013] [debug] 404 Not Found (0.011744s, 85.150/s).
[Thu May 23 20:13:29 2013] [debug] Your secret passphrase needs to be changed!!!
[Thu May 23 20:13:29 2013] [debug] GET "/0/0/0/leaf/testupload".
[Thu May 23 20:13:29 2013] [error] syntax error at /home/matt/Documents/AnnoTree/WebServices/anno_tree/script/../lib/AnnoTree/Leaves/Leaf.pm line 6, near "helper debug"
syntax error at /home/matt/Documents/AnnoTree/WebServices/anno_tree/script/../lib/AnnoTree/Leaves/Leaf.pm line 9, near "}"
Compilation failed in require at (eval 230) line 1.

[Thu May 23 20:13:29 2013] [debug] Template "exception.development.html.ep" not found.
[Thu May 23 20:13:29 2013] [debug] Template "exception.html.ep" not found.
[Thu May 23 20:13:29 2013] [debug] Rendering inline template.
[Thu May 23 20:13:29 2013] [debug] Rendering inline template.
[Thu May 23 20:13:29 2013] [debug] 500 Internal Server Error (0.016957s, 58.973/s).
[Thu May 23 20:17:24 2013] [debug] Your secret passphrase needs to be changed!!!
[Thu May 23 20:17:24 2013] [debug] GET "/0/0/0/leaf/testupload".
[Thu May 23 20:17:24 2013] [error] syntax error at /home/matt/Documents/AnnoTree/WebServices/anno_tree/script/../lib/AnnoTree/Leaves/Leaf.pm line 6, near "plugin 'DebugHelper'"
Compilation failed in require at (eval 230) line 1.

[Thu May 23 20:17:24 2013] [debug] Template "exception.development.html.ep" not found.
[Thu May 23 20:17:24 2013] [debug] Template "exception.html.ep" not found.
[Thu May 23 20:17:24 2013] [debug] Rendering inline template.
[Thu May 23 20:17:24 2013] [debug] Rendering inline template.
[Thu May 23 20:17:24 2013] [debug] 500 Internal Server Error (0.017083s, 58.538/s).
[Thu May 23 20:18:21 2013] [debug] Your secret passphrase needs to be changed!!!
[Thu May 23 20:18:21 2013] [debug] GET "/0/0/0/leaf/testupload".
[Thu May 23 20:18:21 2013] [debug] Routing to controller "AnnoTree::Leaves::Leaf" and action "testImageUpload".
[Thu May 23 20:18:21 2013] [debug] Rendering template "leaves/leaf/testupload.html.ep".
[Thu May 23 20:18:21 2013] [debug] 200 OK (0.004226s, 236.630/s).
[Thu May 23 20:20:12 2013] [debug] Your secret passphrase needs to be changed!!!
[Thu May 23 20:20:12 2013] [debug] GET "/0/0/0/leaf/testupload".
[Thu May 23 20:20:12 2013] [error] syntax error at /home/matt/Documents/AnnoTree/WebServices/anno_tree/script/../lib/AnnoTree/Leaves/Leaf.pm line 6, near "plugin 'DebugHelper'"
Compilation failed in require at (eval 230) line 1.

[Thu May 23 20:20:12 2013] [debug] Template "exception.development.html.ep" not found.
[Thu May 23 20:20:12 2013] [debug] Template "exception.html.ep" not found.
[Thu May 23 20:20:12 2013] [debug] Rendering inline template.
[Thu May 23 20:20:12 2013] [debug] Rendering inline template.
[Thu May 23 20:20:12 2013] [debug] 500 Internal Server Error (0.016798s, 59.531/s).
[Thu May 23 20:23:56 2013] [debug] GET "/0/0/0/leaf/testupload".
[Thu May 23 20:23:56 2013] [debug] Routing to controller "AnnoTree::Leaves::Leaf" and action "testImageUpload".
[Thu May 23 20:23:56 2013] [debug] Action not found in controller.
[Thu May 23 20:23:56 2013] [debug] Template "leaves/leaf/testImageUpload.html.ep" not found.
[Thu May 23 20:23:56 2013] [debug] Template "not_found.development.html.ep" not found.
[Thu May 23 20:23:56 2013] [debug] Template "not_found.html.ep" not found.
[Thu May 23 20:23:56 2013] [debug] Rendering inline template.
[Thu May 23 20:23:56 2013] [debug] Rendering inline template.
[Thu May 23 20:23:56 2013] [debug] 404 Not Found (0.010627s, 94.100/s).
[Thu May 23 20:31:08 2013] [debug] GET "/0/0/0/leaf/testupload".
[Thu May 23 20:31:08 2013] [debug] Routing to controller "AnnoTree::Leaves::Leaf" and action "testImageUpload".
[Thu May 23 20:31:08 2013] [debug] Action not found in controller.
[Thu May 23 20:31:08 2013] [debug] Template "leaves/leaf/testImageUpload.html.ep" not found.
[Thu May 23 20:31:08 2013] [debug] Template "not_found.development.html.ep" not found.
[Thu May 23 20:31:08 2013] [debug] Template "not_found.html.ep" not found.
[Thu May 23 20:31:08 2013] [debug] Rendering cached inline template.
[Thu May 23 20:31:08 2013] [debug] Rendering cached inline template.
[Thu May 23 20:31:08 2013] [debug] 404 Not Found (0.003586s, 278.862/s).
[Thu May 23 20:31:39 2013] [debug] Your secret passphrase needs to be changed!!!
[Thu May 23 20:31:39 2013] [debug] GET "/0/0/0/leaf/testupload".
[Thu May 23 20:31:39 2013] [debug] Routing to controller "AnnoTree::Leaves::Leaf" and action "testImageUpload".
[Thu May 23 20:31:39 2013] [debug] Rendering template "leaves/leaf/testupload.html.ep".
[Thu May 23 20:31:39 2013] [debug] 200 OK (0.004283s, 233.481/s).
[Thu May 23 20:31:49 2013] [debug] Your secret passphrase needs to be changed!!!
[Thu May 23 20:31:49 2013] [debug] GET "/0/0/0/leaf/testupload".
[Thu May 23 20:31:49 2013] [error] syntax error at /home/matt/Documents/AnnoTree/WebServices/anno_tree/script/../lib/AnnoTree/Leaves/Leaf.pm line 6, near "plugin 'DebugHelper'"
Compilation failed in require at (eval 230) line 1.

[Thu May 23 20:31:49 2013] [debug] Template "exception.development.html.ep" not found.
[Thu May 23 20:31:49 2013] [debug] Template "exception.html.ep" not found.
[Thu May 23 20:31:49 2013] [debug] Rendering inline template.
[Thu May 23 20:31:49 2013] [debug] Rendering inline template.
[Thu May 23 20:31:49 2013] [debug] 500 Internal Server Error (0.016948s, 59.004/s).
[Thu May 23 20:32:02 2013] [debug] GET "/0/0/0/leaf/testupload".
[Thu May 23 20:32:02 2013] [debug] Routing to controller "AnnoTree::Leaves::Leaf" and action "testImageUpload".
[Thu May 23 20:32:02 2013] [debug] Action not found in controller.
[Thu May 23 20:32:02 2013] [debug] Template "leaves/leaf/testImageUpload.html.ep" not found.
[Thu May 23 20:32:02 2013] [debug] Template "not_found.development.html.ep" not found.
[Thu May 23 20:32:02 2013] [debug] Template "not_found.html.ep" not found.
[Thu May 23 20:32:02 2013] [debug] Rendering inline template.
[Thu May 23 20:32:02 2013] [debug] Rendering inline template.
[Thu May 23 20:32:02 2013] [debug] 404 Not Found (0.010519s, 95.066/s).
[Thu May 23 20:32:04 2013] [debug] GET "/0/0/0/leaf/testupload".
[Thu May 23 20:32:04 2013] [debug] Routing to controller "AnnoTree::Leaves::Leaf" and action "testImageUpload".
[Thu May 23 20:32:04 2013] [debug] Action not found in controller.
[Thu May 23 20:32:04 2013] [debug] Template "leaves/leaf/testImageUpload.html.ep" not found.
[Thu May 23 20:32:04 2013] [debug] Template "not_found.development.html.ep" not found.
[Thu May 23 20:32:04 2013] [debug] Template "not_found.html.ep" not found.
[Thu May 23 20:32:04 2013] [debug] Rendering cached inline template.
[Thu May 23 20:32:04 2013] [debug] Rendering cached inline template.
[Thu May 23 20:32:04 2013] [debug] 404 Not Found (0.003552s, 281.532/s).
[Thu May 23 20:32:05 2013] [debug] GET "/0/0/0/leaf/testupload".
[Thu May 23 20:32:05 2013] [debug] Routing to controller "AnnoTree::Leaves::Leaf" and action "testImageUpload".
[Thu May 23 20:32:05 2013] [debug] Action not found in controller.
[Thu May 23 20:32:05 2013] [debug] Template "leaves/leaf/testImageUpload.html.ep" not found.
[Thu May 23 20:32:05 2013] [debug] Template "not_found.development.html.ep" not found.
[Thu May 23 20:32:05 2013] [debug] Template "not_found.html.ep" not found.
[Thu May 23 20:32:05 2013] [debug] Rendering cached inline template.
[Thu May 23 20:32:05 2013] [debug] Rendering cached inline template.
[Thu May 23 20:32:05 2013] [debug] 404 Not Found (0.003614s, 276.702/s).
[Thu May 23 20:32:05 2013] [debug] GET "/0/0/0/leaf/testupload".
[Thu May 23 20:32:05 2013] [debug] Routing to controller "AnnoTree::Leaves::Leaf" and action "testImageUpload".
[Thu May 23 20:32:05 2013] [debug] Action not found in controller.
[Thu May 23 20:32:05 2013] [debug] Template "leaves/leaf/testImageUpload.html.ep" not found.
[Thu May 23 20:32:05 2013] [debug] Template "not_found.development.html.ep" not found.
[Thu May 23 20:32:05 2013] [debug] Template "not_found.html.ep" not found.
[Thu May 23 20:32:05 2013] [debug] Rendering cached inline template.
[Thu May 23 20:32:05 2013] [debug] Rendering cached inline template.
[Thu May 23 20:32:05 2013] [debug] 404 Not Found (0.003569s, 280.191/s).
[Thu May 23 20:32:05 2013] [debug] GET "/0/0/0/leaf/testupload".
[Thu May 23 20:32:05 2013] [debug] Routing to controller "AnnoTree::Leaves::Leaf" and action "testImageUpload".
[Thu May 23 20:32:05 2013] [debug] Action not found in controller.
[Thu May 23 20:32:05 2013] [debug] Template "leaves/leaf/testImageUpload.html.ep" not found.
[Thu May 23 20:32:05 2013] [debug] Template "not_found.development.html.ep" not found.
[Thu May 23 20:32:05 2013] [debug] Template "not_found.html.ep" not found.
[Thu May 23 20:32:05 2013] [debug] Rendering cached inline template.
[Thu May 23 20:32:05 2013] [debug] Rendering cached inline template.
[Thu May 23 20:32:05 2013] [debug] 404 Not Found (0.003510s, 284.900/s).
[Thu May 23 20:35:03 2013] [debug] GET "/0/0/0/leaf/testupload".
[Thu May 23 20:35:03 2013] [debug] Routing to controller "AnnoTree::Leaves::Leaf" and action "testImageUpload".
[Thu May 23 20:35:03 2013] [debug] Action not found in controller.
[Thu May 23 20:35:03 2013] [debug] Template "leaves/leaf/testImageUpload.html.ep" not found.
[Thu May 23 20:35:03 2013] [debug] Template "not_found.development.html.ep" not found.
[Thu May 23 20:35:03 2013] [debug] Template "not_found.html.ep" not found.
[Thu May 23 20:35:03 2013] [debug] Rendering cached inline template.
[Thu May 23 20:35:03 2013] [debug] Rendering cached inline template.
[Thu May 23 20:35:03 2013] [debug] 404 Not Found (0.003684s, 271.444/s).
[Thu May 23 20:35:04 2013] [debug] GET "/0/0/0/leaf/testupload".
[Thu May 23 20:35:04 2013] [debug] Routing to controller "AnnoTree::Leaves::Leaf" and action "testImageUpload".
[Thu May 23 20:35:04 2013] [debug] Action not found in controller.
[Thu May 23 20:35:04 2013] [debug] Template "leaves/leaf/testImageUpload.html.ep" not found.
[Thu May 23 20:35:04 2013] [debug] Template "not_found.development.html.ep" not found.
[Thu May 23 20:35:04 2013] [debug] Template "not_found.html.ep" not found.
[Thu May 23 20:35:04 2013] [debug] Rendering cached inline template.
[Thu May 23 20:35:04 2013] [debug] Rendering cached inline template.
[Thu May 23 20:35:04 2013] [debug] 404 Not Found (0.003634s, 275.179/s).
[Thu May 23 20:35:15 2013] [debug] GET "/0/0/0/leaf/".
[Thu May 23 20:35:15 2013] [debug] Routing to controller "AnnoTree::Leaves::Leaf" and action "list".
[Thu May 23 20:35:15 2013] [debug] Action not found in controller.
[Thu May 23 20:35:15 2013] [debug] Template "leaves/leaf/list.html.ep" not found.
[Thu May 23 20:35:15 2013] [debug] Template "not_found.development.html.ep" not found.
[Thu May 23 20:35:15 2013] [debug] Template "not_found.html.ep" not found.
[Thu May 23 20:35:15 2013] [debug] Rendering cached inline template.
[Thu May 23 20:35:15 2013] [debug] Rendering cached inline template.
[Thu May 23 20:35:15 2013] [debug] 404 Not Found (0.004422s, 226.142/s).
[Thu May 23 20:37:31 2013] [debug] Your secret passphrase needs to be changed!!!
[Thu May 23 20:37:31 2013] [debug] GET "/0/0/0/leaf/".
[Thu May 23 20:37:31 2013] [debug] Routing to controller "AnnoTree::Leaves::Leaf" and action "list".
[Thu May 23 20:37:31 2013] [debug] Rendering template "leaves/leaf/list.json.ep".
[Thu May 23 20:37:31 2013] [debug] 200 OK (0.003451s, 289.771/s).
[Thu May 23 20:37:35 2013] [debug] GET "/0/0/0/leaf/testupload".
[Thu May 23 20:37:35 2013] [debug] Routing to controller "AnnoTree::Leaves::Leaf" and action "testImageUpload".
[Thu May 23 20:37:35 2013] [debug] Rendering template "leaves/leaf/testupload.html.ep".
[Thu May 23 20:37:35 2013] [debug] 200 OK (0.002688s, 372.024/s).
[Thu May 23 20:37:55 2013] [debug] Your secret passphrase needs to be changed!!!
[Thu May 23 20:37:55 2013] [debug] POST "/0/0/0/leaf".
[Thu May 23 20:37:55 2013] [debug] Routing to controller "AnnoTree::Leaves::Leaf" and action "imagePost".
[Thu May 23 20:37:55 2013] [debug] $VAR1 = bless( {
                 'app' => bless( {
                                   'renderer' => bless( {
                                                          'paths' => [
                                                                       '/home/matt/Documents/AnnoTree/WebServices/anno_tree/templates'
                                                                     ],
                                                          'handlers' => {
                                                                          'ep' => sub { "DUMMY" },
                                                                          'text' => sub { "DUMMY" },
                                                                          'epl' => sub { "DUMMY" },
                                                                          'data' => sub { "DUMMY" },
                                                                          'json' => sub { "DUMMY" }
                                                                        },
                                                          'default_handler' => 'ep',
                                                          'helpers' => {
                                                                         'dumper' => sub { "DUMMY" },
                                                                         'search_field' => sub { "DUMMY" },
                                                                         'datetime_field' => sub { "DUMMY" },
                                                                         'date_field' => sub { "DUMMY" },
                                                                         'text_field' => sub { "DUMMY" },
                                                                         'flash' => sub { "DUMMY" },
                                                                         'email_field' => sub { "DUMMY" },
                                                                         'link_to' => sub { "DUMMY" },
                                                                         'current_route' => sub { "DUMMY" },
                                                                         'time_field' => sub { "DUMMY" },
                                                                         'url_field' => sub { "DUMMY" },
                                                                         'stylesheet' => sub { "DUMMY" },
                                                                         'input_tag' => sub { "DUMMY" },
                                                                         'include' => sub { "DUMMY" },
                                                                         'javascript' => sub { "DUMMY" },
                                                                         'form_for' => sub { "DUMMY" },
                                                                         'content' => sub { "DUMMY" },
                                                                         'tel_field' => sub { "DUMMY" },
                                                                         'text_area' => sub { "DUMMY" },
                                                                         'content_for' => sub { "DUMMY" },
                                                                         'image' => sub { "DUMMY" },
                                                                         'stash' => sub { "DUMMY" },
                                                                         'month_field' => sub { "DUMMY" },
                                                                         'url_for' => sub { "DUMMY" },
                                                                         'title' => sub { "DUMMY" },
                                                                         'number_field' => sub { "DUMMY" },
                                                                         'hidden_field' => sub { "DUMMY" },
                                                                         'url_with' => sub { "DUMMY" },
                                                                         't' => sub { "DUMMY" },
                                                                         'session' => sub { "DUMMY" },
                                                                         'password_field' => sub { "DUMMY" },
                                                                         'radio_button' => sub { "DUMMY" },
                                                                         'submit_button' => sub { "DUMMY" },
                                                                         'select_field' => sub { "DUMMY" },
                                                                         'file_field' => sub { "DUMMY" },
                                                                         'tag' => $VAR1->{'app'}{'renderer'}{'helpers'}{'t'},
                                                                         'week_field' => sub { "DUMMY" },
                                                                         'extends' => sub { "DUMMY" },
                                                                         'range_field' => sub { "DUMMY" },
                                                                         'color_field' => sub { "DUMMY" },
                                                                         'config' => sub { "DUMMY" },
                                                                         'layout' => sub { "DUMMY" },
                                                                         'check_box' => sub { "DUMMY" },
                                                                         'param' => sub { "DUMMY" },
                                                                         'app' => sub { "DUMMY" }
                                                                       }
                                                        }, 'Mojolicious::Renderer' ),
                                   'log' => bless( {
                                                     'level' => 'debug',
                                                     'handle' => \*{'Mojo::Log::$file'},
                                                     'path' => '/home/matt/Documents/AnnoTree/WebServices/anno_tree/log/development.log',
                                                     'events' => {
                                                                   'message' => [
                                                                                  sub { "DUMMY" }
                                                                                ]
                                                                 }
                                                   }, 'Mojo::Log' ),
                                   'plugins' => bless( {
                                                         'namespaces' => [
                                                                           'Mojolicious::Plugin'
                                                                         ],
                                                         'events' => {
                                                                       'around_dispatch' => [
                                                                                              sub { "DUMMY" },
                                                                                              sub { "DUMMY" }
                                                                                            ]
                                                                     }
                                                       }, 'Mojolicious::Plugins' ),
                                   'moniker' => 'anno_tree',
                                   'controller_class' => 'Mojolicious::Controller',
                                   'home' => bless( {
                                                      'parts' => [
                                                                   '',
                                                                   'home',
                                                                   'matt',
                                                                   'Documents',
                                                                   'AnnoTree',
                                                                   'WebServices',
                                                                   'anno_tree'
                                                                 ]
                                                    }, 'Mojo::Home' ),
                                   'defaults' => {},
                                   'routes' => bless( {
                                                        'conditions' => {
                                                                          'agent' => sub { "DUMMY" },
                                                                          'host' => sub { "DUMMY" },
                                                                          'headers' => sub { "DUMMY" }
                                                                        },
                                                        'hiding' => {
                                                                      'cookie' => 1,
                                                                      'render_exception' => 1,
                                                                      'rendered' => 1,
                                                                      'res' => 1,
                                                                      'send' => 1,
                                                                      'redirect_to' => 1,
                                                                      'flash' => 1,
                                                                      'has' => 1,
                                                                      'handler' => 1,
                                                                      'render_static' => 1,
                                                                      'tx' => 1,
                                                                      'finish' => 1,
                                                                      'write' => 1,
                                                                      'on' => 1,
                                                                      'DESTROY' => 1,
                                                                      'respond_to' => 1,
                                                                      'render_not_found' => 1,
                                                                      'url_for' => 1,
                                                                      'stash' => 1,
                                                                      'render_maybe' => 1,
                                                                      'attr' => 1,
                                                                      'render' => 1,
                                                                      'tap' => 1,
                                                                      'session' => 1,
                                                                      'ua' => 1,
                                                                      'new' => 1,
                                                                      'signed_cookie' => 1,
                                                                      'write_chunk' => 1,
                                                                      'app' => 1,
                                                                      'AUTOLOAD' => 1,
                                                                      'param' => 1,
                                                                      'req' => 1
                                                                    },
                                                        'hidden' => [
                                                                      'attr',
                                                                      'has',
                                                                      'new',
                                                                      'tap',
                                                                      'AUTOLOAD',
                                                                      'DESTROY',
                                                                      'app',
                                                                      'cookie',
                                                                      'finish',
                                                                      'flash',
                                                                      'handler',
                                                                      'on',
                                                                      'param',
                                                                      'redirect_to',
                                                                      'render',
                                                                      'render_exception',
                                                                      'render_maybe',
                                                                      'render_not_found',
                                                                      'render_static',
                                                                      'rendered',
                                                                      'req',
                                                                      'res',
                                                                      'respond_to',
                                                                      'send',
                                                                      'session',
                                                                      'signed_cookie',
                                                                      'stash',
                                                                      'tx',
                                                                      'ua',
                                                                      'url_for',
                                                                      'write',
                                                                      'write_chunk'
                                                                    ],
                                                        'loaded' => {
                                                                      'AnnoTree::Leaves::Leaf' => 1
                                                                    },
                                                        'name' => '',
                                                        'cache' => bless( {
                                                                            'max_keys' => 100,
                                                                            'cache' => {
                                                                                         'POST:/0/0/0/leaf:0' => {
                                                                                                                 'endpoint' => bless( {
                                                                                                                                        'pattern' => bless( {
                                                                                                                                                              'placeholder_start' => ':',
                                                                                                                                                              'placeholders' => [
                                                                                                                                                                                  'forestid',
                                                                                                                                                                                  'treeid',
                                                                                                                                                                                  'branchid'
                                                                                                                                                                                ],
                                                                                                                                                              'defaults' => {
                                                                                                                                                                              'action' => 'imagePost',
                                                                                                                                                                              'controller' => 'leaves-leaf'
                                                                                                                                                                            },
                                                                                                                                                              'relaxed_start' => '#',
                                                                                                                                                              'format_regex' => qr/(?^:\.([^\/]+)$)/,
                                                                                                                                                              'wildcard_start' => '*',
                                                                                                                                                              'tree' => [
                                                                                                                                                                          [
                                                                                                                                                                            'slash'
                                                                                                                                                                          ],
                                                                                                                                                                          [
                                                                                                                                                                            'placeholder',
                                                                                                                                                                            'forestid'
                                                                                                                                                                          ],
                                                                                                                                                                          [
                                                                                                                                                                            'slash'
                                                                                                                                                                          ],
                                                                                                                                                                          [
                                                                                                                                                                            'placeholder',
                                                                                                                                                                            'treeid'
                                                                                                                                                                          ],
                                                                                                                                                                          [
                                                                                                                                                                            'slash'
                                                                                                                                                                          ],
                                                                                                                                                                          [
                                                                                                                                                                            'placeholder',
                                                                                                                                                                            'branchid'
                                                                                                                                                                          ],
                                                                                                                                                                          [
                                                                                                                                                                            'slash'
                                                                                                                                                                          ],
                                                                                                                                                                          [
                                                                                                                                                                            'text',
                                                                                                                                                                            'leaf'
                                                                                                                                                                          ]
                                                                                                                                                                        ],
                                                                                                                                                              'constraints' => {
                                                                                                                                                                                 'branchid' => qr/(?^:\d+)/,
                                                                                                                                                                                 'forestid' => qr/(?^:\d+)/,
                                                                                                                                                                                 'treeid' => qr/(?^:\d+)/
                                                                                                                                                                               },
                                                                                                                                                              'quote_end' => ')',
                                                                                                                                                              'regex' => qr/(?^s:^\/((?^:\d+))\/((?^:\d+))\/((?^:\d+))\/leaf)/,
                                                                                                                                                              'pattern' => '/:forestid/:treeid/:branchid/leaf',
                                                                                                                                                              'quote_start' => '('
                                                                                                                                                            }, 'Mojolicious::Routes::Pattern' ),
                                                                                                                                        'via' => [
                                                                                                                                                   'POST'
                                                                                                                                                 ],
                                                                                                                                        'children' => [],
                                                                                                                                        'parent' => $VAR1->{'app'}{'routes'},
                                                                                                                                        'name' => 'forestidtreeidbranchidleaf'
                                                                                                                                      }, 'Mojolicious::Routes::Route' ),
                                                                                                                 'stack' => [
                                                                                                                              {
                                                                                                                                'controller' => 'leaves-leaf',
                                                                                                                                'branchid' => '0',
                                                                                                                                'action' => 'imagePost',
                                                                                                                                'treeid' => '0',
                                                                                                                                'forestid' => '0'
                                                                                                                              }
                                                                                                                            ]
                                                                                                               }
                                                                                       },
                                                                            'queue' => [
                                                                                         'POST:/0/0/0/leaf:0'
                                                                                       ]
                                                                          }, 'Mojo::Cache' ),
                                                        'children' => [
                                                                        bless( {
                                                                                 'parent' => $VAR1->{'app'}{'routes'},
                                                                                 'name' => '',
                                                                                 'pattern' => bless( {
                                                                                                       'placeholders' => [],
                                                                                                       'tree' => [],
                                                                                                       'defaults' => {
                                                                                                                       'controller' => 'example',
                                                                                                                       'action' => 'welcome'
                                                                                                                     },
                                                                                                       'constraints' => {},
                                                                                                       'format_regex' => qr/(?^:\.([^\/]+)$)/,
                                                                                                       'regex' => qr/(?^s:^)/
                                                                                                     }, 'Mojolicious::Routes::Pattern' ),
                                                                                 'children' => [],
                                                                                 'via' => [
                                                                                            'GET'
                                                                                          ]
                                                                               }, 'Mojolicious::Routes::Route' ),
                                                                        bless( {
                                                                                 'name' => 'forest',
                                                                                 'parent' => $VAR1->{'app'}{'routes'},
                                                                                 'via' => [
                                                                                            'GET'
                                                                                          ],
                                                                                 'children' => [],
                                                                                 'pattern' => bless( {
                                                                                                       'wildcard_start' => '*',
                                                                                                       'relaxed_start' => '#',
                                                                                                       'format_regex' => qr/(?^:\.([^\/]+)$)/,
                                                                                                       'placeholder_start' => ':',
                                                                                                       'defaults' => {
                                                                                                                       'action' => 'list',
                                                                                                                       'controller' => 'forest'
                                                                                                                     },
                                                                                                       'quote_start' => '(',
                                                                                                       'regex' => qr/(?^s:^\/forest)/,
                                                                                                       'pattern' => '/forest',
                                                                                                       'quote_end' => ')',
                                                                                                       'constraints' => {},
                                                                                                       'tree' => [
                                                                                                                   [
                                                                                                                     'slash'
                                                                                                                   ],
                                                                                                                   [
                                                                                                                     'text',
                                                                                                                     'forest'
                                                                                                                   ]
                                                                                                                 ]
                                                                                                     }, 'Mojolicious::Routes::Pattern' )
                                                                               }, 'Mojolicious::Routes::Route' ),
                                                                        bless( {
                                                                                 'pattern' => bless( {
                                                                                                       'defaults' => {
                                                                                                                       'action' => 'unique',
                                                                                                                       'controller' => 'forest'
                                                                                                                     },
                                                                                                       'placeholders' => [
                                                                                                                           'id'
                                                                                                                         ],
                                                                                                       'placeholder_start' => ':',
                                                                                                       'format_regex' => qr/(?^:\.([^\/]+)$)/,
                                                                                                       'relaxed_start' => '#',
                                                                                                       'wildcard_start' => '*',
                                                                                                       'tree' => [
                                                                                                                   [
                                                                                                                     'slash'
                                                                                                                   ],
                                                                                                                   [
                                                                                                                     'text',
                                                                                                                     'forest'
                                                                                                                   ],
                                                                                                                   [
                                                                                                                     'slash'
                                                                                                                   ],
                                                                                                                   [
                                                                                                                     'placeholder',
                                                                                                                     'id'
                                                                                                                   ]
                                                                                                                 ],
                                                                                                       'quote_end' => ')',
                                                                                                       'constraints' => {
                                                                                                                          'id' => qr/(?^:\d+)/
                                                                                                                        },
                                                                                                       'pattern' => '/forest/:id',
                                                                                                       'regex' => qr/(?^s:^\/forest\/((?^:\d+)))/,
                                                                                                       'quote_start' => '('
                                                                                                     }, 'Mojolicious::Routes::Pattern' ),
                                                                                 'via' => [
                                                                                            'GET'
                                                                                          ],
                                                                                 'children' => [],
                                                                                 'parent' => $VAR1->{'app'}{'routes'},
                                                                                 'name' => 'forestid'
                                                                               }, 'Mojolicious::Routes::Route' ),
                                                                        bless( {
                                                                                 'pattern' => bless( {
                                                                                                       'tree' => [
                                                                                                                   [
                                                                                                                     'slash'
                                                                                                                   ],
                                                                                                                   [
                                                                                                                     'placeholder',
                                                                                                                     'forestid'
                                                                                                                   ],
                                                                                                                   [
                                                                                                                     'slash'
                                                                                                                   ],
                                                                                                                   [
                                                                                                                     'text',
                                                                                                                     'tree'
                                                                                                                   ]
                                                                                                                 ],
                                                                                                       'constraints' => {
                                                                                                                          'forestid' => qr/(?^:\d+)/
                                                                                                                        },
                                                                                                       'quote_end' => ')',
                                                                                                       'regex' => qr/(?^s:^\/((?^:\d+))\/tree)/,
                                                                                                       'pattern' => '/:forestid/tree',
                                                                                                       'quote_start' => '(',
                                                                                                       'placeholders' => [
                                                                                                                           'forestid'
                                                                                                                         ],
                                                                                                       'placeholder_start' => ':',
                                                                                                       'defaults' => {
                                                                                                                       'controller' => 'tree',
                                                                                                                       'action' => 'list'
                                                                                                                     },
                                                                                                       'relaxed_start' => '#',
                                                                                                       'format_regex' => qr/(?^:\.([^\/]+)$)/,
                                                                                                       'wildcard_start' => '*'
                                                                                                     }, 'Mojolicious::Routes::Pattern' ),
                                                                                 'via' => [
                                                                                            'GET'
                                                                                          ],
                                                                                 'children' => [],
                                                                                 'parent' => $VAR1->{'app'}{'routes'},
                                                                                 'name' => 'forestidtree'
                                                                               }, 'Mojolicious::Routes::Route' ),
                                                                        bless( {
                                                                                 'via' => [
                                                                                            'GET'
                                                                                          ],
                                                                                 'children' => [],
                                                                                 'pattern' => bless( {
                                                                                                       'wildcard_start' => '*',
                                                                                                       'format_regex' => qr/(?^:\.([^\/]+)$)/,
                                                                                                       'relaxed_start' => '#',
                                                                                                       'defaults' => {
                                                                                                                       'controller' => 'branch',
                                                                                                                       'action' => 'list'
                                                                                                                     },
                                                                                                       'placeholders' => [
                                                                                                                           'forestid',
                                                                                                                           'treeid'
                                                                                                                         ],
                                                                                                       'placeholder_start' => ':',
                                                                                                       'quote_start' => '(',
                                                                                                       'pattern' => '/:forestid/:treeid/branch',
                                                                                                       'regex' => qr/(?^s:^\/((?^:\d+))\/((?^:\d+))\/branch)/,
                                                                                                       'constraints' => {
                                                                                                                          'forestid' => qr/(?^:\d+)/,
                                                                                                                          'treeid' => qr/(?^:\d+)/
                                                                                                                        },
                                                                                                       'quote_end' => ')',
                                                                                                       'tree' => [
                                                                                                                   [
                                                                                                                     'slash'
                                                                                                                   ],
                                                                                                                   [
                                                                                                                     'placeholder',
                                                                                                                     'forestid'
                                                                                                                   ],
                                                                                                                   [
                                                                                                                     'slash'
                                                                                                                   ],
                                                                                                                   [
                                                                                                                     'placeholder',
                                                                                                                     'treeid'
                                                                                                                   ],
                                                                                                                   [
                                                                                                                     'slash'
                                                                                                                   ],
                                                                                                                   [
                                                                                                                     'text',
                                                                                                                     'branch'
                                                                                                                   ]
                                                                                                                 ]
                                                                                                     }, 'Mojolicious::Routes::Pattern' ),
                                                                                 'name' => 'forestidtreeidbranch',
                                                                                 'parent' => $VAR1->{'app'}{'routes'}
                                                                               }, 'Mojolicious::Routes::Route' ),
                                                                        bless( {
                                                                                 'name' => 'forestidtreeidbranchidleaf',
                                                                                 'parent' => $VAR1->{'app'}{'routes'},
                                                                                 'via' => [
                                                                                            'GET'
                                                                                          ],
                                                                                 'children' => [],
                                                                                 'pattern' => bless( {
                                                                                                       'format_regex' => qr/(?^:\.([^\/]+)$)/,
                                                                                                       'relaxed_start' => '#',
                                                                                                       'defaults' => {
                                                                                                                       'action' => 'list',
                                                                                                                       'controller' => 'leaves-leaf'
                                                                                                                     },
                                                                                                       'placeholder_start' => ':',
                                                                                                       'placeholders' => [
                                                                                                                           'forestid',
                                                                                                                           'treeid',
                                                                                                                           'branchid'
                                                                                                                         ],
                                                                                                       'wildcard_start' => '*',
                                                                                                       'constraints' => {
                                                                                                                          'branchid' => qr/(?^:\d+)/,
                                                                                                                          'treeid' => qr/(?^:\d+)/,
                                                                                                                          'forestid' => qr/(?^:\d+)/
                                                                                                                        },
                                                                                                       'quote_end' => ')',
                                                                                                       'tree' => [
                                                                                                                   [
                                                                                                                     'slash'
                                                                                                                   ],
                                                                                                                   [
                                                                                                                     'placeholder',
                                                                                                                     'forestid'
                                                                                                                   ],
                                                                                                                   [
                                                                                                                     'slash'
                                                                                                                   ],
                                                                                                                   [
                                                                                                                     'placeholder',
                                                                                                                     'treeid'
                                                                                                                   ],
                                                                                                                   [
                                                                                                                     'slash'
                                                                                                                   ],
                                                                                                                   [
                                                                                                                     'placeholder',
                                                                                                                     'branchid'
                                                                                                                   ],
                                                                                                                   [
                                                                                                                     'slash'
                                                                                                                   ],
                                                                                                                   [
                                                                                                                     'text',
                                                                                                                     'leaf'
                                                                                                                   ]
                                                                                                                 ],
                                                                                                       'quote_start' => '(',
                                                                                                       'pattern' => '/:forestid/:treeid/:branchid/leaf',
                                                                                                       'regex' => qr/(?^s:^\/((?^:\d+))\/((?^:\d+))\/((?^:\d+))\/leaf)/
                                                                                                     }, 'Mojolicious::Routes::Pattern' )
                                                                               }, 'Mojolicious::Routes::Route' ),
                                                                        bless( {
                                                                                 'name' => 'forestidtreeidbranchidleaftestupload',
                                                                                 'parent' => $VAR1->{'app'}{'routes'},
                                                                                 'via' => [
                                                                                            'GET'
                                                                                          ],
                                                                                 'children' => [],
                                                                                 'pattern' => bless( {
                                                                                                       'format_regex' => qr/(?^:\.([^\/]+)$)/,
                                                                                                       'relaxed_start' => '#',
                                                                                                       'defaults' => {
                                                                                                                       'controller' => 'leaves-leaf',
                                                                                                                       'action' => 'testImageUpload'
                                                                                                                     },
                                                                                                       'placeholders' => [
                                                                                                                           'forestid',
                                                                                                                           'treeid',
                                                                                                                           'branchid'
                                                                                                                         ],
                                                                                                       'placeholder_start' => ':',
                                                                                                       'wildcard_start' => '*',
                                                                                                       'constraints' => {
                                                                                                                          'treeid' => qr/(?^:\d+)/,
                                                                                                                          'forestid' => qr/(?^:\d+)/,
                                                                                                                          'branchid' => qr/(?^:\d+)/
                                                                                                                        },
                                                                                                       'quote_end' => ')',
                                                                                                       'tree' => [
                                                                                                                   [
                                                                                                                     'slash'
                                                                                                                   ],
                                                                                                                   [
                                                                                                                     'placeholder',
                                                                                                                     'forestid'
                                                                                                                   ],
                                                                                                                   [
                                                                                                                     'slash'
                                                                                                                   ],
                                                                                                                   [
                                                                                                                     'placeholder',
                                                                                                                     'treeid'
                                                                                                                   ],
                                                                                                                   [
                                                                                                                     'slash'
                                                                                                                   ],
                                                                                                                   [
                                                                                                                     'placeholder',
                                                                                                                     'branchid'
                                                                                                                   ],
                                                                                                                   [
                                                                                                                     'slash'
                                                                                                                   ],
                                                                                                                   [
                                                                                                                     'text',
                                                                                                                     'leaf'
                                                                                                                   ],
                                                                                                                   [
                                                                                                                     'slash'
                                                                                                                   ],
                                                                                                                   [
                                                                                                                     'text',
                                                                                                                     'testupload'
                                                                                                                   ]
                                                                                                                 ],
                                                                                                       'quote_start' => '(',
                                                                                                       'pattern' => '/:forestid/:treeid/:branchid/leaf/testupload',
                                                                                                       'regex' => qr/(?^s:^\/((?^:\d+))\/((?^:\d+))\/((?^:\d+))\/leaf\/testupload)/
                                                                                                     }, 'Mojolicious::Routes::Pattern' )
                                                                               }, 'Mojolicious::Routes::Route' ),
                                                                        $VAR1->{'app'}{'routes'}{'cache'}{'cache'}{'POST:/0/0/0/leaf:0'}{'endpoint'}
                                                                      ],
                                                        'base_classes' => [
                                                                            'Mojolicious::Controller',
                                                                            'Mojo'
                                                                          ],
                                                        'namespaces' => [
                                                                          'AnnoTree'
                                                                        ],
                                                        'pattern' => bless( {
                                                                              'regex' => qr/(?^s:^)/,
                                                                              'constraints' => {},
                                                                              'tree' => [],
                                                                              'placeholders' => [],
                                                                              'defaults' => {}
                                                                            }, 'Mojolicious::Routes::Pattern' )
                                                      }, 'Mojolicious::Routes' ),
                                   'static' => bless( {
                                                        'index' => {},
                                                        'classes' => [
                                                                       'main'
                                                                     ],
                                                        'paths' => [
                                                                     '/home/matt/Documents/AnnoTree/WebServices/anno_tree/public'
                                                                   ]
                                                      }, 'Mojolicious::Static' ),
                                   'mode' => 'development',
                                   'secret' => 'anno_tree',
                                   'dispatch' => 1,
                                   'sessions' => bless( {
                                                          'cookie_name' => 'mojolicious'
                                                        }, 'Mojolicious::Sessions' ),
                                   'ua' => $VAR1,
                                   'commands' => bless( {
                                                          'app' => $VAR1->{'app'}
                                                        }, 'Mojolicious::Commands' )
                                 }, 'AnnoTree' ),
                 'events' => {
                               'error' => [
                                            sub { "DUMMY" }
                                          ]
                             }
               }, 'Mojo::UserAgent' );

[Thu May 23 20:37:55 2013] [debug] Rendering template "leaves/leaf/testupload.html.ep".
[Thu May 23 20:37:55 2013] [debug] 200 OK (0.006549s, 152.695/s).
[Thu May 23 20:46:06 2013] [debug] Your secret passphrase needs to be changed!!!
[Thu May 23 20:46:06 2013] [debug] GET "/0/0/0/leaf".
[Thu May 23 20:46:06 2013] [error] syntax error at /home/matt/Documents/AnnoTree/WebServices/anno_tree/script/../lib/AnnoTree/Leaves/Leaf.pm line 6, near "plugin 'DebugHelper'"
Compilation failed in require at (eval 230) line 1.

[Thu May 23 20:46:06 2013] [debug] Template "exception.development.html.ep" not found.
[Thu May 23 20:46:06 2013] [debug] Template "exception.html.ep" not found.
[Thu May 23 20:46:06 2013] [debug] Rendering inline template.
[Thu May 23 20:46:06 2013] [debug] Rendering inline template.
[Thu May 23 20:46:06 2013] [debug] 500 Internal Server Error (0.016939s, 59.035/s).
[Thu May 23 20:49:20 2013] [debug] Your secret passphrase needs to be changed!!!
[Thu May 23 20:49:20 2013] [debug] GET "/0/0/0/leaf".
[Thu May 23 20:49:20 2013] [error] syntax error at /home/matt/Documents/AnnoTree/WebServices/anno_tree/script/../lib/AnnoTree/Leaves/Leaf.pm line 6, near "plugin 'DebugHelper'"
Compilation failed in require at (eval 230) line 1.

[Thu May 23 20:49:20 2013] [debug] Template "exception.development.html.ep" not found.
[Thu May 23 20:49:20 2013] [debug] Template "exception.html.ep" not found.
[Thu May 23 20:49:20 2013] [debug] Rendering inline template.
[Thu May 23 20:49:20 2013] [debug] Rendering inline template.
[Thu May 23 20:49:20 2013] [debug] 500 Internal Server Error (0.016792s, 59.552/s).
[Thu May 23 20:49:23 2013] [debug] GET "/0/0/0".
[Thu May 23 20:49:23 2013] [debug] Template "not_found.development.html.ep" not found.
[Thu May 23 20:49:23 2013] [debug] Template "not_found.html.ep" not found.
[Thu May 23 20:49:23 2013] [debug] Rendering inline template.
[Thu May 23 20:49:23 2013] [debug] Rendering inline template.
[Thu May 23 20:49:23 2013] [debug] 404 Not Found (0.010420s, 95.969/s).
[Thu May 23 20:49:27 2013] [debug] GET "/0/0/0/leaf".
[Thu May 23 20:49:27 2013] [debug] Routing to controller "AnnoTree::Leaves::Leaf" and action "list".
[Thu May 23 20:49:27 2013] [debug] Action not found in controller.
[Thu May 23 20:49:27 2013] [debug] Template "leaves/leaf/list.html.ep" not found.
[Thu May 23 20:49:27 2013] [debug] Template "not_found.development.html.ep" not found.
[Thu May 23 20:49:27 2013] [debug] Template "not_found.html.ep" not found.
[Thu May 23 20:49:27 2013] [debug] Rendering inline template.
[Thu May 23 20:49:27 2013] [debug] Rendering inline template.
[Thu May 23 20:49:27 2013] [debug] 404 Not Found (0.010630s, 94.073/s).
[Thu May 23 20:49:34 2013] [debug] GET "/0/0/0/leaf/testupload".
[Thu May 23 20:49:34 2013] [debug] Routing to controller "AnnoTree::Leaves::Leaf" and action "testImageUpload".
[Thu May 23 20:49:34 2013] [debug] Action not found in controller.
[Thu May 23 20:49:34 2013] [debug] Template "leaves/leaf/testImageUpload.html.ep" not found.
[Thu May 23 20:49:34 2013] [debug] Template "not_found.development.html.ep" not found.
[Thu May 23 20:49:34 2013] [debug] Template "not_found.html.ep" not found.
[Thu May 23 20:49:34 2013] [debug] Rendering cached inline template.
[Thu May 23 20:49:34 2013] [debug] Rendering cached inline template.
[Thu May 23 20:49:34 2013] [debug] 404 Not Found (0.003983s, 251.067/s).
[Thu May 23 20:49:58 2013] [debug] GET "/0/0/0/leaf/".
[Thu May 23 20:49:58 2013] [debug] Routing to controller "AnnoTree::Leaves::Leaf" and action "list".
[Thu May 23 20:49:58 2013] [debug] Action not found in controller.
[Thu May 23 20:49:58 2013] [debug] Template "leaves/leaf/list.html.ep" not found.
[Thu May 23 20:49:58 2013] [debug] Template "not_found.development.html.ep" not found.
[Thu May 23 20:49:58 2013] [debug] Template "not_found.html.ep" not found.
[Thu May 23 20:49:58 2013] [debug] Rendering cached inline template.
[Thu May 23 20:49:58 2013] [debug] Rendering cached inline template.
[Thu May 23 20:49:58 2013] [debug] 404 Not Found (0.003949s, 253.229/s).
[Thu May 23 20:50:23 2013] [debug] Your secret passphrase needs to be changed!!!
[Thu May 23 20:50:23 2013] [debug] GET "/0/0/0/leaf/".
[Thu May 23 20:50:23 2013] [debug] Routing to controller "AnnoTree::Leaves::Leaf" and action "list".
[Thu May 23 20:50:23 2013] [debug] Rendering template "leaves/leaf/list.json.ep".
[Thu May 23 20:50:23 2013] [debug] 200 OK (0.003455s, 289.436/s).
[Thu May 23 20:50:57 2013] [debug] GET "/0/0/0/leaf/testupload".
[Thu May 23 20:50:57 2013] [debug] Routing to controller "AnnoTree::Leaves::Leaf" and action "testImageUpload".
[Thu May 23 20:50:57 2013] [debug] Rendering template "leaves/leaf/testupload.html.ep".
[Thu May 23 20:50:57 2013] [debug] 200 OK (0.002631s, 380.084/s).
[Thu May 23 20:51:03 2013] [debug] POST "/0/0/0/leaf".
[Thu May 23 20:51:03 2013] [debug] Routing to controller "AnnoTree::Leaves::Leaf" and action "imagePost".
[Thu May 23 20:51:03 2013] [debug] $VAR1 = bless( {
                 'events' => {
                               'error' => [
                                            sub { "DUMMY" }
                                          ]
                             },
                 'app' => bless( {
                                   'secret' => 'anno_tree',
                                   'mode' => 'development',
                                   'routes' => bless( {
                                                        'pattern' => bless( {
                                                                              'regex' => qr/(?^s:^)/,
                                                                              'placeholders' => [],
                                                                              'tree' => [],
                                                                              'defaults' => {},
                                                                              'constraints' => {}
                                                                            }, 'Mojolicious::Routes::Pattern' ),
                                                        'namespaces' => [
                                                                          'AnnoTree'
                                                                        ],
                                                        'base_classes' => [
                                                                            'Mojolicious::Controller',
                                                                            'Mojo'
                                                                          ],
                                                        'children' => [
                                                                        bless( {
                                                                                 'via' => [
                                                                                            'GET'
                                                                                          ],
                                                                                 'children' => [],
                                                                                 'pattern' => bless( {
                                                                                                       'regex' => qr/(?^s:^)/,
                                                                                                       'format_regex' => qr/(?^:\.([^\/]+)$)/,
                                                                                                       'constraints' => {},
                                                                                                       'defaults' => {
                                                                                                                       'controller' => 'example',
                                                                                                                       'action' => 'welcome'
                                                                                                                     },
                                                                                                       'tree' => [],
                                                                                                       'placeholders' => []
                                                                                                     }, 'Mojolicious::Routes::Pattern' ),
                                                                                 'name' => '',
                                                                                 'parent' => $VAR1->{'app'}{'routes'}
                                                                               }, 'Mojolicious::Routes::Route' ),
                                                                        bless( {
                                                                                 'via' => [
                                                                                            'GET'
                                                                                          ],
                                                                                 'children' => [],
                                                                                 'pattern' => bless( {
                                                                                                       'wildcard_start' => '*',
                                                                                                       'defaults' => {
                                                                                                                       'action' => 'list',
                                                                                                                       'controller' => 'forest'
                                                                                                                     },
                                                                                                       'placeholder_start' => ':',
                                                                                                       'format_regex' => qr/(?^:\.([^\/]+)$)/,
                                                                                                       'relaxed_start' => '#',
                                                                                                       'pattern' => '/forest',
                                                                                                       'regex' => qr/(?^s:^\/forest)/,
                                                                                                       'quote_start' => '(',
                                                                                                       'tree' => [
                                                                                                                   [
                                                                                                                     'slash'
                                                                                                                   ],
                                                                                                                   [
                                                                                                                     'text',
                                                                                                                     'forest'
                                                                                                                   ]
                                                                                                                 ],
                                                                                                       'constraints' => {},
                                                                                                       'quote_end' => ')'
                                                                                                     }, 'Mojolicious::Routes::Pattern' ),
                                                                                 'name' => 'forest',
                                                                                 'parent' => $VAR1->{'app'}{'routes'}
                                                                               }, 'Mojolicious::Routes::Route' ),
                                                                        bless( {
                                                                                 'name' => 'forestid',
                                                                                 'parent' => $VAR1->{'app'}{'routes'},
                                                                                 'children' => [],
                                                                                 'via' => [
                                                                                            'GET'
                                                                                          ],
                                                                                 'pattern' => bless( {
                                                                                                       'format_regex' => qr/(?^:\.([^\/]+)$)/,
                                                                                                       'relaxed_start' => '#',
                                                                                                       'defaults' => {
                                                                                                                       'action' => 'unique',
                                                                                                                       'controller' => 'forest'
                                                                                                                     },
                                                                                                       'placeholders' => [
                                                                                                                           'id'
                                                                                                                         ],
                                                                                                       'placeholder_start' => ':',
                                                                                                       'wildcard_start' => '*',
                                                                                                       'constraints' => {
                                                                                                                          'id' => qr/(?^:\d+)/
                                                                                                                        },
                                                                                                       'quote_end' => ')',
                                                                                                       'tree' => [
                                                                                                                   [
                                                                                                                     'slash'
                                                                                                                   ],
                                                                                                                   [
                                                                                                                     'text',
                                                                                                                     'forest'
                                                                                                                   ],
                                                                                                                   [
                                                                                                                     'slash'
                                                                                                                   ],
                                                                                                                   [
                                                                                                                     'placeholder',
                                                                                                                     'id'
                                                                                                                   ]
                                                                                                                 ],
                                                                                                       'quote_start' => '(',
                                                                                                       'pattern' => '/forest/:id',
                                                                                                       'regex' => qr/(?^s:^\/forest\/((?^:\d+)))/
                                                                                                     }, 'Mojolicious::Routes::Pattern' )
                                                                               }, 'Mojolicious::Routes::Route' ),
                                                                        bless( {
                                                                                 'children' => [],
                                                                                 'via' => [
                                                                                            'GET'
                                                                                          ],
                                                                                 'pattern' => bless( {
                                                                                                       'regex' => qr/(?^s:^\/((?^:\d+))\/tree)/,
                                                                                                       'pattern' => '/:forestid/tree',
                                                                                                       'quote_start' => '(',
                                                                                                       'tree' => [
                                                                                                                   [
                                                                                                                     'slash'
                                                                                                                   ],
                                                                                                                   [
                                                                                                                     'placeholder',
                                                                                                                     'forestid'
                                                                                                                   ],
                                                                                                                   [
                                                                                                                     'slash'
                                                                                                                   ],
                                                                                                                   [
                                                                                                                     'text',
                                                                                                                     'tree'
                                                                                                                   ]
                                                                                                                 ],
                                                                                                       'constraints' => {
                                                                                                                          'forestid' => qr/(?^:\d+)/
                                                                                                                        },
                                                                                                       'quote_end' => ')',
                                                                                                       'wildcard_start' => '*',
                                                                                                       'placeholders' => [
                                                                                                                           'forestid'
                                                                                                                         ],
                                                                                                       'placeholder_start' => ':',
                                                                                                       'defaults' => {
                                                                                                                       'controller' => 'tree',
                                                                                                                       'action' => 'list'
                                                                                                                     },
                                                                                                       'relaxed_start' => '#',
                                                                                                       'format_regex' => qr/(?^:\.([^\/]+)$)/
                                                                                                     }, 'Mojolicious::Routes::Pattern' ),
                                                                                 'name' => 'forestidtree',
                                                                                 'parent' => $VAR1->{'app'}{'routes'}
                                                                               }, 'Mojolicious::Routes::Route' ),
                                                                        bless( {
                                                                                 'pattern' => bless( {
                                                                                                       'quote_start' => '(',
                                                                                                       'regex' => qr/(?^s:^\/((?^:\d+))\/((?^:\d+))\/branch)/,
                                                                                                       'pattern' => '/:forestid/:treeid/branch',
                                                                                                       'constraints' => {
                                                                                                                          'treeid' => qr/(?^:\d+)/,
                                                                                                                          'forestid' => qr/(?^:\d+)/
                                                                                                                        },
                                                                                                       'quote_end' => ')',
                                                                                                       'tree' => [
                                                                                                                   [
                                                                                                                     'slash'
                                                                                                                   ],
                                                                                                                   [
                                                                                                                     'placeholder',
                                                                                                                     'forestid'
                                                                                                                   ],
                                                                                                                   [
                                                                                                                     'slash'
                                                                                                                   ],
                                                                                                                   [
                                                                                                                     'placeholder',
                                                                                                                     'treeid'
                                                                                                                   ],
                                                                                                                   [
                                                                                                                     'slash'
                                                                                                                   ],
                                                                                                                   [
                                                                                                                     'text',
                                                                                                                     'branch'
                                                                                                                   ]
                                                                                                                 ],
                                                                                                       'wildcard_start' => '*',
                                                                                                       'relaxed_start' => '#',
                                                                                                       'format_regex' => qr/(?^:\.([^\/]+)$)/,
                                                                                                       'placeholders' => [
                                                                                                                           'forestid',
                                                                                                                           'treeid'
                                                                                                                         ],
                                                                                                       'placeholder_start' => ':',
                                                                                                       'defaults' => {
                                                                                                                       'controller' => 'branch',
                                                                                                                       'action' => 'list'
                                                                                                                     }
                                                                                                     }, 'Mojolicious::Routes::Pattern' ),
                                                                                 'via' => [
                                                                                            'GET'
                                                                                          ],
                                                                                 'children' => [],
                                                                                 'parent' => $VAR1->{'app'}{'routes'},
                                                                                 'name' => 'forestidtreeidbranch'
                                                                               }, 'Mojolicious::Routes::Route' ),
                                                                        bless( {
                                                                                 'children' => [],
                                                                                 'via' => [
                                                                                            'GET'
                                                                                          ],
                                                                                 'pattern' => bless( {
                                                                                                       'tree' => [
                                                                                                                   [
                                                                                                                     'slash'
                                                                                                                   ],
                                                                                                                   [
                                                                                                                     'placeholder',
                                                                                                                     'forestid'
                                                                                                                   ],
                                                                                                                   [
                                                                                                                     'slash'
                                                                                                                   ],
                                                                                                                   [
                                                                                                                     'placeholder',
                                                                                                                     'treeid'
                                                                                                                   ],
                                                                                                                   [
                                                                                                                     'slash'
                                                                                                                   ],
                                                                                                                   [
                                                                                                                     'placeholder',
                                                                                                                     'branchid'
                                                                                                                   ],
                                                                                                                   [
                                                                                                                     'slash'
                                                                                                                   ],
                                                                                                                   [
                                                                                                                     'text',
                                                                                                                     'leaf'
                                                                                                                   ]
                                                                                                                 ],
                                                                                                       'quote_end' => ')',
                                                                                                       'constraints' => {
                                                                                                                          'branchid' => qr/(?^:\d+)/,
                                                                                                                          'forestid' => qr/(?^:\d+)/,
                                                                                                                          'treeid' => qr/(?^:\d+)/
                                                                                                                        },
                                                                                                       'regex' => qr/(?^s:^\/((?^:\d+))\/((?^:\d+))\/((?^:\d+))\/leaf)/,
                                                                                                       'pattern' => '/:forestid/:treeid/:branchid/leaf',
                                                                                                       'quote_start' => '(',
                                                                                                       'placeholder_start' => ':',
                                                                                                       'placeholders' => [
                                                                                                                           'forestid',
                                                                                                                           'treeid',
                                                                                                                           'branchid'
                                                                                                                         ],
                                                                                                       'defaults' => {
                                                                                                                       'controller' => 'leaves-leaf',
                                                                                                                       'action' => 'list'
                                                                                                                     },
                                                                                                       'relaxed_start' => '#',
                                                                                                       'format_regex' => qr/(?^:\.([^\/]+)$)/,
                                                                                                       'wildcard_start' => '*'
                                                                                                     }, 'Mojolicious::Routes::Pattern' ),
                                                                                 'name' => 'forestidtreeidbranchidleaf',
                                                                                 'parent' => $VAR1->{'app'}{'routes'}
                                                                               }, 'Mojolicious::Routes::Route' ),
                                                                        bless( {
                                                                                 'name' => 'forestidtreeidbranchidleaftestupload',
                                                                                 'parent' => $VAR1->{'app'}{'routes'},
                                                                                 'children' => [],
                                                                                 'via' => [
                                                                                            'GET'
                                                                                          ],
                                                                                 'pattern' => bless( {
                                                                                                       'tree' => [
                                                                                                                   [
                                                                                                                     'slash'
                                                                                                                   ],
                                                                                                                   [
                                                                                                                     'placeholder',
                                                                                                                     'forestid'
                                                                                                                   ],
                                                                                                                   [
                                                                                                                     'slash'
                                                                                                                   ],
                                                                                                                   [
                                                                                                                     'placeholder',
                                                                                                                     'treeid'
                                                                                                                   ],
                                                                                                                   [
                                                                                                                     'slash'
                                                                                                                   ],
                                                                                                                   [
                                                                                                                     'placeholder',
                                                                                                                     'branchid'
                                                                                                                   ],
                                                                                                                   [
                                                                                                                     'slash'
                                                                                                                   ],
                                                                                                                   [
                                                                                                                     'text',
                                                                                                                     'leaf'
                                                                                                                   ],
                                                                                                                   [
                                                                                                                     'slash'
                                                                                                                   ],
                                                                                                                   [
                                                                                                                     'text',
                                                                                                                     'testupload'
                                                                                                                   ]
                                                                                                                 ],
                                                                                                       'quote_end' => ')',
                                                                                                       'constraints' => {
                                                                                                                          'branchid' => qr/(?^:\d+)/,
                                                                                                                          'treeid' => qr/(?^:\d+)/,
                                                                                                                          'forestid' => qr/(?^:\d+)/
                                                                                                                        },
                                                                                                       'regex' => qr/(?^s:^\/((?^:\d+))\/((?^:\d+))\/((?^:\d+))\/leaf\/testupload)/,
                                                                                                       'pattern' => '/:forestid/:treeid/:branchid/leaf/testupload',
                                                                                                       'quote_start' => '(',
                                                                                                       'placeholders' => [
                                                                                                                           'forestid',
                                                                                                                           'treeid',
                                                                                                                           'branchid'
                                                                                                                         ],
                                                                                                       'placeholder_start' => ':',
                                                                                                       'defaults' => {
                                                                                                                       'action' => 'testImageUpload',
                                                                                                                       'controller' => 'leaves-leaf'
                                                                                                                     },
                                                                                                       'relaxed_start' => '#',
                                                                                                       'format_regex' => qr/(?^:\.([^\/]+)$)/,
                                                                                                       'wildcard_start' => '*'
                                                                                                     }, 'Mojolicious::Routes::Pattern' )
                                                                               }, 'Mojolicious::Routes::Route' ),
                                                                        bless( {
                                                                                 'via' => [
                                                                                            'POST'
                                                                                          ],
                                                                                 'children' => [],
                                                                                 'pattern' => bless( {
                                                                                                       'tree' => [
                                                                                                                   [
                                                                                                                     'slash'
                                                                                                                   ],
                                                                                                                   [
                                                                                                                     'placeholder',
                                                                                                                     'forestid'
                                                                                                                   ],
                                                                                                                   [
                                                                                                                     'slash'
                                                                                                                   ],
                                                                                                                   [
                                                                                                                     'placeholder',
                                                                                                                     'treeid'
                                                                                                                   ],
                                                                                                                   [
                                                                                                                     'slash'
                                                                                                                   ],
                                                                                                                   [
                                                                                                                     'placeholder',
                                                                                                                     'branchid'
                                                                                                                   ],
                                                                                                                   [
                                                                                                                     'slash'
                                                                                                                   ],
                                                                                                                   [
                                                                                                                     'text',
                                                                                                                     'leaf'
                                                                                                                   ]
                                                                                                                 ],
                                                                                                       'quote_end' => ')',
                                                                                                       'constraints' => {
                                                                                                                          'branchid' => qr/(?^:\d+)/,
                                                                                                                          'forestid' => qr/(?^:\d+)/,
                                                                                                                          'treeid' => qr/(?^:\d+)/
                                                                                                                        },
                                                                                                       'regex' => qr/(?^s:^\/((?^:\d+))\/((?^:\d+))\/((?^:\d+))\/leaf)/,
                                                                                                       'pattern' => '/:forestid/:treeid/:branchid/leaf',
                                                                                                       'quote_start' => '(',
                                                                                                       'placeholders' => [
                                                                                                                           'forestid',
                                                                                                                           'treeid',
                                                                                                                           'branchid'
                                                                                                                         ],
                                                                                                       'placeholder_start' => ':',
                                                                                                       'defaults' => {
                                                                                                                       'controller' => 'leaves-leaf',
                                                                                                                       'action' => 'imagePost'
                                                                                                                     },
                                                                                                       'relaxed_start' => '#',
                                                                                                       'format_regex' => qr/(?^:\.([^\/]+)$)/,
                                                                                                       'wildcard_start' => '*'
                                                                                                     }, 'Mojolicious::Routes::Pattern' ),
                                                                                 'name' => 'forestidtreeidbranchidleaf',
                                                                                 'parent' => $VAR1->{'app'}{'routes'}
                                                                               }, 'Mojolicious::Routes::Route' )
                                                                      ],
                                                        'loaded' => {
                                                                      'AnnoTree::Leaves::Leaf' => 1
                                                                    },
                                                        'hidden' => [
                                                                      'attr',
                                                                      'has',
                                                                      'new',
                                                                      'tap',
                                                                      'AUTOLOAD',
                                                                      'DESTROY',
                                                                      'app',
                                                                      'cookie',
                                                                      'finish',
                                                                      'flash',
                                                                      'handler',
                                                                      'on',
                                                                      'param',
                                                                      'redirect_to',
                                                                      'render',
                                                                      'render_exception',
                                                                      'render_maybe',
                                                                      'render_not_found',
                                                                      'render_static',
                                                                      'rendered',
                                                                      'req',
                                                                      'res',
                                                                      'respond_to',
                                                                      'send',
                                                                      'session',
                                                                      'signed_cookie',
                                                                      'stash',
                                                                      'tx',
                                                                      'ua',
                                                                      'url_for',
                                                                      'write',
                                                                      'write_chunk'
                                                                    ],
                                                        'hiding' => {
                                                                      'tx' => 1,
                                                                      'finish' => 1,
                                                                      'render_static' => 1,
                                                                      'handler' => 1,
                                                                      'has' => 1,
                                                                      'res' => 1,
                                                                      'rendered' => 1,
                                                                      'flash' => 1,
                                                                      'send' => 1,
                                                                      'redirect_to' => 1,
                                                                      'render_exception' => 1,
                                                                      'cookie' => 1,
                                                                      'req' => 1,
                                                                      'AUTOLOAD' => 1,
                                                                      'app' => 1,
                                                                      'param' => 1,
                                                                      'write_chunk' => 1,
                                                                      'signed_cookie' => 1,
                                                                      'render' => 1,
                                                                      'tap' => 1,
                                                                      'session' => 1,
                                                                      'attr' => 1,
                                                                      'new' => 1,
                                                                      'ua' => 1,
                                                                      'render_maybe' => 1,
                                                                      'url_for' => 1,
                                                                      'stash' => 1,
                                                                      'respond_to' => 1,
                                                                      'on' => 1,
                                                                      'DESTROY' => 1,
                                                                      'write' => 1,
                                                                      'render_not_found' => 1
                                                                    },
                                                        'conditions' => {
                                                                          'headers' => sub { "DUMMY" },
                                                                          'host' => sub { "DUMMY" },
                                                                          'agent' => sub { "DUMMY" }
                                                                        },
                                                        'cache' => bless( {
                                                                            'cache' => {
                                                                                         'GET:/0/0/0/leaf/testupload:0' => {
                                                                                                                           'endpoint' => $VAR1->{'app'}{'routes'}{'children'}[6],
                                                                                                                           'stack' => [
                                                                                                                                        {
                                                                                                                                          'controller' => 'leaves-leaf',
                                                                                                                                          'treeid' => '0',
                                                                                                                                          'action' => 'testImageUpload',
                                                                                                                                          'forestid' => '0',
                                                                                                                                          'branchid' => '0'
                                                                                                                                        }
                                                                                                                                      ]
                                                                                                                         },
                                                                                         'POST:/0/0/0/leaf:0' => {
                                                                                                                 'stack' => [
                                                                                                                              {
                                                                                                                                'controller' => 'leaves-leaf',
                                                                                                                                'branchid' => '0',
                                                                                                                                'treeid' => '0',
                                                                                                                                'action' => 'imagePost',
                                                                                                                                'forestid' => '0'
                                                                                                                              }
                                                                                                                            ],
                                                                                                                 'endpoint' => $VAR1->{'app'}{'routes'}{'children'}[7]
                                                                                                               },
                                                                                         'GET:/0/0/0/leaf/:0' => {
                                                                                                                 'endpoint' => $VAR1->{'app'}{'routes'}{'children'}[5],
                                                                                                                 'stack' => [
                                                                                                                              {
                                                                                                                                'forestid' => '0',
                                                                                                                                'treeid' => '0',
                                                                                                                                'action' => 'list',
                                                                                                                                'branchid' => '0',
                                                                                                                                'controller' => 'leaves-leaf'
                                                                                                                              }
                                                                                                                            ]
                                                                                                               }
                                                                                       },
                                                                            'max_keys' => 100,
                                                                            'queue' => [
                                                                                         'GET:/0/0/0/leaf/:0',
                                                                                         'GET:/0/0/0/leaf/testupload:0',
                                                                                         'POST:/0/0/0/leaf:0'
                                                                                       ]
                                                                          }, 'Mojo::Cache' ),
                                                        'name' => ''
                                                      }, 'Mojolicious::Routes' ),
                                   'sessions' => bless( {
                                                          'cookie_name' => 'mojolicious'
                                                        }, 'Mojolicious::Sessions' ),
                                   'ua' => $VAR1,
                                   'dispatch' => 1,
                                   'log' => bless( {
                                                     'handle' => \*{'Mojo::Log::$file'},
                                                     'level' => 'debug',
                                                     'path' => '/home/matt/Documents/AnnoTree/WebServices/anno_tree/log/development.log',
                                                     'events' => {
                                                                   'message' => [
                                                                                  sub { "DUMMY" }
                                                                                ]
                                                                 }
                                                   }, 'Mojo::Log' ),
                                   'plugins' => bless( {
                                                         'namespaces' => [
                                                                           'Mojolicious::Plugin'
                                                                         ],
                                                         'events' => {
                                                                       'around_dispatch' => [
                                                                                              sub { "DUMMY" },
                                                                                              sub { "DUMMY" }
                                                                                            ]
                                                                     }
                                                       }, 'Mojolicious::Plugins' ),
                                   'static' => bless( {
                                                        'index' => {},
                                                        'paths' => [
                                                                     '/home/matt/Documents/AnnoTree/WebServices/anno_tree/public'
                                                                   ],
                                                        'classes' => [
                                                                       'main'
                                                                     ]
                                                      }, 'Mojolicious::Static' ),
                                   'types' => bless( {
                                                       'types' => {
                                                                    'gif' => [
                                                                               'image/gif'
                                                                             ],
                                                                    'xml' => [
                                                                               'application/xml',
                                                                               'text/xml'
                                                                             ],
                                                                    'atom' => [
                                                                                'application/atom+xml'
                                                                              ],
                                                                    'jpeg' => [
                                                                                'image/jpeg'
                                                                              ],
                                                                    'png' => [
                                                                               'image/png'
                                                                             ],
                                                                    'svg' => [
                                                                               'image/svg+xml'
                                                                             ],
                                                                    'ogv' => [
                                                                               'video/ogg'
                                                                             ],
                                                                    'mp3' => [
                                                                               'audio/mpeg'
                                                                             ],
                                                                    'ico' => [
                                                                               'image/x-icon'
                                                                             ],
                                                                    'ogg' => [
                                                                               'audio/ogg'
                                                                             ],
                                                                    'pdf' => [
                                                                               'application/pdf'
                                                                             ],
                                                                    'gz' => [
                                                                              'application/x-gzip'
                                                                            ],
                                                                    'txt' => [
                                                                               'text/plain'
                                                                             ],
                                                                    'mp4' => [
                                                                               'video/mp4'
                                                                             ],
                                                                    'jpg' => [
                                                                               'image/jpeg'
                                                                             ],
                                                                    'css' => [
                                                                               'text/css'
                                                                             ],
                                                                    'rss' => [
                                                                               'application/rss+xml'
                                                                             ],
                                                                    'woff' => [
                                                                                'application/font-woff'
                                                                              ],
                                                                    'htm' => [
                                                                               'text/html'
                                                                             ],
                                                                    'appcache' => [
                                                                                    'text/cache-manifest'
                                                                                  ],
                                                                    'bin' => [
                                                                               'application/octet-stream'
                                                                             ],
                                                                    'html' => [
                                                                                'text/html;charset=UTF-8'
                                                                              ],
                                                                    'webm' => [
                                                                                'video/webm'
                                                                              ],
                                                                    'js' => [
                                                                              'application/javascript'
                                                                            ],
                                                                    'zip' => [
                                                                               'application/zip'
                                                                             ],
                                                                    'json' => [
                                                                                'application/json'
                                                                              ]
                                                                  }
                                                     }, 'Mojolicious::Types' ),
                                   'home' => bless( {
                                                      'parts' => [
                                                                   '',
                                                                   'home',
                                                                   'matt',
                                                                   'Documents',
                                                                   'AnnoTree',
                                                                   'WebServices',
                                                                   'anno_tree'
                                                                 ]
                                                    }, 'Mojo::Home' ),
                                   'defaults' => {},
                                   'commands' => bless( {
                                                          'app' => $VAR1->{'app'}
                                                        }, 'Mojolicious::Commands' ),
                                   'renderer' => bless( {
                                                          'paths' => [
                                                                       '/home/matt/Documents/AnnoTree/WebServices/anno_tree/templates'
                                                                     ],
                                                          'templates' => {
                                                                           'leaves/leaf/testupload.html' => 'ep',
                                                                           'forest/list.json' => 'ep',
                                                                           'branch/list.json' => 'ep',
                                                                           'tree/list.json' => 'ep',
                                                                           'example/welcome.html' => 'ep',
                                                                           'forest/unique.json' => 'ep',
                                                                           'leaves/leaf/list.json' => 'ep',
                                                                           'layouts/default.html' => 'ep'
                                                                         },
                                                          'handlers' => {
                                                                          'ep' => sub { "DUMMY" },
                                                                          'text' => sub { "DUMMY" },
                                                                          'data' => sub { "DUMMY" },
                                                                          'epl' => sub { "DUMMY" },
                                                                          'json' => sub { "DUMMY" }
                                                                        },
                                                          'helpers' => {
                                                                         'datetime_field' => sub { "DUMMY" },
                                                                         'search_field' => sub { "DUMMY" },
                                                                         'dumper' => sub { "DUMMY" },
                                                                         'current_route' => sub { "DUMMY" },
                                                                         'link_to' => sub { "DUMMY" },
                                                                         'date_field' => sub { "DUMMY" },
                                                                         'text_field' => sub { "DUMMY" },
                                                                         'flash' => sub { "DUMMY" },
                                                                         'email_field' => sub { "DUMMY" },
                                                                         'include' => sub { "DUMMY" },
                                                                         'javascript' => sub { "DUMMY" },
                                                                         'input_tag' => sub { "DUMMY" },
                                                                         'url_field' => sub { "DUMMY" },
                                                                         'stylesheet' => sub { "DUMMY" },
                                                                         'time_field' => sub { "DUMMY" },
                                                                         'content_for' => sub { "DUMMY" },
                                                                         'tel_field' => sub { "DUMMY" },
                                                                         'text_area' => sub { "DUMMY" },
                                                                         'content' => sub { "DUMMY" },
                                                                         'form_for' => sub { "DUMMY" },
                                                                         'number_field' => sub { "DUMMY" },
                                                                         'url_for' => sub { "DUMMY" },
                                                                         'title' => sub { "DUMMY" },
                                                                         'image' => sub { "DUMMY" },
                                                                         'stash' => sub { "DUMMY" },
                                                                         'month_field' => sub { "DUMMY" },
                                                                         'submit_button' => sub { "DUMMY" },
                                                                         'select_field' => sub { "DUMMY" },
                                                                         'password_field' => sub { "DUMMY" },
                                                                         'radio_button' => sub { "DUMMY" },
                                                                         'session' => sub { "DUMMY" },
                                                                         'hidden_field' => sub { "DUMMY" },
                                                                         'url_with' => sub { "DUMMY" },
                                                                         't' => sub { "DUMMY" },
                                                                         'range_field' => sub { "DUMMY" },
                                                                         'extends' => sub { "DUMMY" },
                                                                         'week_field' => sub { "DUMMY" },
                                                                         'tag' => $VAR1->{'app'}{'renderer'}{'helpers'}{'t'},
                                                                         'file_field' => sub { "DUMMY" },
                                                                         'app' => sub { "DUMMY" },
                                                                         'param' => sub { "DUMMY" },
                                                                         'layout' => sub { "DUMMY" },
                                                                         'config' => sub { "DUMMY" },
                                                                         'check_box' => sub { "DUMMY" },
                                                                         'color_field' => sub { "DUMMY" }
                                                                       },
                                                          'default_handler' => 'ep',
                                                          'cache' => bless( {
                                                                              'queue' => [
                                                                                           'c4f73595392a2e402edada0ff9117291',
                                                                                           '675b6849300eadbde67f92f07bb65209'
                                                                                         ],
                                                                              'max_keys' => 100,
                                                                              'cache' => {
                                                                                           '675b6849300eadbde67f92f07bb65209' => bless( {
                                                                                                                                          'escape' => sub { "DUMMY" },
                                                                                                                                          'tag_start' => '<%',
                                                                                                                                          'tree' => [],
                                                                                                                                          'trim_mark' => '=',
                                                                                                                                          'auto_escape' => 1,
                                                                                                                                          'encoding' => 'UTF-8',
                                                                                                                                          'code' => 'package Mojo::Template::SandBox; use Mojo::Base -strict;sub { my $_M = \'\'; my $self = shift; Scalar::Util::weaken $self;no strict \'refs\'; no warnings \'redefine\';my $_H = $self->app->renderer->helpers;sub datetime_field; *datetime_field = sub { $_H->{\'datetime_field\'}->($self, @_) };sub search_field; *search_field = sub { $_H->{\'search_field\'}->($self, @_) };sub dumper; *dumper = sub { $_H->{\'dumper\'}->($self, @_) };sub current_route; *current_route = sub { $_H->{\'current_route\'}->($self, @_) };sub link_to; *link_to = sub { $_H->{\'link_to\'}->($self, @_) };sub date_field; *date_field = sub { $_H->{\'date_field\'}->($self, @_) };sub text_field; *text_field = sub { $_H->{\'text_field\'}->($self, @_) };sub flash; *flash = sub { $_H->{\'flash\'}->($self, @_) };sub email_field; *email_field = sub { $_H->{\'email_field\'}->($self, @_) };sub include; *include = sub { $_H->{\'include\'}->($self, @_) };sub javascript; *javascript = sub { $_H->{\'javascript\'}->($self, @_) };sub input_tag; *input_tag = sub { $_H->{\'input_tag\'}->($self, @_) };sub url_field; *url_field = sub { $_H->{\'url_field\'}->($self, @_) };sub stylesheet; *stylesheet = sub { $_H->{\'stylesheet\'}->($self, @_) };sub time_field; *time_field = sub { $_H->{\'time_field\'}->($self, @_) };sub content_for; *content_for = sub { $_H->{\'content_for\'}->($self, @_) };sub tel_field; *tel_field = sub { $_H->{\'tel_field\'}->($self, @_) };sub text_area; *text_area = sub { $_H->{\'text_area\'}->($self, @_) };sub content; *content = sub { $_H->{\'content\'}->($self, @_) };sub form_for; *form_for = sub { $_H->{\'form_for\'}->($self, @_) };sub number_field; *number_field = sub { $_H->{\'number_field\'}->($self, @_) };sub url_for; *url_for = sub { $_H->{\'url_for\'}->($self, @_) };sub title; *title = sub { $_H->{\'title\'}->($self, @_) };sub image; *image = sub { $_H->{\'image\'}->($self, @_) };sub stash; *stash = sub { $_H->{\'stash\'}->($self, @_) };sub month_field; *month_field = sub { $_H->{\'month_field\'}->($self, @_) };sub submit_button; *submit_button = sub { $_H->{\'submit_button\'}->($self, @_) };sub select_field; *select_field = sub { $_H->{\'select_field\'}->($self, @_) };sub password_field; *password_field = sub { $_H->{\'password_field\'}->($self, @_) };sub radio_button; *radio_button = sub { $_H->{\'radio_button\'}->($self, @_) };sub session; *session = sub { $_H->{\'session\'}->($self, @_) };sub hidden_field; *hidden_field = sub { $_H->{\'hidden_field\'}->($self, @_) };sub url_with; *url_with = sub { $_H->{\'url_with\'}->($self, @_) };sub t; *t = sub { $_H->{\'t\'}->($self, @_) };sub range_field; *range_field = sub { $_H->{\'range_field\'}->($self, @_) };sub extends; *extends = sub { $_H->{\'extends\'}->($self, @_) };sub week_field; *week_field = sub { $_H->{\'week_field\'}->($self, @_) };sub tag; *tag = sub { $_H->{\'tag\'}->($self, @_) };sub file_field; *file_field = sub { $_H->{\'file_field\'}->($self, @_) };sub app; *app = sub { $_H->{\'app\'}->($self, @_) };sub param; *param = sub { $_H->{\'param\'}->($self, @_) };sub layout; *layout = sub { $_H->{\'layout\'}->($self, @_) };sub config; *config = sub { $_H->{\'config\'}->($self, @_) };sub check_box; *check_box = sub { $_H->{\'check_box\'}->($self, @_) };sub color_field; *color_field = sub { $_H->{\'color_field\'}->($self, @_) };use strict;my $_S = $self->stash; my $branchid = $_S->{\'branchid\'}; my $layout = $_S->{\'layout\'}; my $extends = $_S->{\'extends\'}; my $controller = $_S->{\'controller\'}; my $format = $_S->{\'format\'}; my $forestid = $_S->{\'forestid\'}; my $action = $_S->{\'action\'}; my $treeid = $_S->{\'treeid\'};; do { $_M .= "\\<\\!DOCTYPE\\ html\\>\\n";
$_M .= "\\<html\\>\\n";
$_M .= "\\ \\ \\ \\ \\<head\\>\\<title\\>Upload\\<\\/title\\>\\<\\/head\\>\\n";
$_M .= "\\ \\ \\ \\ \\<body\\>\\n";
$_M .= "\\ \\ \\ \\ \\ \\ \\ \\ ";$_M .= _escape scalar  form_for \'/0/0/0/leaf\' => (enctype => \'multipart/form-data\') => (method => \'POST\')=>  sub { my $_M = \'\'; $_M .= "\\n";
$_M .= "\\ \\ \\ \\ \\ \\ \\ \\ ";$_M .= _escape scalar  file_field \'image\' ;$_M .= "\\n";
$_M .= "\\ \\ \\ \\ \\ \\ \\ \\ ";$_M .= _escape scalar  submit_button \'Upload\' ;$_M .= "\\n";
return Mojo::ByteStream->new($_M) }; 
$_M .= "\\ \\ \\ \\ \\<\\/body\\>\\n";
$_M .= "\\<\\/html\\>\\n";; $_M } };',
                                                                                                                                          'escape_mark' => '=',
                                                                                                                                          'capture_start' => 'begin',
                                                                                                                                          'append' => '',
                                                                                                                                          'line_start' => '%',
                                                                                                                                          'comment_mark' => '#',
                                                                                                                                          'compiled' => sub { "DUMMY" },
                                                                                                                                          'replace_mark' => '%',
                                                                                                                                          'tag_end' => '%>',
                                                                                                                                          'capture_end' => 'end',
                                                                                                                                          'name' => 'template "leaves/leaf/testupload.html.ep"',
                                                                                                                                          'prepend' => 'my $self = shift; Scalar::Util::weaken $self;no strict \'refs\'; no warnings \'redefine\';my $_H = $self->app->renderer->helpers;sub datetime_field; *datetime_field = sub { $_H->{\'datetime_field\'}->($self, @_) };sub search_field; *search_field = sub { $_H->{\'search_field\'}->($self, @_) };sub dumper; *dumper = sub { $_H->{\'dumper\'}->($self, @_) };sub current_route; *current_route = sub { $_H->{\'current_route\'}->($self, @_) };sub link_to; *link_to = sub { $_H->{\'link_to\'}->($self, @_) };sub date_field; *date_field = sub { $_H->{\'date_field\'}->($self, @_) };sub text_field; *text_field = sub { $_H->{\'text_field\'}->($self, @_) };sub flash; *flash = sub { $_H->{\'flash\'}->($self, @_) };sub email_field; *email_field = sub { $_H->{\'email_field\'}->($self, @_) };sub include; *include = sub { $_H->{\'include\'}->($self, @_) };sub javascript; *javascript = sub { $_H->{\'javascript\'}->($self, @_) };sub input_tag; *input_tag = sub { $_H->{\'input_tag\'}->($self, @_) };sub url_field; *url_field = sub { $_H->{\'url_field\'}->($self, @_) };sub stylesheet; *stylesheet = sub { $_H->{\'stylesheet\'}->($self, @_) };sub time_field; *time_field = sub { $_H->{\'time_field\'}->($self, @_) };sub content_for; *content_for = sub { $_H->{\'content_for\'}->($self, @_) };sub tel_field; *tel_field = sub { $_H->{\'tel_field\'}->($self, @_) };sub text_area; *text_area = sub { $_H->{\'text_area\'}->($self, @_) };sub content; *content = sub { $_H->{\'content\'}->($self, @_) };sub form_for; *form_for = sub { $_H->{\'form_for\'}->($self, @_) };sub number_field; *number_field = sub { $_H->{\'number_field\'}->($self, @_) };sub url_for; *url_for = sub { $_H->{\'url_for\'}->($self, @_) };sub title; *title = sub { $_H->{\'title\'}->($self, @_) };sub image; *image = sub { $_H->{\'image\'}->($self, @_) };sub stash; *stash = sub { $_H->{\'stash\'}->($self, @_) };sub month_field; *month_field = sub { $_H->{\'month_field\'}->($self, @_) };sub submit_button; *submit_button = sub { $_H->{\'submit_button\'}->($self, @_) };sub select_field; *select_field = sub { $_H->{\'select_field\'}->($self, @_) };sub password_field; *password_field = sub { $_H->{\'password_field\'}->($self, @_) };sub radio_button; *radio_button = sub { $_H->{\'radio_button\'}->($self, @_) };sub session; *session = sub { $_H->{\'session\'}->($self, @_) };sub hidden_field; *hidden_field = sub { $_H->{\'hidden_field\'}->($self, @_) };sub url_with; *url_with = sub { $_H->{\'url_with\'}->($self, @_) };sub t; *t = sub { $_H->{\'t\'}->($self, @_) };sub range_field; *range_field = sub { $_H->{\'range_field\'}->($self, @_) };sub extends; *extends = sub { $_H->{\'extends\'}->($self, @_) };sub week_field; *week_field = sub { $_H->{\'week_field\'}->($self, @_) };sub tag; *tag = sub { $_H->{\'tag\'}->($self, @_) };sub file_field; *file_field = sub { $_H->{\'file_field\'}->($self, @_) };sub app; *app = sub { $_H->{\'app\'}->($self, @_) };sub param; *param = sub { $_H->{\'param\'}->($self, @_) };sub layout; *layout = sub { $_H->{\'layout\'}->($self, @_) };sub config; *config = sub { $_H->{\'config\'}->($self, @_) };sub check_box; *check_box = sub { $_H->{\'check_box\'}->($self, @_) };sub color_field; *color_field = sub { $_H->{\'color_field\'}->($self, @_) };use strict;my $_S = $self->stash; my $branchid = $_S->{\'branchid\'}; my $layout = $_S->{\'layout\'}; my $extends = $_S->{\'extends\'}; my $controller = $_S->{\'controller\'}; my $format = $_S->{\'format\'}; my $forestid = $_S->{\'forestid\'}; my $action = $_S->{\'action\'}; my $treeid = $_S->{\'treeid\'};',
                                                                                                                                          'expression_mark' => '=',
                                                                                                                                          'template' => '<!DOCTYPE html>
<html>
    <head><title>Upload</title></head>
    <body>
        %= form_for \'/0/0/0/leaf\' => (enctype => \'multipart/form-data\') => (method => \'POST\')=> begin
        %= file_field \'image\'
        %= submit_button \'Upload\'
    % end
    </body>
</html>
',
                                                                                                                                          'namespace' => 'Mojo::Template::SandBox'
                                                                                                                                        }, 'Mojo::Template' ),
                                                                                           'c4f73595392a2e402edada0ff9117291' => bless( {
                                                                                                                                          'compiled' => sub { "DUMMY" },
                                                                                                                                          'comment_mark' => '#',
                                                                                                                                          'line_start' => '%',
                                                                                                                                          'append' => '',
                                                                                                                                          'escape_mark' => '=',
                                                                                                                                          'capture_start' => 'begin',
                                                                                                                                          'code' => 'package Mojo::Template::SandBox; use Mojo::Base -strict;sub { my $_M = \'\'; my $self = shift; Scalar::Util::weaken $self;no strict \'refs\'; no warnings \'redefine\';my $_H = $self->app->renderer->helpers;sub datetime_field; *datetime_field = sub { $_H->{\'datetime_field\'}->($self, @_) };sub search_field; *search_field = sub { $_H->{\'search_field\'}->($self, @_) };sub dumper; *dumper = sub { $_H->{\'dumper\'}->($self, @_) };sub current_route; *current_route = sub { $_H->{\'current_route\'}->($self, @_) };sub link_to; *link_to = sub { $_H->{\'link_to\'}->($self, @_) };sub date_field; *date_field = sub { $_H->{\'date_field\'}->($self, @_) };sub text_field; *text_field = sub { $_H->{\'text_field\'}->($self, @_) };sub flash; *flash = sub { $_H->{\'flash\'}->($self, @_) };sub email_field; *email_field = sub { $_H->{\'email_field\'}->($self, @_) };sub include; *include = sub { $_H->{\'include\'}->($self, @_) };sub javascript; *javascript = sub { $_H->{\'javascript\'}->($self, @_) };sub input_tag; *input_tag = sub { $_H->{\'input_tag\'}->($self, @_) };sub url_field; *url_field = sub { $_H->{\'url_field\'}->($self, @_) };sub stylesheet; *stylesheet = sub { $_H->{\'stylesheet\'}->($self, @_) };sub time_field; *time_field = sub { $_H->{\'time_field\'}->($self, @_) };sub content_for; *content_for = sub { $_H->{\'content_for\'}->($self, @_) };sub tel_field; *tel_field = sub { $_H->{\'tel_field\'}->($self, @_) };sub text_area; *text_area = sub { $_H->{\'text_area\'}->($self, @_) };sub content; *content = sub { $_H->{\'content\'}->($self, @_) };sub form_for; *form_for = sub { $_H->{\'form_for\'}->($self, @_) };sub number_field; *number_field = sub { $_H->{\'number_field\'}->($self, @_) };sub url_for; *url_for = sub { $_H->{\'url_for\'}->($self, @_) };sub title; *title = sub { $_H->{\'title\'}->($self, @_) };sub image; *image = sub { $_H->{\'image\'}->($self, @_) };sub stash; *stash = sub { $_H->{\'stash\'}->($self, @_) };sub month_field; *month_field = sub { $_H->{\'month_field\'}->($self, @_) };sub submit_button; *submit_button = sub { $_H->{\'submit_button\'}->($self, @_) };sub select_field; *select_field = sub { $_H->{\'select_field\'}->($self, @_) };sub password_field; *password_field = sub { $_H->{\'password_field\'}->($self, @_) };sub radio_button; *radio_button = sub { $_H->{\'radio_button\'}->($self, @_) };sub session; *session = sub { $_H->{\'session\'}->($self, @_) };sub hidden_field; *hidden_field = sub { $_H->{\'hidden_field\'}->($self, @_) };sub url_with; *url_with = sub { $_H->{\'url_with\'}->($self, @_) };sub t; *t = sub { $_H->{\'t\'}->($self, @_) };sub range_field; *range_field = sub { $_H->{\'range_field\'}->($self, @_) };sub extends; *extends = sub { $_H->{\'extends\'}->($self, @_) };sub week_field; *week_field = sub { $_H->{\'week_field\'}->($self, @_) };sub tag; *tag = sub { $_H->{\'tag\'}->($self, @_) };sub file_field; *file_field = sub { $_H->{\'file_field\'}->($self, @_) };sub app; *app = sub { $_H->{\'app\'}->($self, @_) };sub param; *param = sub { $_H->{\'param\'}->($self, @_) };sub layout; *layout = sub { $_H->{\'layout\'}->($self, @_) };sub config; *config = sub { $_H->{\'config\'}->($self, @_) };sub check_box; *check_box = sub { $_H->{\'check_box\'}->($self, @_) };sub color_field; *color_field = sub { $_H->{\'color_field\'}->($self, @_) };use strict;my $_S = $self->stash; my $name = $_S->{\'name\'}; my $branchid = $_S->{\'branchid\'}; my $layout = $_S->{\'layout\'}; my $controller = $_S->{\'controller\'}; my $extends = $_S->{\'extends\'}; my $format = $_S->{\'format\'}; my $action = $_S->{\'action\'}; my $forestid = $_S->{\'forestid\'}; my $treeid = $_S->{\'treeid\'};; do { $_M .= "\\{\\"test\\"\\:\\ \\"it\\ works\\"\\}\\n";; $_M } };',
                                                                                                                                          'template' => '{"test": "it works"}
',
                                                                                                                                          'namespace' => 'Mojo::Template::SandBox',
                                                                                                                                          'prepend' => 'my $self = shift; Scalar::Util::weaken $self;no strict \'refs\'; no warnings \'redefine\';my $_H = $self->app->renderer->helpers;sub datetime_field; *datetime_field = sub { $_H->{\'datetime_field\'}->($self, @_) };sub search_field; *search_field = sub { $_H->{\'search_field\'}->($self, @_) };sub dumper; *dumper = sub { $_H->{\'dumper\'}->($self, @_) };sub current_route; *current_route = sub { $_H->{\'current_route\'}->($self, @_) };sub link_to; *link_to = sub { $_H->{\'link_to\'}->($self, @_) };sub date_field; *date_field = sub { $_H->{\'date_field\'}->($self, @_) };sub text_field; *text_field = sub { $_H->{\'text_field\'}->($self, @_) };sub flash; *flash = sub { $_H->{\'flash\'}->($self, @_) };sub email_field; *email_field = sub { $_H->{\'email_field\'}->($self, @_) };sub include; *include = sub { $_H->{\'include\'}->($self, @_) };sub javascript; *javascript = sub { $_H->{\'javascript\'}->($self, @_) };sub input_tag; *input_tag = sub { $_H->{\'input_tag\'}->($self, @_) };sub url_field; *url_field = sub { $_H->{\'url_field\'}->($self, @_) };sub stylesheet; *stylesheet = sub { $_H->{\'stylesheet\'}->($self, @_) };sub time_field; *time_field = sub { $_H->{\'time_field\'}->($self, @_) };sub content_for; *content_for = sub { $_H->{\'content_for\'}->($self, @_) };sub tel_field; *tel_field = sub { $_H->{\'tel_field\'}->($self, @_) };sub text_area; *text_area = sub { $_H->{\'text_area\'}->($self, @_) };sub content; *content = sub { $_H->{\'content\'}->($self, @_) };sub form_for; *form_for = sub { $_H->{\'form_for\'}->($self, @_) };sub number_field; *number_field = sub { $_H->{\'number_field\'}->($self, @_) };sub url_for; *url_for = sub { $_H->{\'url_for\'}->($self, @_) };sub title; *title = sub { $_H->{\'title\'}->($self, @_) };sub image; *image = sub { $_H->{\'image\'}->($self, @_) };sub stash; *stash = sub { $_H->{\'stash\'}->($self, @_) };sub month_field; *month_field = sub { $_H->{\'month_field\'}->($self, @_) };sub submit_button; *submit_button = sub { $_H->{\'submit_button\'}->($self, @_) };sub select_field; *select_field = sub { $_H->{\'select_field\'}->($self, @_) };sub password_field; *password_field = sub { $_H->{\'password_field\'}->($self, @_) };sub radio_button; *radio_button = sub { $_H->{\'radio_button\'}->($self, @_) };sub session; *session = sub { $_H->{\'session\'}->($self, @_) };sub hidden_field; *hidden_field = sub { $_H->{\'hidden_field\'}->($self, @_) };sub url_with; *url_with = sub { $_H->{\'url_with\'}->($self, @_) };sub t; *t = sub { $_H->{\'t\'}->($self, @_) };sub range_field; *range_field = sub { $_H->{\'range_field\'}->($self, @_) };sub extends; *extends = sub { $_H->{\'extends\'}->($self, @_) };sub week_field; *week_field = sub { $_H->{\'week_field\'}->($self, @_) };sub tag; *tag = sub { $_H->{\'tag\'}->($self, @_) };sub file_field; *file_field = sub { $_H->{\'file_field\'}->($self, @_) };sub app; *app = sub { $_H->{\'app\'}->($self, @_) };sub param; *param = sub { $_H->{\'param\'}->($self, @_) };sub layout; *layout = sub { $_H->{\'layout\'}->($self, @_) };sub config; *config = sub { $_H->{\'config\'}->($self, @_) };sub check_box; *check_box = sub { $_H->{\'check_box\'}->($self, @_) };sub color_field; *color_field = sub { $_H->{\'color_field\'}->($self, @_) };use strict;my $_S = $self->stash; my $name = $_S->{\'name\'}; my $branchid = $_S->{\'branchid\'}; my $layout = $_S->{\'layout\'}; my $controller = $_S->{\'controller\'}; my $extends = $_S->{\'extends\'}; my $format = $_S->{\'format\'}; my $action = $_S->{\'action\'}; my $forestid = $_S->{\'forestid\'}; my $treeid = $_S->{\'treeid\'};',
                                                                                                                                          'expression_mark' => '=',
                                                                                                                                          'name' => 'template "leaves/leaf/list.json.ep"',
                                                                                                                                          'capture_end' => 'end',
                                                                                                                                          'tag_end' => '%>',
                                                                                                                                          'replace_mark' => '%',
                                                                                                                                          'tree' => [],
                                                                                                                                          'tag_start' => '<%',
                                                                                                                                          'escape' => $VAR1->{'app'}{'renderer'}{'cache'}{'cache'}{'675b6849300eadbde67f92f07bb65209'}{'escape'},
                                                                                                                                          'encoding' => 'UTF-8',
                                                                                                                                          'auto_escape' => 1,
                                                                                                                                          'trim_mark' => '='
                                                                                                                                        }, 'Mojo::Template' )
                                                                                         }
                                                                            }, 'Mojo::Cache' ),
                                                          'encoding' => 'UTF-8'
                                                        }, 'Mojolicious::Renderer' ),
                                   'controller_class' => 'Mojolicious::Controller',
                                   'moniker' => 'anno_tree'
                                 }, 'AnnoTree' )
               }, 'Mojo::UserAgent' );

[Thu May 23 20:51:03 2013] [debug] Rendering cached template "leaves/leaf/testupload.html.ep".
[Thu May 23 20:51:03 2013] [debug] 200 OK (0.003960s, 252.525/s).
[Thu May 23 20:53:27 2013] [debug] Your secret passphrase needs to be changed!!!
[Thu May 23 20:53:27 2013] [debug] POST "/0/0/0/leaf".
[Thu May 23 20:53:27 2013] [error] syntax error at /home/matt/Documents/AnnoTree/WebServices/anno_tree/script/../lib/AnnoTree/Leaves/Leaf.pm line 4, near "use 'Mojolicious::Plugins'"
BEGIN not safe after errors--compilation aborted at /home/matt/Documents/AnnoTree/WebServices/anno_tree/script/../lib/AnnoTree/Leaves/Leaf.pm line 5.
Compilation failed in require at (eval 230) line 1.

[Thu May 23 20:53:27 2013] [debug] Template "exception.development.html.ep" not found.
[Thu May 23 20:53:27 2013] [debug] Template "exception.html.ep" not found.
[Thu May 23 20:53:27 2013] [debug] Rendering inline template.
[Thu May 23 20:53:27 2013] [debug] Rendering inline template.
[Thu May 23 20:53:27 2013] [debug] 500 Internal Server Error (0.016813s, 59.478/s).
[Thu May 23 20:53:55 2013] [debug] GET "/0/0/0/leaf".
[Thu May 23 20:53:55 2013] [debug] Routing to controller "AnnoTree::Leaves::Leaf" and action "list".
[Thu May 23 20:53:55 2013] [debug] Action not found in controller.
[Thu May 23 20:53:55 2013] [debug] Template "leaves/leaf/list.html.ep" not found.
[Thu May 23 20:53:55 2013] [debug] Template "not_found.development.html.ep" not found.
[Thu May 23 20:53:55 2013] [debug] Template "not_found.html.ep" not found.
[Thu May 23 20:53:55 2013] [debug] Rendering inline template.
[Thu May 23 20:53:55 2013] [debug] Rendering inline template.
[Thu May 23 20:53:55 2013] [debug] 404 Not Found (0.010699s, 93.467/s).
[Thu May 23 20:54:08 2013] [debug] Your secret passphrase needs to be changed!!!
[Thu May 23 20:54:08 2013] [debug] GET "/0/0/0/leaf".
[Thu May 23 20:54:08 2013] [debug] Routing to controller "AnnoTree::Leaves::Leaf" and action "list".
[Thu May 23 20:54:08 2013] [debug] Rendering template "leaves/leaf/list.json.ep".
[Thu May 23 20:54:08 2013] [debug] 200 OK (0.003515s, 284.495/s).
[Thu May 23 20:54:13 2013] [debug] GET "/0/0/0/leaf/testupload".
[Thu May 23 20:54:13 2013] [debug] Routing to controller "AnnoTree::Leaves::Leaf" and action "testImageUpload".
[Thu May 23 20:54:13 2013] [debug] Rendering template "leaves/leaf/testupload.html.ep".
[Thu May 23 20:54:13 2013] [debug] 200 OK (0.002728s, 366.569/s).
[Thu May 23 20:59:11 2013] [debug] Your secret passphrase needs to be changed!!!
[Thu May 23 20:59:11 2013] [debug] POST "/0/0/0/leaf".
[Thu May 23 20:59:11 2013] [debug] Routing to controller "AnnoTree::Leaves::Leaf" and action "imagePost".
[Thu May 23 20:59:11 2013] [debug] $VAR1 = bless( {
                 'name' => 'image',
                 'asset' => bless( {
                                     'tmpdir' => '/tmp',
                                     'cleanup' => 1,
                                     'handle' => bless( \*Symbol::GEN52, 'IO::File' ),
                                     'path' => '/tmp/mojo.tmp'
                                   }, 'Mojo::Asset::File' ),
                 'filename' => 'Screenshot_2013-05-22-23-01-58.png',
                 'headers' => bless( {
                                       'state' => 'finished',
                                       'cache' => [],
                                       'headers' => {
                                                      'content-disposition' => [
                                                                                 [
                                                                                   'form-data; name="image"; filename="Screenshot_2013-05-22-23-01-58.png"'
                                                                                 ]
                                                                               ],
                                                      'content-type' => [
                                                                          [
                                                                            'image/png'
                                                                          ]
                                                                        ]
                                                    },
                                       'max_line_size' => 10240
                                     }, 'Mojo::Headers' )
               }, 'Mojo::Upload' );

[Thu May 23 20:59:11 2013] [debug] Rendering template "leaves/leaf/testupload.html.ep".
[Thu May 23 20:59:11 2013] [debug] 200 OK (0.004337s, 230.574/s).
[Thu May 23 21:17:11 2013] [debug] POST "/0/0/0/leaf".
[Thu May 23 21:17:11 2013] [debug] Routing to controller "AnnoTree::Leaves::Leaf" and action "imagePost".
[Thu May 23 21:17:11 2013] [debug] $VAR1 = bless( {
                 'name' => 'image',
                 'asset' => bless( {
                                     'tmpdir' => '/tmp',
                                     'cleanup' => 1,
                                     'handle' => bless( \*Symbol::GEN103, 'IO::File' ),
                                     'path' => '/tmp/mojo.tmp'
                                   }, 'Mojo::Asset::File' ),
                 'headers' => bless( {
                                       'headers' => {
                                                      'content-disposition' => [
                                                                                 [
                                                                                   'form-data; name="image"; filename="Screenshot_2013-05-22-23-01-58.png"'
                                                                                 ]
                                                                               ],
                                                      'content-type' => [
                                                                          [
                                                                            'image/png'
                                                                          ]
                                                                        ]
                                                    },
                                       'max_line_size' => 10240,
                                       'cache' => [],
                                       'state' => 'finished'
                                     }, 'Mojo::Headers' ),
                 'filename' => 'Screenshot_2013-05-22-23-01-58.png'
               }, 'Mojo::Upload' );

[Thu May 23 21:17:11 2013] [debug] Rendering cached template "leaves/leaf/testupload.html.ep".
[Thu May 23 21:17:11 2013] [debug] 200 OK (0.000930s, 1075.269/s).
[Thu May 23 21:22:24 2013] [debug] Your secret passphrase needs to be changed!!!
[Thu May 23 21:22:24 2013] [debug] POST "/0/0/0/leaf".
[Thu May 23 21:22:24 2013] [error] syntax error at /home/matt/Documents/AnnoTree/WebServices/anno_tree/script/../lib/AnnoTree/Leaves/Leaf.pm line 32, near ")
    $self"
Compilation failed in require at (eval 230) line 1.

[Thu May 23 21:22:24 2013] [debug] Template "exception.development.html.ep" not found.
[Thu May 23 21:22:24 2013] [debug] Template "exception.html.ep" not found.
[Thu May 23 21:22:24 2013] [debug] Rendering inline template.
[Thu May 23 21:22:24 2013] [debug] Rendering inline template.
[Thu May 23 21:22:24 2013] [debug] 500 Internal Server Error (0.016778s, 59.602/s).
[Thu May 23 21:23:07 2013] [debug] Your secret passphrase needs to be changed!!!
[Thu May 23 21:23:07 2013] [debug] GET "/0/0/0/leaf".
[Thu May 23 21:23:07 2013] [debug] Routing to controller "AnnoTree::Leaves::Leaf" and action "list".
[Thu May 23 21:23:07 2013] [debug] Rendering template "leaves/leaf/list.json.ep".
[Thu May 23 21:23:07 2013] [debug] 200 OK (0.003635s, 275.103/s).
[Thu May 23 21:23:11 2013] [debug] GET "/0/0/0/leaf/testupload".
[Thu May 23 21:23:11 2013] [debug] Routing to controller "AnnoTree::Leaves::Leaf" and action "testImageUpload".
[Thu May 23 21:23:11 2013] [debug] Rendering template "leaves/leaf/testupload.html.ep".
[Thu May 23 21:23:11 2013] [debug] 200 OK (0.002700s, 370.370/s).
[Thu May 23 21:23:15 2013] [debug] POST "/0/0/0/leaf".
[Thu May 23 21:23:15 2013] [debug] Routing to controller "AnnoTree::Leaves::Leaf" and action "imagePost".
[Thu May 23 21:23:15 2013] [debug] Rendering cached template "leaves/leaf/testupload.html.ep".
[Thu May 23 21:23:15 2013] [debug] 200 OK (0.002509s, 398.565/s).
[Thu May 23 21:25:11 2013] [debug] Your secret passphrase needs to be changed!!!
[Thu May 23 21:25:11 2013] [debug] GET "/0/0/0/leaf/testupload".
[Thu May 23 21:25:11 2013] [debug] Routing to controller "AnnoTree::Leaves::Leaf" and action "testImageUpload".
[Thu May 23 21:25:11 2013] [debug] Rendering template "leaves/leaf/testupload.html.ep".
[Thu May 23 21:25:11 2013] [debug] 200 OK (0.004349s, 229.938/s).
[Thu May 23 21:25:23 2013] [debug] POST "/0/0/0/leaf".
[Thu May 23 21:25:23 2013] [debug] Routing to controller "AnnoTree::Leaves::Leaf" and action "imagePost".
[Thu May 23 21:25:23 2013] [debug] $VAR1 = bless( {
                 'name' => 'image',
                 'headers' => bless( {
                                       'headers' => {
                                                      'content-disposition' => [
                                                                                 [
                                                                                   'form-data; name="image"; filename="Screenshot_2013-05-22-23-02-15.png"'
                                                                                 ]
                                                                               ],
                                                      'content-type' => [
                                                                          [
                                                                            'image/png'
                                                                          ]
                                                                        ]
                                                    },
                                       'max_line_size' => 10240,
                                       'cache' => [],
                                       'state' => 'finished'
                                     }, 'Mojo::Headers' ),
                 'filename' => 'Screenshot_2013-05-22-23-02-15.png',
                 'asset' => bless( {
                                     'handle' => bless( \*Symbol::GEN52, 'IO::File' ),
                                     'path' => '/tmp/mojo.tmp',
                                     'tmpdir' => '/tmp',
                                     'cleanup' => 1
                                   }, 'Mojo::Asset::File' )
               }, 'Mojo::Upload' );

[Thu May 23 21:25:23 2013] [debug] Rendering cached template "leaves/leaf/testupload.html.ep".
[Thu May 23 21:25:23 2013] [debug] 200 OK (0.001323s, 755.858/s).
[Thu May 23 21:28:54 2013] [debug] Your secret passphrase needs to be changed!!!
[Thu May 23 21:28:54 2013] [debug] POST "/0/0/0/leaf".
[Thu May 23 21:28:54 2013] [debug] Routing to controller "AnnoTree::Leaves::Leaf" and action "imagePost".
[Thu May 23 21:28:54 2013] [debug] $VAR1 = bless( {
                 'name' => 'image',
                 'filename' => 'Screenshot_2013-05-22-23-02-15.png',
                 'headers' => bless( {
                                       'headers' => {
                                                      'content-disposition' => [
                                                                                 [
                                                                                   'form-data; name="image"; filename="Screenshot_2013-05-22-23-02-15.png"'
                                                                                 ]
                                                                               ],
                                                      'content-type' => [
                                                                          [
                                                                            'image/png'
                                                                          ]
                                                                        ]
                                                    },
                                       'max_line_size' => 10240,
                                       'cache' => [],
                                       'state' => 'finished'
                                     }, 'Mojo::Headers' ),
                 'asset' => bless( {
                                     'tmpdir' => '/tmp',
                                     'cleanup' => 1,
                                     'handle' => bless( \*Symbol::GEN52, 'IO::File' ),
                                     'path' => '/tmp/mojo.tmp'
                                   }, 'Mojo::Asset::File' )
               }, 'Mojo::Upload' );

[Thu May 23 21:28:54 2013] [debug] 200 OK (0.001266s, 789.889/s).
[Thu May 23 21:29:11 2013] [debug] GET "/0/0/0/leaf/testupload".
[Thu May 23 21:29:11 2013] [debug] Routing to controller "AnnoTree::Leaves::Leaf" and action "testImageUpload".
[Thu May 23 21:29:11 2013] [debug] Rendering template "leaves/leaf/testupload.html.ep".
[Thu May 23 21:29:11 2013] [debug] 200 OK (0.003600s, 277.778/s).
[Thu May 23 22:10:14 2013] [debug] Your secret passphrase needs to be changed!!!
[Thu May 23 22:10:14 2013] [debug] POST "/0/0/0/leaf".
[Thu May 23 22:10:14 2013] [debug] Routing to controller "AnnoTree::Leaves::Leaf" and action "imagePost".
[Thu May 23 22:10:14 2013] [debug] $VAR1 = bless( {
                 'headers' => bless( {
                                       'state' => 'finished',
                                       'cache' => [],
                                       'headers' => {
                                                      'content-disposition' => [
                                                                                 [
                                                                                   'form-data; name="image"; filename="Screenshot_2013-05-22-23-01-58.png"'
                                                                                 ]
                                                                               ],
                                                      'content-type' => [
                                                                          [
                                                                            'image/png'
                                                                          ]
                                                                        ]
                                                    },
                                       'max_line_size' => 10240
                                     }, 'Mojo::Headers' ),
                 'filename' => 'Screenshot_2013-05-22-23-01-58.png',
                 'asset' => bless( {
                                     'handle' => bless( \*Symbol::GEN52, 'IO::File' ),
                                     'path' => '/tmp/mojo.tmp',
                                     'tmpdir' => '/tmp',
                                     'cleanup' => 1
                                   }, 'Mojo::Asset::File' ),
                 'name' => 'image'
               }, 'Mojo::Upload' );

[Thu May 23 22:10:14 2013] [error] Can't move file "/tmp/mojo.tmp" to "/opt/test/Screenshot_2013-05-22-23-01-58.png": No such file or directory at /home/matt/perl5/perlbrew/perls/5.18_threads/lib/site_perl/5.18.0/Mojo/Upload.pm line 13.

[Thu May 23 22:10:14 2013] [debug] Template "exception.development.html.ep" not found.
[Thu May 23 22:10:14 2013] [debug] Template "exception.html.ep" not found.
[Thu May 23 22:10:14 2013] [debug] Rendering inline template.
[Thu May 23 22:10:14 2013] [debug] Rendering inline template.
[Thu May 23 22:10:14 2013] [debug] 500 Internal Server Error (0.016997s, 58.834/s).
[Thu May 23 22:38:24 2013] [debug] Your secret passphrase needs to be changed!!!
[Thu May 23 22:38:24 2013] [debug] GET "/0/0/0/leaf".
[Thu May 23 22:38:24 2013] [debug] Routing to controller "AnnoTree::Leaves::Leaf" and action "list".
[Thu May 23 22:38:24 2013] [error] Can't locate object method "debug" via package "AnnoTree::Leaves::Leaf" at /home/matt/perl5/perlbrew/perls/5.18_threads/lib/site_perl/5.18.0/Mojolicious/Routes.pm line 172.

[Thu May 23 22:38:24 2013] [debug] Template "exception.development.html.ep" not found.
[Thu May 23 22:38:24 2013] [debug] Template "exception.html.ep" not found.
[Thu May 23 22:38:24 2013] [debug] Rendering inline template.
[Thu May 23 22:38:24 2013] [debug] Rendering inline template.
[Thu May 23 22:38:24 2013] [debug] 500 Internal Server Error (0.017073s, 58.572/s).
[Thu May 23 22:38:24 2013] [debug] GET "/0/0/0/leaf/testupload".
[Thu May 23 22:38:24 2013] [debug] Routing to controller "AnnoTree::Leaves::Leaf" and action "testImageUpload".
[Thu May 23 22:38:24 2013] [error] Can't locate object method "plugin" via package "AnnoTree::Leaves::Leaf" at /home/matt/perl5/perlbrew/perls/5.18_threads/lib/site_perl/5.18.0/Mojolicious/Routes.pm line 172.

[Thu May 23 22:38:24 2013] [debug] Template "exception.development.html.ep" not found.
[Thu May 23 22:38:24 2013] [debug] Template "exception.html.ep" not found.
[Thu May 23 22:38:24 2013] [debug] Rendering cached inline template.
[Thu May 23 22:38:24 2013] [debug] Rendering cached inline template.
[Thu May 23 22:38:24 2013] [debug] 500 Internal Server Error (0.005223s, 191.461/s).
[Thu May 23 22:38:24 2013] [debug] GET "/0/0/0/leaf/testupload".
[Thu May 23 22:38:24 2013] [debug] Routing to controller "AnnoTree::Leaves::Leaf" and action "testImageUpload".
[Thu May 23 22:38:24 2013] [error] Can't locate object method "plugin" via package "AnnoTree::Leaves::Leaf" at /home/matt/perl5/perlbrew/perls/5.18_threads/lib/site_perl/5.18.0/Mojolicious/Routes.pm line 172.

[Thu May 23 22:38:24 2013] [debug] Template "exception.development.html.ep" not found.
[Thu May 23 22:38:24 2013] [debug] Template "exception.html.ep" not found.
[Thu May 23 22:38:24 2013] [debug] Rendering cached inline template.
[Thu May 23 22:38:24 2013] [debug] Rendering cached inline template.
[Thu May 23 22:38:24 2013] [debug] 500 Internal Server Error (0.004888s, 204.583/s).
[Thu May 23 22:38:30 2013] [debug] GET "/0/0/0/leaf/testupload".
[Thu May 23 22:38:30 2013] [debug] Routing to controller "AnnoTree::Leaves::Leaf" and action "testImageUpload".
[Thu May 23 22:38:30 2013] [error] Can't locate object method "plugin" via package "AnnoTree::Leaves::Leaf" at /home/matt/perl5/perlbrew/perls/5.18_threads/lib/site_perl/5.18.0/Mojolicious/Routes.pm line 172.

[Thu May 23 22:38:30 2013] [debug] Template "exception.development.html.ep" not found.
[Thu May 23 22:38:30 2013] [debug] Template "exception.html.ep" not found.
[Thu May 23 22:38:30 2013] [debug] Rendering cached inline template.
[Thu May 23 22:38:30 2013] [debug] Rendering cached inline template.
[Thu May 23 22:38:30 2013] [debug] 500 Internal Server Error (0.005514s, 181.357/s).
[Thu May 23 22:38:50 2013] [debug] GET "/0/0/0/leaf/".
[Thu May 23 22:38:50 2013] [debug] Routing to controller "AnnoTree::Leaves::Leaf" and action "list".
[Thu May 23 22:38:50 2013] [error] Can't locate object method "debug" via package "AnnoTree::Leaves::Leaf" at /home/matt/perl5/perlbrew/perls/5.18_threads/lib/site_perl/5.18.0/Mojolicious/Routes.pm line 172.

[Thu May 23 22:38:50 2013] [debug] Template "exception.development.html.ep" not found.
[Thu May 23 22:38:50 2013] [debug] Template "exception.html.ep" not found.
[Thu May 23 22:38:50 2013] [debug] Rendering cached inline template.
[Thu May 23 22:38:50 2013] [debug] Rendering cached inline template.
[Thu May 23 22:38:50 2013] [debug] 500 Internal Server Error (0.005553s, 180.083/s).
[Thu May 23 22:38:57 2013] [debug] GET "/0/0/0/leaf/".
[Thu May 23 22:38:57 2013] [debug] Routing to controller "AnnoTree::Leaves::Leaf" and action "list".
[Thu May 23 22:38:57 2013] [error] Can't locate object method "debug" via package "AnnoTree::Leaves::Leaf" at /home/matt/perl5/perlbrew/perls/5.18_threads/lib/site_perl/5.18.0/Mojolicious/Routes.pm line 172.

[Thu May 23 22:38:57 2013] [debug] Template "exception.development.html.ep" not found.
[Thu May 23 22:38:57 2013] [debug] Template "exception.html.ep" not found.
[Thu May 23 22:38:57 2013] [debug] Rendering cached inline template.
[Thu May 23 22:38:57 2013] [debug] Rendering cached inline template.
[Thu May 23 22:38:57 2013] [debug] 500 Internal Server Error (0.005371s, 186.185/s).
[Thu May 23 22:39:07 2013] [debug] GET "/0/0/0/leaf/".
[Thu May 23 22:39:07 2013] [debug] Routing to controller "AnnoTree::Leaves::Leaf" and action "list".
[Thu May 23 22:39:07 2013] [error] Can't locate object method "debug" via package "AnnoTree::Leaves::Leaf" at /home/matt/perl5/perlbrew/perls/5.18_threads/lib/site_perl/5.18.0/Mojolicious/Routes.pm line 172.

[Thu May 23 22:39:07 2013] [debug] Template "exception.development.html.ep" not found.
[Thu May 23 22:39:07 2013] [debug] Template "exception.html.ep" not found.
[Thu May 23 22:39:07 2013] [debug] Rendering cached inline template.
[Thu May 23 22:39:07 2013] [debug] Rendering cached inline template.
[Thu May 23 22:39:07 2013] [debug] 500 Internal Server Error (0.005448s, 183.554/s).
[Thu May 23 22:39:09 2013] [debug] GET "/0/0/0/leaf/".
[Thu May 23 22:39:09 2013] [debug] Routing to controller "AnnoTree::Leaves::Leaf" and action "list".
[Thu May 23 22:39:09 2013] [error] Can't locate object method "debug" via package "AnnoTree::Leaves::Leaf" at /home/matt/perl5/perlbrew/perls/5.18_threads/lib/site_perl/5.18.0/Mojolicious/Routes.pm line 172.

[Thu May 23 22:39:09 2013] [debug] Template "exception.development.html.ep" not found.
[Thu May 23 22:39:09 2013] [debug] Template "exception.html.ep" not found.
[Thu May 23 22:39:09 2013] [debug] Rendering cached inline template.
[Thu May 23 22:39:09 2013] [debug] Rendering cached inline template.
[Thu May 23 22:39:09 2013] [debug] 500 Internal Server Error (0.005457s, 183.251/s).
[Thu May 23 22:39:10 2013] [debug] GET "/0/0/0/leaf/".
[Thu May 23 22:39:10 2013] [debug] Routing to controller "AnnoTree::Leaves::Leaf" and action "list".
[Thu May 23 22:39:10 2013] [error] Can't locate object method "debug" via package "AnnoTree::Leaves::Leaf" at /home/matt/perl5/perlbrew/perls/5.18_threads/lib/site_perl/5.18.0/Mojolicious/Routes.pm line 172.

[Thu May 23 22:39:10 2013] [debug] Template "exception.development.html.ep" not found.
[Thu May 23 22:39:10 2013] [debug] Template "exception.html.ep" not found.
[Thu May 23 22:39:10 2013] [debug] Rendering cached inline template.
[Thu May 23 22:39:10 2013] [debug] Rendering cached inline template.
[Thu May 23 22:39:10 2013] [debug] 500 Internal Server Error (0.005444s, 183.688/s).
[Fri May 24 20:10:38 2013] [debug] Your secret passphrase needs to be changed!!!
[Fri May 24 20:10:38 2013] [debug] GET "/0/0/0/leaf/testupload".
[Fri May 24 20:10:38 2013] [debug] Routing to controller "AnnoTree::Leaves::Leaf" and action "testImageUpload".
[Fri May 24 20:10:38 2013] [error] Can't locate object method "plugin" via package "AnnoTree::Leaves::Leaf" at /home/matt/perl5/perlbrew/perls/5.18_threads/lib/site_perl/5.18.0/Mojolicious/Routes.pm line 172.

[Fri May 24 20:10:38 2013] [debug] Template "exception.development.html.ep" not found.
[Fri May 24 20:10:38 2013] [debug] Template "exception.html.ep" not found.
[Fri May 24 20:10:38 2013] [debug] Rendering inline template.
[Fri May 24 20:10:38 2013] [debug] Rendering inline template.
[Fri May 24 20:10:38 2013] [debug] 500 Internal Server Error (0.017480s, 57.208/s).
[Fri May 24 20:11:04 2013] [debug] Your secret passphrase needs to be changed!!!
[Fri May 24 20:11:04 2013] [debug] GET "/0/0/0/leaf/testupload".
[Fri May 24 20:11:04 2013] [debug] Routing to controller "AnnoTree::Leaves::Leaf" and action "testImageUpload".
[Fri May 24 20:11:04 2013] [debug] Rendering template "leaves/leaf/testupload.html.ep".
[Fri May 24 20:11:04 2013] [debug] 200 OK (0.004153s, 240.790/s).
[Fri May 24 20:11:08 2013] [debug] POST "/0/0/0/leaf".
[Fri May 24 20:11:08 2013] [debug] Routing to controller "AnnoTree::Leaves::Leaf" and action "imagePost".
[Fri May 24 20:11:08 2013] [debug] $VAR1 = bless( {
                 'asset' => bless( {
                                     'handle' => bless( \*Symbol::GEN52, 'IO::File' ),
                                     'path' => '/tmp/mojo.tmp',
                                     'tmpdir' => '/tmp',
                                     'cleanup' => 1
                                   }, 'Mojo::Asset::File' ),
                 'headers' => bless( {
                                       'state' => 'finished',
                                       'cache' => [],
                                       'headers' => {
                                                      'content-disposition' => [
                                                                                 [
                                                                                   'form-data; name="image"; filename="Screenshot_2013-05-22-23-01-58.png"'
                                                                                 ]
                                                                               ],
                                                      'content-type' => [
                                                                          [
                                                                            'image/png'
                                                                          ]
                                                                        ]
                                                    },
                                       'max_line_size' => 10240
                                     }, 'Mojo::Headers' ),
                 'filename' => 'Screenshot_2013-05-22-23-01-58.png',
                 'name' => 'image'
               }, 'Mojo::Upload' );

[Fri May 24 20:11:08 2013] [debug] 200 OK (0.000713s, 1402.525/s).
[Fri May 24 20:12:41 2013] [debug] Your secret passphrase needs to be changed!!!
[Fri May 24 20:12:41 2013] [debug] GET "/0/0/0/leaf/testupload".
[Fri May 24 20:12:41 2013] [debug] Routing to controller "AnnoTree::Leaves::Leaf" and action "testImageUpload".
[Fri May 24 20:12:41 2013] [debug] Rendering template "leaves/leaf/testupload.html.ep".
[Fri May 24 20:12:41 2013] [debug] 200 OK (0.004368s, 228.938/s).
[Fri May 24 20:12:46 2013] [debug] POST "/0/0/0/leaf".
[Fri May 24 20:12:46 2013] [debug] Routing to controller "AnnoTree::Leaves::Leaf" and action "imagePost".
[Fri May 24 20:12:46 2013] [debug] REQUEST--------
 Dumper(AnnoTree::Leaves::Leaf=HASH(0x3cb2630)->req)
[Fri May 24 20:12:46 2013] [debug] $VAR1 = bless( {
                 'asset' => bless( {
                                     'path' => '/tmp/mojo.tmp',
                                     'handle' => bless( \*Symbol::GEN52, 'IO::File' ),
                                     'cleanup' => 1,
                                     'tmpdir' => '/tmp'
                                   }, 'Mojo::Asset::File' ),
                 'filename' => 'Screenshot_2013-05-22-23-01-58.png',
                 'headers' => bless( {
                                       'cache' => [],
                                       'state' => 'finished',
                                       'headers' => {
                                                      'content-type' => [
                                                                          [
                                                                            'image/png'
                                                                          ]
                                                                        ],
                                                      'content-disposition' => [
                                                                                 [
                                                                                   'form-data; name="image"; filename="Screenshot_2013-05-22-23-01-58.png"'
                                                                                 ]
                                                                               ]
                                                    },
                                       'max_line_size' => 10240
                                     }, 'Mojo::Headers' ),
                 'name' => 'image'
               }, 'Mojo::Upload' );

[Fri May 24 20:12:46 2013] [debug] 200 OK (0.001209s, 827.130/s).
[Fri May 24 20:13:32 2013] [debug] Your secret passphrase needs to be changed!!!
[Fri May 24 20:13:32 2013] [debug] GET "/0/0/0/leaf/testupload".
[Fri May 24 20:13:32 2013] [debug] Routing to controller "AnnoTree::Leaves::Leaf" and action "testImageUpload".
[Fri May 24 20:13:32 2013] [debug] Rendering template "leaves/leaf/testupload.html.ep".
[Fri May 24 20:13:32 2013] [debug] 200 OK (0.004181s, 239.177/s).
[Fri May 24 20:13:36 2013] [debug] POST "/0/0/0/leaf".
[Fri May 24 20:13:36 2013] [debug] Routing to controller "AnnoTree::Leaves::Leaf" and action "imagePost".
[Fri May 24 20:13:36 2013] [debug] $VAR1 = bless( {
                 'raw_size' => 1391678,
                 'state' => 'finished',
                 'cookies' => {},
                 'max_line_size' => 10240,
                 'max_message_size' => '5242880',
                 'events' => {},
                 'content' => bless( {
                                       'buffer' => '',
                                       'headers' => bless( {
                                                             'normalcase' => {
                                                                               'referer' => 'Referer'
                                                                             },
                                                             'state' => 'finished',
                                                             'cache' => [],
                                                             'max_line_size' => 10240,
                                                             'headers' => {
                                                                            'content-length' => [
                                                                                                  [
                                                                                                    '1391067'
                                                                                                  ]
                                                                                                ],
                                                                            'accept-encoding' => [
                                                                                                   [
                                                                                                     'gzip,deflate,sdch'
                                                                                                   ]
                                                                                                 ],
                                                                            'content-type' => [
                                                                                                [
                                                                                                  'multipart/form-data; boundary=----WebKitFormBoundaryyPQ53dfWnI3JwCI0'
                                                                                                ]
                                                                                              ],
                                                                            'cache-control' => [
                                                                                                 [
                                                                                                   'max-age=0'
                                                                                                 ]
                                                                                               ],
                                                                            'accept-language' => [
                                                                                                   [
                                                                                                     'en-US,en;q=0.8'
                                                                                                   ]
                                                                                                 ],
                                                                            'origin' => [
                                                                                          [
                                                                                            'http://127.0.0.1:3000'
                                                                                          ]
                                                                                        ],
                                                                            'connection' => [
                                                                                              [
                                                                                                'keep-alive'
                                                                                              ]
                                                                                            ],
                                                                            'referer' => [
                                                                                           [
                                                                                             'http://127.0.0.1:3000/0/0/0/leaf/testupload'
                                                                                           ]
                                                                                         ],
                                                                            'host' => [
                                                                                        [
                                                                                          '127.0.0.1:3000'
                                                                                        ]
                                                                                      ],
                                                                            'user-agent' => [
                                                                                              [
                                                                                                'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.63 Safari/537.31'
                                                                                              ]
                                                                                            ],
                                                                            'dnt' => [
                                                                                       [
                                                                                         '1'
                                                                                       ]
                                                                                     ],
                                                                            'accept' => [
                                                                                          [
                                                                                            'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8'
                                                                                          ]
                                                                                        ],
                                                                            'accept-charset' => [
                                                                                                  [
                                                                                                    'ISO-8859-1,utf-8;q=0.7,*;q=0.3'
                                                                                                  ]
                                                                                                ]
                                                                          }
                                                           }, 'Mojo::Headers' ),
                                       'header_size' => 584,
                                       'body' => 16,
                                       'events' => {
                                                     'read' => [
                                                                 sub { "DUMMY" }
                                                               ]
                                                   },
                                       'real_size' => 1391067,
                                       'pre_buffer' => '',
                                       'read' => sub { "DUMMY" },
                                       'parts' => [
                                                    bless( {
                                                             'auto_upgrade' => 1,
                                                             'raw_size' => 1390979,
                                                             'size' => 1390859,
                                                             'relaxed' => 1,
                                                             'read' => $VAR1->{'content'}{'read'},
                                                             'state' => 'body',
                                                             'pre_buffer' => '',
                                                             'header_size' => 120,
                                                             'buffer' => '',
                                                             'headers' => bless( {
                                                                                   'cache' => [],
                                                                                   'state' => 'finished',
                                                                                   'headers' => {
                                                                                                  'content-disposition' => [
                                                                                                                             [
                                                                                                                               'form-data; name="image"; filename="Screenshot_2013-05-22-23-01-58.png"'
                                                                                                                             ]
                                                                                                                           ],
                                                                                                  'content-type' => [
                                                                                                                      [
                                                                                                                        'image/png'
                                                                                                                      ]
                                                                                                                    ]
                                                                                                },
                                                                                   'max_line_size' => 10240
                                                                                 }, 'Mojo::Headers' ),
                                                             'asset' => bless( {
                                                                                 'path' => '/tmp/mojo.tmp',
                                                                                 'handle' => bless( \*Symbol::GEN52, 'IO::File' ),
                                                                                 'cleanup' => 1,
                                                                                 'tmpdir' => '/tmp'
                                                                               }, 'Mojo::Asset::File' ),
                                                             'real_size' => 1390859,
                                                             'events' => {
                                                                           'read' => [
                                                                                       $VAR1->{'content'}{'read'}
                                                                                     ]
                                                                         },
                                                             'body' => 16
                                                           }, 'Mojo::Content::Single' )
                                                  ],
                                       'multi_state' => 'finished',
                                       'multipart' => '
',
                                       'max_buffer_size' => 262144,
                                       'auto_upgrade' => 1,
                                       'state' => 'finished',
                                       'raw_size' => 1391651,
                                       'size' => 1391067
                                     }, 'Mojo::Content::MultiPart' ),
                 'method' => 'POST',
                 'version' => '1.1',
                 'finished' => 1,
                 'url' => bless( {
                                   'query' => bless( {
                                                       'string' => undef
                                                     }, 'Mojo::Parameters' ),
                                   'base' => bless( {
                                                      'port' => '3000',
                                                      'scheme' => 'http',
                                                      'host' => '127.0.0.1'
                                                    }, 'Mojo::URL' ),
                                   'fragment' => undef,
                                   'path' => bless( {
                                                      'path' => '/0/0/0/leaf',
                                                      'charset' => 'UTF-8'
                                                    }, 'Mojo::Path' ),
                                   'scheme' => undef
                                 }, 'Mojo::URL' )
               }, 'Mojo::Message::Request' );

[Fri May 24 20:13:36 2013] [debug] $VAR1 = bless( {
                 'name' => 'image',
                 'asset' => bless( {
                                     'path' => '/tmp/mojo.tmp',
                                     'handle' => bless( \*Symbol::GEN52, 'IO::File' ),
                                     'cleanup' => 1,
                                     'tmpdir' => '/tmp'
                                   }, 'Mojo::Asset::File' ),
                 'filename' => 'Screenshot_2013-05-22-23-01-58.png',
                 'headers' => bless( {
                                       'cache' => [],
                                       'state' => 'finished',
                                       'headers' => {
                                                      'content-disposition' => [
                                                                                 [
                                                                                   'form-data; name="image"; filename="Screenshot_2013-05-22-23-01-58.png"'
                                                                                 ]
                                                                               ],
                                                      'content-type' => [
                                                                          [
                                                                            'image/png'
                                                                          ]
                                                                        ]
                                                    },
                                       'max_line_size' => 10240
                                     }, 'Mojo::Headers' )
               }, 'Mojo::Upload' );

[Fri May 24 20:13:36 2013] [debug] 200 OK (0.002296s, 435.540/s).
[Sun May 26 01:50:58 2013] [debug] GET "/0/0/0/leaf".
[Sun May 26 01:50:58 2013] [debug] Routing to controller "AnnoTree::Leaves::Leaf" and action "list".
[Sun May 26 01:50:58 2013] [debug] Rendering template "leaves/leaf/list.json.ep".
[Sun May 26 01:50:58 2013] [debug] 200 OK (0.001752s, 570.776/s).
[Sun May 26 01:57:37 2013] [debug] GET "/0/0/branch".
[Sun May 26 01:57:37 2013] [debug] Routing to controller "AnnoTree::Branch" and action "list".
[Sun May 26 01:57:37 2013] [debug] Rendering template "branch/list.json.ep".
[Sun May 26 01:57:37 2013] [debug] 200 OK (0.002686s, 372.301/s).
[Sun May 26 02:14:15 2013] [debug] Your secret passphrase needs to be changed!!!
[Sun May 26 02:14:15 2013] [debug] GET "/0/0/0/leaf".
[Sun May 26 02:14:15 2013] [debug] Routing to controller "AnnoTree::Leaves::Leaf" and action "list".
[Sun May 26 02:14:15 2013] [debug] Rendering template "leaves/leaf/list.json.ep".
[Sun May 26 02:14:15 2013] [debug] 200 OK (0.003578s, 279.486/s).
[Sun May 26 02:14:21 2013] [debug] GET "/0/0/0/leaf/testupload".
[Sun May 26 02:14:21 2013] [debug] Routing to controller "AnnoTree::Leaves::Leaf" and action "testImageUpload".
[Sun May 26 02:14:21 2013] [debug] Rendering template "leaves/leaf/testupload.html.ep".
[Sun May 26 02:14:21 2013] [debug] 200 OK (0.002721s, 367.512/s).
[Sun May 26 02:14:26 2013] [debug] POST "/0/0/0/leaf".
[Sun May 26 02:14:26 2013] [debug] Routing to controller "AnnoTree::Leaves::Leaf" and action "imagePost".
[Sun May 26 02:14:26 2013] [debug] $VAR1 = bless( {
                 'raw_size' => 364459,
                 'cookies' => {},
                 'state' => 'finished',
                 'max_line_size' => 10240,
                 'max_message_size' => '5242880',
                 'events' => {},
                 'method' => 'POST',
                 'content' => bless( {
                                       'multi_state' => 'finished',
                                       'multipart' => '
',
                                       'max_buffer_size' => 262144,
                                       'auto_upgrade' => 1,
                                       'state' => 'finished',
                                       'size' => 363849,
                                       'raw_size' => 364432,
                                       'buffer' => '',
                                       'headers' => bless( {
                                                             'headers' => {
                                                                            'content-length' => [
                                                                                                  [
                                                                                                    '363849'
                                                                                                  ]
                                                                                                ],
                                                                            'accept-encoding' => [
                                                                                                   [
                                                                                                     'gzip,deflate,sdch'
                                                                                                   ]
                                                                                                 ],
                                                                            'content-type' => [
                                                                                                [
                                                                                                  'multipart/form-data; boundary=----WebKitFormBoundaryVh5gWYR4UAXO0G8v'
                                                                                                ]
                                                                                              ],
                                                                            'cache-control' => [
                                                                                                 [
                                                                                                   'max-age=0'
                                                                                                 ]
                                                                                               ],
                                                                            'accept-language' => [
                                                                                                   [
                                                                                                     'en-US,en;q=0.8'
                                                                                                   ]
                                                                                                 ],
                                                                            'origin' => [
                                                                                          [
                                                                                            'http://127.0.0.1:3000'
                                                                                          ]
                                                                                        ],
                                                                            'connection' => [
                                                                                              [
                                                                                                'keep-alive'
                                                                                              ]
                                                                                            ],
                                                                            'user-agent' => [
                                                                                              [
                                                                                                'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.63 Safari/537.31'
                                                                                              ]
                                                                                            ],
                                                                            'referer' => [
                                                                                           [
                                                                                             'http://127.0.0.1:3000/0/0/0/leaf/testupload'
                                                                                           ]
                                                                                         ],
                                                                            'host' => [
                                                                                        [
                                                                                          '127.0.0.1:3000'
                                                                                        ]
                                                                                      ],
                                                                            'dnt' => [
                                                                                       [
                                                                                         '1'
                                                                                       ]
                                                                                     ],
                                                                            'accept' => [
                                                                                          [
                                                                                            'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8'
                                                                                          ]
                                                                                        ],
                                                                            'accept-charset' => [
                                                                                                  [
                                                                                                    'ISO-8859-1,utf-8;q=0.7,*;q=0.3'
                                                                                                  ]
                                                                                                ]
                                                                          },
                                                             'max_line_size' => 10240,
                                                             'normalcase' => {
                                                                               'referer' => 'Referer'
                                                                             },
                                                             'state' => 'finished',
                                                             'cache' => []
                                                           }, 'Mojo::Headers' ),
                                       'header_size' => 583,
                                       'body' => 6,
                                       'events' => {
                                                     'read' => [
                                                                 sub { "DUMMY" }
                                                               ]
                                                   },
                                       'real_size' => 363849,
                                       'pre_buffer' => '',
                                       'read' => sub { "DUMMY" },
                                       'parts' => [
                                                    bless( {
                                                             'asset' => bless( {
                                                                                 'cleanup' => 1,
                                                                                 'tmpdir' => '/tmp',
                                                                                 'path' => '/tmp/mojo.tmp',
                                                                                 'handle' => bless( \*Symbol::GEN52, 'IO::File' )
                                                                               }, 'Mojo::Asset::File' ),
                                                             'buffer' => '',
                                                             'headers' => bless( {
                                                                                   'state' => 'finished',
                                                                                   'cache' => [],
                                                                                   'headers' => {
                                                                                                  'content-type' => [
                                                                                                                      [
                                                                                                                        'image/png'
                                                                                                                      ]
                                                                                                                    ],
                                                                                                  'content-disposition' => [
                                                                                                                             [
                                                                                                                               'form-data; name="screenshot"; filename="Screenshot_2013-05-22-23-02-15.png"'
                                                                                                                             ]
                                                                                                                           ]
                                                                                                },
                                                                                   'max_line_size' => 10240
                                                                                 }, 'Mojo::Headers' ),
                                                             'header_size' => 125,
                                                             'body' => 6,
                                                             'events' => {
                                                                           'read' => [
                                                                                       $VAR1->{'content'}{'read'}
                                                                                     ]
                                                                         },
                                                             'real_size' => 363636,
                                                             'auto_upgrade' => 1,
                                                             'state' => 'body',
                                                             'pre_buffer' => '',
                                                             'read' => $VAR1->{'content'}{'read'},
                                                             'size' => 363636,
                                                             'relaxed' => 1,
                                                             'raw_size' => 363761
                                                           }, 'Mojo::Content::Single' )
                                                  ]
                                     }, 'Mojo::Content::MultiPart' ),
                 'finished' => 1,
                 'url' => bless( {
                                   'scheme' => undef,
                                   'path' => bless( {
                                                      'path' => '/0/0/0/leaf',
                                                      'charset' => 'UTF-8'
                                                    }, 'Mojo::Path' ),
                                   'query' => bless( {
                                                       'string' => undef
                                                     }, 'Mojo::Parameters' ),
                                   'base' => bless( {
                                                      'host' => '127.0.0.1',
                                                      'scheme' => 'http',
                                                      'port' => '3000'
                                                    }, 'Mojo::URL' ),
                                   'fragment' => undef
                                 }, 'Mojo::URL' ),
                 'version' => '1.1'
               }, 'Mojo::Message::Request' );

[Sun May 26 02:14:26 2013] [debug] $VAR1 = bless( {
                 'name' => 'screenshot',
                 'headers' => bless( {
                                       'state' => 'finished',
                                       'cache' => [],
                                       'headers' => {
                                                      'content-type' => [
                                                                          [
                                                                            'image/png'
                                                                          ]
                                                                        ],
                                                      'content-disposition' => [
                                                                                 [
                                                                                   'form-data; name="screenshot"; filename="Screenshot_2013-05-22-23-02-15.png"'
                                                                                 ]
                                                                               ]
                                                    },
                                       'max_line_size' => 10240
                                     }, 'Mojo::Headers' ),
                 'filename' => 'Screenshot_2013-05-22-23-02-15.png',
                 'asset' => bless( {
                                     'cleanup' => 1,
                                     'tmpdir' => '/tmp',
                                     'path' => '/tmp/mojo.tmp',
                                     'handle' => bless( \*Symbol::GEN52, 'IO::File' )
                                   }, 'Mojo::Asset::File' )
               }, 'Mojo::Upload' );

[Sun May 26 02:14:26 2013] [debug] 200 OK (0.001985s, 503.778/s).
[Sun May 26 02:19:23 2013] [debug] GET "/0/0/0/leaf".
[Sun May 26 02:19:23 2013] [debug] Routing to controller "AnnoTree::Leaves::Leaf" and action "list".
[Sun May 26 02:19:23 2013] [debug] Rendering cached template "leaves/leaf/list.json.ep".
[Sun May 26 02:19:23 2013] [debug] 200 OK (0.000438s, 2283.105/s).
[Sun May 26 02:24:55 2013] [debug] Your secret passphrase needs to be changed!!!
[Sun May 26 02:24:55 2013] [debug] GET "/0/0/0/0/annotation".
[Sun May 26 02:24:55 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "list".
[Sun May 26 02:24:55 2013] [debug] 200 OK (0.000954s, 1048.218/s).
[Sun May 26 02:28:21 2013] [debug] Your secret passphrase needs to be changed!!!
[Sun May 26 02:28:21 2013] [debug] GET "/0/0/0/0/annotation".
[Sun May 26 02:28:21 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "list".
[Sun May 26 02:28:21 2013] [debug] 200 OK (0.000967s, 1034.126/s).
[Sun May 26 02:30:59 2013] [debug] Your secret passphrase needs to be changed!!!
[Sun May 26 02:30:59 2013] [debug] GET "/0/0/0/0/annotation/testupload".
[Sun May 26 02:30:59 2013] [debug] Routing to controller "AnnoTree::Leaves::Leaf" and action "testScreenshotUpload".
[Sun May 26 02:30:59 2013] [debug] Action not found in controller.
[Sun May 26 02:30:59 2013] [debug] Template "leaves/leaf/testScreenshotUpload.html.ep" not found.
[Sun May 26 02:30:59 2013] [debug] Template "not_found.development.html.ep" not found.
[Sun May 26 02:30:59 2013] [debug] Template "not_found.html.ep" not found.
[Sun May 26 02:30:59 2013] [debug] Rendering inline template.
[Sun May 26 02:30:59 2013] [debug] Rendering inline template.
[Sun May 26 02:30:59 2013] [debug] 404 Not Found (0.013040s, 76.687/s).
[Sun May 26 02:31:38 2013] [debug] Your secret passphrase needs to be changed!!!
[Sun May 26 02:31:38 2013] [debug] GET "/0/0/0/0/annotation/testupload".
[Sun May 26 02:31:38 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "testScreenshotUpload".
[Sun May 26 02:31:38 2013] [debug] Rendering template "leaves/annotation/testupload.html.ep".
[Sun May 26 02:31:38 2013] [debug] 200 OK (0.004587s, 218.007/s).
[Sun May 26 02:38:31 2013] [debug] Your secret passphrase needs to be changed!!!
[Sun May 26 02:38:31 2013] [debug] GET "/0/0/0/0/annotation/testupload".
[Sun May 26 02:38:31 2013] [error] Global symbol "$forestid" requires explicit package name at /home/matt/Documents/AnnoTree/WebServices/anno_tree/script/../lib/AnnoTree/Leaves/Annotation.pm line 23.
Global symbol "$forestid" requires explicit package name at /home/matt/Documents/AnnoTree/WebServices/anno_tree/script/../lib/AnnoTree/Leaves/Annotation.pm line 27.
Compilation failed in require at (eval 230) line 1.

[Sun May 26 02:38:31 2013] [debug] Template "exception.development.html.ep" not found.
[Sun May 26 02:38:31 2013] [debug] Template "exception.html.ep" not found.
[Sun May 26 02:38:31 2013] [debug] Rendering inline template.
[Sun May 26 02:38:31 2013] [debug] Rendering inline template.
[Sun May 26 02:38:31 2013] [debug] 500 Internal Server Error (0.017234s, 58.025/s).
[Sun May 26 02:38:56 2013] [debug] Your secret passphrase needs to be changed!!!
[Sun May 26 02:38:56 2013] [debug] GET "/0/0/0/0/annotation/testupload".
[Sun May 26 02:38:56 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "testScreenshotUpload".
[Sun May 26 02:38:56 2013] [debug] Rendering template "leaves/annotation/testupload.html.ep".
[Sun May 26 02:38:56 2013] [debug] 200 OK (0.004407s, 226.912/s).
[Sun May 26 02:39:06 2013] [debug] POST "/0/0/0/0/annotation".
[Sun May 26 02:39:06 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "annotationCreation".
[Sun May 26 02:39:06 2013] [debug] forestid: 0
[Sun May 26 02:39:06 2013] [error] Undefined subroutine &AnnoTree::Leaves::Annotation::Dumper called at /home/matt/perl5/perlbrew/perls/5.18_threads/lib/site_perl/5.18.0/Mojolicious/Routes.pm line 172.

[Sun May 26 02:39:06 2013] [debug] Template "exception.development.html.ep" not found.
[Sun May 26 02:39:06 2013] [debug] Template "exception.html.ep" not found.
[Sun May 26 02:39:06 2013] [debug] Rendering inline template.
[Sun May 26 02:39:06 2013] [debug] Rendering inline template.
[Sun May 26 02:39:06 2013] [debug] 500 Internal Server Error (0.015676s, 63.792/s).
[Sun May 26 02:39:24 2013] [debug] Your secret passphrase needs to be changed!!!
[Sun May 26 02:39:24 2013] [debug] POST "/0/0/0/0/annotation".
[Sun May 26 02:39:24 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "annotationCreation".
[Sun May 26 02:39:24 2013] [debug] forestid: 0
[Sun May 26 02:39:24 2013] [debug] $VAR1 = bless( {
                 'name' => 'screenshot',
                 'asset' => bless( {
                                     'path' => '/tmp/mojo.tmp',
                                     'handle' => bless( \*Symbol::GEN52, 'IO::File' ),
                                     'cleanup' => 1,
                                     'tmpdir' => '/tmp'
                                   }, 'Mojo::Asset::File' ),
                 'headers' => bless( {
                                       'headers' => {
                                                      'content-disposition' => [
                                                                                 [
                                                                                   'form-data; name="screenshot"; filename="Screenshot_2013-05-22-23-01-58.png"'
                                                                                 ]
                                                                               ],
                                                      'content-type' => [
                                                                          [
                                                                            'image/png'
                                                                          ]
                                                                        ]
                                                    },
                                       'max_line_size' => 10240,
                                       'state' => 'finished',
                                       'cache' => []
                                     }, 'Mojo::Headers' ),
                 'filename' => 'Screenshot_2013-05-22-23-01-58.png'
               }, 'Mojo::Upload' );

[Sun May 26 02:39:24 2013] [debug] 200 OK (0.001467s, 681.663/s).
[Sun May 26 02:44:04 2013] [debug] Your secret passphrase needs to be changed!!!
[Sun May 26 02:44:04 2013] [debug] GET "/0/0/0/0/annotation/testupload".
[Sun May 26 02:44:04 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "testScreenshotUpload".
[Sun May 26 02:44:04 2013] [debug] Rendering template "leaves/annotation/testupload.html.ep".
[Sun May 26 02:44:04 2013] [debug] 200 OK (0.004546s, 219.974/s).
[Sun May 26 02:44:09 2013] [debug] POST "/0/0/0/0/annotation".
[Sun May 26 02:44:09 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "annotationCreation".
[Sun May 26 02:44:09 2013] [debug] $VAR1 = bless( {
                 'headers' => bless( {
                                       'max_line_size' => 10240,
                                       'headers' => {
                                                      'content-disposition' => [
                                                                                 [
                                                                                   'form-data; name="screenshot"; filename="Screenshot_2013-05-22-23-01-58.png"'
                                                                                 ]
                                                                               ],
                                                      'content-type' => [
                                                                          [
                                                                            'image/png'
                                                                          ]
                                                                        ]
                                                    },
                                       'state' => 'finished',
                                       'cache' => []
                                     }, 'Mojo::Headers' ),
                 'filename' => 'Screenshot_2013-05-22-23-01-58.png',
                 'asset' => bless( {
                                     'tmpdir' => '/tmp',
                                     'cleanup' => 1,
                                     'handle' => bless( \*Symbol::GEN52, 'IO::File' ),
                                     'path' => '/tmp/mojo.tmp'
                                   }, 'Mojo::Asset::File' ),
                 'name' => 'screenshot'
               }, 'Mojo::Upload' );

[Sun May 26 02:44:09 2013] [error] Can't move file "/tmp/mojo.tmp" to "/opt/0/0/0/0/0_Screenshot_2013-05-22-23-01-58.png": No such file or directory at /home/matt/perl5/perlbrew/perls/5.18_threads/lib/site_perl/5.18.0/Mojo/Upload.pm line 13.

[Sun May 26 02:44:09 2013] [debug] Template "exception.development.html.ep" not found.
[Sun May 26 02:44:09 2013] [debug] Template "exception.html.ep" not found.
[Sun May 26 02:44:09 2013] [debug] Rendering inline template.
[Sun May 26 02:44:09 2013] [debug] Rendering inline template.
[Sun May 26 02:44:09 2013] [debug] 500 Internal Server Error (0.016400s, 60.976/s).
[Sun May 26 02:45:10 2013] [debug] Your secret passphrase needs to be changed!!!
[Sun May 26 02:45:10 2013] [debug] GET "/0/0/0/0/annotation/testupload".
[Sun May 26 02:45:10 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "testScreenshotUpload".
[Sun May 26 02:45:10 2013] [debug] Rendering template "leaves/annotation/testupload.html.ep".
[Sun May 26 02:45:10 2013] [debug] 200 OK (0.004494s, 222.519/s).
[Sun May 26 02:45:14 2013] [debug] POST "/0/0/0/0/annotation".
[Sun May 26 02:45:14 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "annotationCreation".
[Sun May 26 02:45:14 2013] [debug] $VAR1 = bless( {
                 'name' => 'screenshot',
                 'asset' => bless( {
                                     'tmpdir' => '/tmp',
                                     'cleanup' => 1,
                                     'handle' => bless( \*Symbol::GEN52, 'IO::File' ),
                                     'path' => '/tmp/mojo.tmp'
                                   }, 'Mojo::Asset::File' ),
                 'filename' => 'Screenshot_2013-05-22-23-11-37.png',
                 'headers' => bless( {
                                       'state' => 'finished',
                                       'cache' => [],
                                       'headers' => {
                                                      'content-disposition' => [
                                                                                 [
                                                                                   'form-data; name="screenshot"; filename="Screenshot_2013-05-22-23-11-37.png"'
                                                                                 ]
                                                                               ],
                                                      'content-type' => [
                                                                          [
                                                                            'image/png'
                                                                          ]
                                                                        ]
                                                    },
                                       'max_line_size' => 10240
                                     }, 'Mojo::Headers' )
               }, 'Mojo::Upload' );

[Sun May 26 02:45:14 2013] [debug] 200 OK (0.000745s, 1342.282/s).
[Sun May 26 02:45:24 2013] [debug] GET "/0/0/0/0/annotation/testupload".
[Sun May 26 02:45:24 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "testScreenshotUpload".
[Sun May 26 02:45:24 2013] [debug] Rendering cached template "leaves/annotation/testupload.html.ep".
[Sun May 26 02:45:24 2013] [debug] 200 OK (0.000807s, 1239.157/s).
[Sun May 26 02:45:29 2013] [debug] POST "/0/0/0/0/annotation".
[Sun May 26 02:45:29 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "annotationCreation".
[Sun May 26 02:45:29 2013] [debug] $VAR1 = bless( {
                 'name' => 'screenshot',
                 'asset' => bless( {
                                     'handle' => bless( \*Symbol::GEN53, 'IO::File' ),
                                     'path' => '/tmp/mojo.tmp',
                                     'tmpdir' => '/tmp',
                                     'cleanup' => 1
                                   }, 'Mojo::Asset::File' ),
                 'headers' => bless( {
                                       'headers' => {
                                                      'content-disposition' => [
                                                                                 [
                                                                                   'form-data; name="screenshot"; filename="Screenshot_2013-05-22-23-01-58.png"'
                                                                                 ]
                                                                               ],
                                                      'content-type' => [
                                                                          [
                                                                            'image/png'
                                                                          ]
                                                                        ]
                                                    },
                                       'max_line_size' => 10240,
                                       'state' => 'finished',
                                       'cache' => []
                                     }, 'Mojo::Headers' ),
                 'filename' => 'Screenshot_2013-05-22-23-01-58.png'
               }, 'Mojo::Upload' );

[Sun May 26 02:45:29 2013] [debug] 200 OK (0.000470s, 2127.660/s).
[Sun May 26 02:45:43 2013] [debug] GET "/0/0/0/0/annotation/testupload".
[Sun May 26 02:45:43 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "testScreenshotUpload".
[Sun May 26 02:45:43 2013] [debug] Rendering cached template "leaves/annotation/testupload.html.ep".
[Sun May 26 02:45:43 2013] [debug] 200 OK (0.000820s, 1219.512/s).
[Sun May 26 02:57:16 2013] [debug] Your secret passphrase needs to be changed!!!
[Sun May 26 02:57:16 2013] [debug] POST "/0/0/0/0/annotation".
[Sun May 26 02:57:16 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "annotationCreation".
[Sun May 26 02:57:16 2013] [debug] $VAR1 = '..';

$VAR2 = '.';

[Sun May 26 02:57:16 2013] [debug] $VAR1 = bless( {
                 'headers' => bless( {
                                       'cache' => [],
                                       'state' => 'finished',
                                       'headers' => {
                                                      'content-disposition' => [
                                                                                 [
                                                                                   'form-data; name="screenshot"; filename="Screenshot_2013-05-22-23-02-15.png"'
                                                                                 ]
                                                                               ],
                                                      'content-type' => [
                                                                          [
                                                                            'image/png'
                                                                          ]
                                                                        ]
                                                    },
                                       'max_line_size' => 10240
                                     }, 'Mojo::Headers' ),
                 'filename' => 'Screenshot_2013-05-22-23-02-15.png',
                 'asset' => bless( {
                                     'path' => '/tmp/mojo.tmp',
                                     'handle' => bless( \*Symbol::GEN52, 'IO::File' ),
                                     'cleanup' => 1,
                                     'tmpdir' => '/tmp'
                                   }, 'Mojo::Asset::File' ),
                 'name' => 'screenshot'
               }, 'Mojo::Upload' );

[Sun May 26 02:57:16 2013] [debug] 200 OK (0.001406s, 711.238/s).
[Sun May 26 02:57:43 2013] [debug] GET "/0/0/0/0/annotation/testupload".
[Sun May 26 02:57:43 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "testScreenshotUpload".
[Sun May 26 02:57:43 2013] [debug] Rendering template "leaves/annotation/testupload.html.ep".
[Sun May 26 02:57:43 2013] [debug] 200 OK (0.003894s, 256.805/s).
[Sun May 26 02:57:48 2013] [debug] POST "/0/0/0/0/annotation".
[Sun May 26 02:57:48 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "annotationCreation".
[Sun May 26 02:57:48 2013] [debug] $VAR1 = '0_Screenshot_2013-05-22-23-02-15.png';

$VAR2 = '..';

$VAR3 = '.';

[Sun May 26 02:57:48 2013] [debug] $VAR1 = bless( {
                 'name' => 'screenshot',
                 'asset' => bless( {
                                     'tmpdir' => '/tmp',
                                     'cleanup' => 1,
                                     'handle' => bless( \*Symbol::GEN103, 'IO::File' ),
                                     'path' => '/tmp/mojo.tmp'
                                   }, 'Mojo::Asset::File' ),
                 'filename' => 'Screenshot_2013-05-22-23-02-15.png',
                 'headers' => bless( {
                                       'headers' => {
                                                      'content-type' => [
                                                                          [
                                                                            'image/png'
                                                                          ]
                                                                        ],
                                                      'content-disposition' => [
                                                                                 [
                                                                                   'form-data; name="screenshot"; filename="Screenshot_2013-05-22-23-02-15.png"'
                                                                                 ]
                                                                               ]
                                                    },
                                       'max_line_size' => 10240,
                                       'cache' => [],
                                       'state' => 'finished'
                                     }, 'Mojo::Headers' )
               }, 'Mojo::Upload' );

[Sun May 26 02:57:48 2013] [debug] 200 OK (0.000643s, 1555.210/s).
[Sun May 26 02:58:02 2013] [debug] GET "/0/0/0/0/annotation/testupload".
[Sun May 26 02:58:02 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "testScreenshotUpload".
[Sun May 26 02:58:02 2013] [debug] Rendering cached template "leaves/annotation/testupload.html.ep".
[Sun May 26 02:58:02 2013] [debug] 200 OK (0.000788s, 1269.036/s).
[Sun May 26 02:58:08 2013] [debug] POST "/0/0/0/0/annotation".
[Sun May 26 02:58:08 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "annotationCreation".
[Sun May 26 02:58:08 2013] [debug] $VAR1 = '0_Screenshot_2013-05-22-23-02-15.png';

$VAR2 = '..';

$VAR3 = '.';

[Sun May 26 02:58:08 2013] [debug] $VAR1 = bless( {
                 'headers' => bless( {
                                       'state' => 'finished',
                                       'cache' => [],
                                       'max_line_size' => 10240,
                                       'headers' => {
                                                      'content-disposition' => [
                                                                                 [
                                                                                   'form-data; name="screenshot"; filename="Screenshot_2013-05-22-23-11-37.png"'
                                                                                 ]
                                                                               ],
                                                      'content-type' => [
                                                                          [
                                                                            'image/png'
                                                                          ]
                                                                        ]
                                                    }
                                     }, 'Mojo::Headers' ),
                 'filename' => 'Screenshot_2013-05-22-23-11-37.png',
                 'asset' => bless( {
                                     'cleanup' => 1,
                                     'tmpdir' => '/tmp',
                                     'path' => '/tmp/mojo.tmp',
                                     'handle' => bless( \*Symbol::GEN104, 'IO::File' )
                                   }, 'Mojo::Asset::File' ),
                 'name' => 'screenshot'
               }, 'Mojo::Upload' );

[Sun May 26 02:58:08 2013] [debug] 200 OK (0.000517s, 1934.236/s).
[Sun May 26 02:58:35 2013] [debug] GET "/0/0/0/0/annotation/testupload".
[Sun May 26 02:58:35 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "testScreenshotUpload".
[Sun May 26 02:58:35 2013] [debug] Rendering cached template "leaves/annotation/testupload.html.ep".
[Sun May 26 02:58:35 2013] [debug] 200 OK (0.001108s, 902.527/s).
[Sun May 26 02:58:45 2013] [debug] POST "/0/0/0/0/annotation".
[Sun May 26 02:58:45 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "annotationCreation".
[Sun May 26 02:58:45 2013] [debug] $VAR1 = '1_Screenshot_2013-05-22-23-11-37.png';

$VAR2 = '0_Screenshot_2013-05-22-23-02-15.png';

$VAR3 = '..';

$VAR4 = '.';

[Sun May 26 02:58:45 2013] [debug] $VAR1 = bless( {
                 'name' => 'screenshot',
                 'asset' => bless( {
                                     'path' => '/tmp/mojo.tmp',
                                     'handle' => bless( \*Symbol::GEN155, 'IO::File' ),
                                     'cleanup' => 1,
                                     'tmpdir' => '/tmp'
                                   }, 'Mojo::Asset::File' ),
                 'filename' => 'Screenshot_2013-05-22-23-01-58.png',
                 'headers' => bless( {
                                       'cache' => [],
                                       'state' => 'finished',
                                       'headers' => {
                                                      'content-disposition' => [
                                                                                 [
                                                                                   'form-data; name="screenshot"; filename="Screenshot_2013-05-22-23-01-58.png"'
                                                                                 ]
                                                                               ],
                                                      'content-type' => [
                                                                          [
                                                                            'image/png'
                                                                          ]
                                                                        ]
                                                    },
                                       'max_line_size' => 10240
                                     }, 'Mojo::Headers' )
               }, 'Mojo::Upload' );

[Sun May 26 02:58:45 2013] [debug] 200 OK (0.000537s, 1862.197/s).
[Sun May 26 03:00:54 2013] [debug] Your secret passphrase needs to be changed!!!
[Sun May 26 03:00:54 2013] [debug] GET "/0/0/0/0/annotation/tst".
[Sun May 26 03:00:54 2013] [debug] Template "not_found.development.html.ep" not found.
[Sun May 26 03:00:54 2013] [debug] Template "not_found.html.ep" not found.
[Sun May 26 03:00:54 2013] [debug] Rendering inline template.
[Sun May 26 03:00:54 2013] [debug] Rendering inline template.
[Sun May 26 03:00:54 2013] [debug] 404 Not Found (0.011978s, 83.486/s).
[Sun May 26 03:00:57 2013] [debug] GET "/0/0/0/0/annotation/testupload".
[Sun May 26 03:00:57 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "testScreenshotUpload".
[Sun May 26 03:00:57 2013] [debug] Rendering template "leaves/annotation/testupload.html.ep".
[Sun May 26 03:00:57 2013] [debug] 200 OK (0.003016s, 331.565/s).
[Sun May 26 03:01:03 2013] [debug] POST "/0/0/0/0/annotation".
[Sun May 26 03:01:03 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "annotationCreation".
[Sun May 26 03:01:03 2013] [debug] $VAR1 = '1_Screenshot_2013-05-22-23-11-37.png';

$VAR2 = '0_Screenshot_2013-05-22-23-02-15.png';

$VAR3 = '..';

$VAR4 = '.';

[Sun May 26 03:01:03 2013] [debug] $VAR1 = bless( {
                 'name' => 'screenshot',
                 'asset' => bless( {
                                     'path' => '/tmp/mojo.tmp',
                                     'handle' => bless( \*Symbol::GEN52, 'IO::File' ),
                                     'cleanup' => 1,
                                     'tmpdir' => '/tmp'
                                   }, 'Mojo::Asset::File' ),
                 'headers' => bless( {
                                       'state' => 'finished',
                                       'cache' => [],
                                       'headers' => {
                                                      'content-disposition' => [
                                                                                 [
                                                                                   'form-data; name="screenshot"; filename="Screenshot_2013-05-22-23-02-15.png"'
                                                                                 ]
                                                                               ],
                                                      'content-type' => [
                                                                          [
                                                                            'image/png'
                                                                          ]
                                                                        ]
                                                    },
                                       'max_line_size' => 10240
                                     }, 'Mojo::Headers' ),
                 'filename' => 'Screenshot_2013-05-22-23-02-15.png'
               }, 'Mojo::Upload' );

[Sun May 26 03:01:03 2013] [debug] 200 OK (0.000765s, 1307.190/s).
[Sun May 26 03:01:19 2013] [debug] GET "/0/0/0/0/annotation/testupload".
[Sun May 26 03:01:19 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "testScreenshotUpload".
[Sun May 26 03:01:19 2013] [debug] Rendering cached template "leaves/annotation/testupload.html.ep".
[Sun May 26 03:01:19 2013] [debug] 200 OK (0.000840s, 1190.476/s).
[Sun May 26 03:01:24 2013] [debug] POST "/0/0/0/0/annotation".
[Sun May 26 03:01:24 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "annotationCreation".
[Sun May 26 03:01:24 2013] [debug] $VAR1 = '1_Screenshot_2013-05-22-23-11-37.png';

$VAR2 = '1_Screenshot_2013-05-22-23-02-15.png';

$VAR3 = '0_Screenshot_2013-05-22-23-02-15.png';

$VAR4 = '..';

$VAR5 = '.';

[Sun May 26 03:01:24 2013] [debug] $VAR1 = bless( {
                 'name' => 'screenshot',
                 'filename' => 'Screenshot_2013-05-22-23-02-15.png',
                 'headers' => bless( {
                                       'headers' => {
                                                      'content-disposition' => [
                                                                                 [
                                                                                   'form-data; name="screenshot"; filename="Screenshot_2013-05-22-23-02-15.png"'
                                                                                 ]
                                                                               ],
                                                      'content-type' => [
                                                                          [
                                                                            'image/png'
                                                                          ]
                                                                        ]
                                                    },
                                       'max_line_size' => 10240,
                                       'state' => 'finished',
                                       'cache' => []
                                     }, 'Mojo::Headers' ),
                 'asset' => bless( {
                                     'handle' => bless( \*Symbol::GEN103, 'IO::File' ),
                                     'path' => '/tmp/mojo.tmp',
                                     'tmpdir' => '/tmp',
                                     'cleanup' => 1
                                   }, 'Mojo::Asset::File' )
               }, 'Mojo::Upload' );

[Sun May 26 03:01:24 2013] [debug] 200 OK (0.000689s, 1451.379/s).
[Sun May 26 03:02:55 2013] [debug] Your secret passphrase needs to be changed!!!
[Sun May 26 03:02:55 2013] [debug] GET "/0/0/0/0/annotation/testupload".
[Sun May 26 03:02:56 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "testScreenshotUpload".
[Sun May 26 03:02:56 2013] [debug] Rendering template "leaves/annotation/testupload.html.ep".
[Sun May 26 03:02:56 2013] [debug] 200 OK (0.004523s, 221.092/s).
[Sun May 26 03:03:00 2013] [debug] POST "/0/0/0/0/annotation".
[Sun May 26 03:03:00 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "annotationCreation".
[Sun May 26 03:03:00 2013] [debug] $VAR1 = '1_Screenshot_2013-05-22-23-11-37.png';

$VAR2 = '0_Screenshot_2013-05-22-23-02-15.png';

$VAR3 = '..';

$VAR4 = '.';

[Sun May 26 03:03:00 2013] [debug] $VAR1 = bless( {
                 'asset' => bless( {
                                     'cleanup' => 1,
                                     'tmpdir' => '/tmp',
                                     'path' => '/tmp/mojo.tmp',
                                     'handle' => bless( \*Symbol::GEN52, 'IO::File' )
                                   }, 'Mojo::Asset::File' ),
                 'headers' => bless( {
                                       'headers' => {
                                                      'content-type' => [
                                                                          [
                                                                            'image/png'
                                                                          ]
                                                                        ],
                                                      'content-disposition' => [
                                                                                 [
                                                                                   'form-data; name="screenshot"; filename="Screenshot_2013-05-22-23-02-15.png"'
                                                                                 ]
                                                                               ]
                                                    },
                                       'max_line_size' => 10240,
                                       'state' => 'finished',
                                       'cache' => []
                                     }, 'Mojo::Headers' ),
                 'filename' => 'Screenshot_2013-05-22-23-02-15.png',
                 'name' => 'screenshot'
               }, 'Mojo::Upload' );

[Sun May 26 03:03:00 2013] [debug] 200 OK (0.000802s, 1246.883/s).
[Sun May 26 03:03:08 2013] [debug] GET "/0/0/0/0/annotation/testupload".
[Sun May 26 03:03:08 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "testScreenshotUpload".
[Sun May 26 03:03:08 2013] [debug] Rendering cached template "leaves/annotation/testupload.html.ep".
[Sun May 26 03:03:08 2013] [debug] 200 OK (0.000791s, 1264.223/s).
[Sun May 26 03:03:13 2013] [debug] POST "/0/0/0/0/annotation".
[Sun May 26 03:03:13 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "annotationCreation".
[Sun May 26 03:03:13 2013] [debug] $VAR1 = '2_Screenshot_2013-05-22-23-02-15.png';

$VAR2 = '1_Screenshot_2013-05-22-23-11-37.png';

$VAR3 = '0_Screenshot_2013-05-22-23-02-15.png';

$VAR4 = '..';

$VAR5 = '.';

[Sun May 26 03:03:13 2013] [debug] $VAR1 = bless( {
                 'filename' => 'Screenshot_2013-05-22-23-11-37.png',
                 'headers' => bless( {
                                       'headers' => {
                                                      'content-disposition' => [
                                                                                 [
                                                                                   'form-data; name="screenshot"; filename="Screenshot_2013-05-22-23-11-37.png"'
                                                                                 ]
                                                                               ],
                                                      'content-type' => [
                                                                          [
                                                                            'image/png'
                                                                          ]
                                                                        ]
                                                    },
                                       'max_line_size' => 10240,
                                       'state' => 'finished',
                                       'cache' => []
                                     }, 'Mojo::Headers' ),
                 'asset' => bless( {
                                     'handle' => bless( \*Symbol::GEN53, 'IO::File' ),
                                     'path' => '/tmp/mojo.tmp',
                                     'tmpdir' => '/tmp',
                                     'cleanup' => 1
                                   }, 'Mojo::Asset::File' ),
                 'name' => 'screenshot'
               }, 'Mojo::Upload' );

[Sun May 26 03:03:13 2013] [debug] 200 OK (0.000524s, 1908.397/s).
[Sun May 26 03:04:03 2013] [debug] Your secret passphrase needs to be changed!!!
[Sun May 26 03:04:03 2013] [debug] GET "/0/0/0/1/annotation/testupload".
[Sun May 26 03:04:03 2013] [error] syntax error at /home/matt/Documents/AnnoTree/WebServices/anno_tree/script/../lib/AnnoTree/Leaves/Annotation.pm line 40, near "= if"
Compilation failed in require at (eval 230) line 1.

[Sun May 26 03:04:03 2013] [debug] Template "exception.development.html.ep" not found.
[Sun May 26 03:04:03 2013] [debug] Template "exception.html.ep" not found.
[Sun May 26 03:04:03 2013] [debug] Rendering inline template.
[Sun May 26 03:04:03 2013] [debug] Rendering inline template.
[Sun May 26 03:04:03 2013] [debug] 500 Internal Server Error (0.017081s, 58.545/s).
[Sun May 26 03:04:29 2013] [debug] Your secret passphrase needs to be changed!!!
[Sun May 26 03:04:29 2013] [debug] GET "/0/0/0/1/annotation/testupload".
[Sun May 26 03:04:29 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "testScreenshotUpload".
[Sun May 26 03:04:29 2013] [debug] Rendering template "leaves/annotation/testupload.html.ep".
[Sun May 26 03:04:29 2013] [debug] 200 OK (0.004412s, 226.655/s).
[Sun May 26 03:04:35 2013] [debug] POST "/0/0/0/0/annotation".
[Sun May 26 03:04:35 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "annotationCreation".
[Sun May 26 03:04:35 2013] [debug] $VAR1 = '3_Screenshot_2013-05-22-23-11-37.png';

$VAR2 = '2_Screenshot_2013-05-22-23-02-15.png';

$VAR3 = '1_Screenshot_2013-05-22-23-11-37.png';

$VAR4 = '0_Screenshot_2013-05-22-23-02-15.png';

$VAR5 = '..';

$VAR6 = '.';

[Sun May 26 03:04:35 2013] [debug] $VAR1 = bless( {
                 'filename' => 'Screenshot_2013-05-22-23-02-15.png',
                 'headers' => bless( {
                                       'max_line_size' => 10240,
                                       'headers' => {
                                                      'content-type' => [
                                                                          [
                                                                            'image/png'
                                                                          ]
                                                                        ],
                                                      'content-disposition' => [
                                                                                 [
                                                                                   'form-data; name="screenshot"; filename="Screenshot_2013-05-22-23-02-15.png"'
                                                                                 ]
                                                                               ]
                                                    },
                                       'cache' => [],
                                       'state' => 'finished'
                                     }, 'Mojo::Headers' ),
                 'asset' => bless( {
                                     'handle' => bless( \*Symbol::GEN52, 'IO::File' ),
                                     'path' => '/tmp/mojo.tmp',
                                     'tmpdir' => '/tmp',
                                     'cleanup' => 1
                                   }, 'Mojo::Asset::File' ),
                 'name' => 'screenshot'
               }, 'Mojo::Upload' );

[Sun May 26 03:04:35 2013] [debug] 200 OK (0.001143s, 874.891/s).
[Sun May 26 03:06:53 2013] [debug] Your secret passphrase needs to be changed!!!
[Sun May 26 03:06:53 2013] [debug] GET "/0/0/0/0/annotation/testupload".
[Sun May 26 03:06:53 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "testScreenshotUpload".
[Sun May 26 03:06:53 2013] [debug] Rendering template "leaves/annotation/testupload.html.ep".
[Sun May 26 03:06:53 2013] [error] Global symbol "$uploadPath" requires explicit package name at template leaves/annotation/testupload.html.ep line 5.
1: <!DOCTYPE html>
2: <html>
3:     <head><title>Upload</title></head>
4:     <body>
5:         %= form_for $uploadPath => (enctype => 'multipart/form-data') => (method => 'POST')=> begin
6:         %= file_field 'screenshot'
7:         %= submit_button 'Upload'
8:     % end
9:     </body>
10: </html>

[Sun May 26 03:06:53 2013] [debug] Template "exception.development.html.ep" not found.
[Sun May 26 03:06:53 2013] [debug] Template "exception.html.ep" not found.
[Sun May 26 03:06:53 2013] [debug] Rendering inline template.
[Sun May 26 03:06:53 2013] [debug] Rendering inline template.
[Sun May 26 03:06:53 2013] [debug] 500 Internal Server Error (0.019411s, 51.517/s).
[Sun May 26 03:10:18 2013] [debug] Your secret passphrase needs to be changed!!!
[Sun May 26 03:10:18 2013] [debug] GET "/0/0/0/0/annotation/testupload".
[Sun May 26 03:10:18 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "testScreenshotUpload".
[Sun May 26 03:10:18 2013] [debug] Rendering template "leaves/annotation/testupload.html.ep".
[Sun May 26 03:10:18 2013] [error] Global symbol "$uploadPath" requires explicit package name at template leaves/annotation/testupload.html.ep line 5.
1: <!DOCTYPE html>
2: <html>
3:     <head><title>Upload</title></head>
4:     <body>
5:         %= form_for "$uploadPath" => (enctype => 'multipart/form-data') => (method => 'POST')=> begin
6:         %= file_field 'screenshot'
7:         %= submit_button 'Upload'
8:     % end
9:     </body>
10: </html>

[Sun May 26 03:10:18 2013] [debug] Template "exception.development.html.ep" not found.
[Sun May 26 03:10:18 2013] [debug] Template "exception.html.ep" not found.
[Sun May 26 03:10:18 2013] [debug] Rendering inline template.
[Sun May 26 03:10:18 2013] [debug] Rendering inline template.
[Sun May 26 03:10:18 2013] [debug] 500 Internal Server Error (0.018875s, 52.980/s).
[Sun May 26 03:11:34 2013] [debug] Your secret passphrase needs to be changed!!!
[Sun May 26 03:11:34 2013] [debug] GET "/0/0/0/1/annotation/testupload".
[Sun May 26 03:11:34 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "testScreenshotUpload".
[Sun May 26 03:11:34 2013] [debug] Rendering template "leaves/annotation/testupload.html.ep".
[Sun May 26 03:11:34 2013] [error] Global symbol "$uploadPath" requires explicit package name at template leaves/annotation/testupload.html.ep line 5.
1: <!DOCTYPE html>
2: <html>
3:     <head><title>Upload</title></head>
4:     <body>
5:         %= form_for "$uploadPath" => (enctype => 'multipart/form-data') => (method => 'POST')=> begin
6:         %= file_field 'screenshot'
7:         %= submit_button 'Upload'
8:     % end
9:     </body>
10: </html>

[Sun May 26 03:11:34 2013] [debug] Template "exception.development.html.ep" not found.
[Sun May 26 03:11:34 2013] [debug] Template "exception.html.ep" not found.
[Sun May 26 03:11:34 2013] [debug] Rendering inline template.
[Sun May 26 03:11:34 2013] [debug] Rendering inline template.
[Sun May 26 03:11:34 2013] [debug] 500 Internal Server Error (0.019074s, 52.427/s).
[Sun May 26 03:12:17 2013] [debug] Your secret passphrase needs to be changed!!!
[Sun May 26 03:12:17 2013] [debug] GET "/0/0/0/1/annotation/testupload".
[Sun May 26 03:12:17 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "testScreenshotUpload".
[Sun May 26 03:12:17 2013] [debug] Rendering template "leaves/annotation/testupload.html.ep".
[Sun May 26 03:12:17 2013] [debug] 200 OK (0.004490s, 222.717/s).
[Sun May 26 03:12:21 2013] [debug] POST "/0/0/0/1/annotation".
[Sun May 26 03:12:21 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "annotationCreation".
[Sun May 26 03:12:21 2013] [debug] $VAR1 = '..';

$VAR2 = '.';

[Sun May 26 03:12:21 2013] [debug] $VAR1 = bless( {
                 'name' => 'screenshot',
                 'filename' => 'Screenshot_2013-05-22-23-02-15.png',
                 'headers' => bless( {
                                       'max_line_size' => 10240,
                                       'headers' => {
                                                      'content-type' => [
                                                                          [
                                                                            'image/png'
                                                                          ]
                                                                        ],
                                                      'content-disposition' => [
                                                                                 [
                                                                                   'form-data; name="screenshot"; filename="Screenshot_2013-05-22-23-02-15.png"'
                                                                                 ]
                                                                               ]
                                                    },
                                       'cache' => [],
                                       'state' => 'finished'
                                     }, 'Mojo::Headers' ),
                 'asset' => bless( {
                                     'cleanup' => 1,
                                     'tmpdir' => '/tmp',
                                     'path' => '/tmp/mojo.tmp',
                                     'handle' => bless( \*Symbol::GEN52, 'IO::File' )
                                   }, 'Mojo::Asset::File' )
               }, 'Mojo::Upload' );

[Sun May 26 03:12:21 2013] [debug] 200 OK (0.000809s, 1236.094/s).
[Sun May 26 03:12:42 2013] [debug] GET "/0/0/0/1/annotation/testupload".
[Sun May 26 03:12:42 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "testScreenshotUpload".
[Sun May 26 03:12:42 2013] [debug] Rendering cached template "leaves/annotation/testupload.html.ep".
[Sun May 26 03:12:42 2013] [debug] 200 OK (0.000815s, 1226.994/s).
[Sun May 26 03:12:47 2013] [debug] POST "/0/0/0/1/annotation".
[Sun May 26 03:12:47 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "annotationCreation".
[Sun May 26 03:12:47 2013] [debug] $VAR1 = '1_Screenshot_2013-05-22-23-02-15.png';

$VAR2 = '..';

$VAR3 = '.';

[Sun May 26 03:12:47 2013] [debug] $VAR1 = bless( {
                 'asset' => bless( {
                                     'tmpdir' => '/tmp',
                                     'cleanup' => 1,
                                     'handle' => bless( \*Symbol::GEN103, 'IO::File' ),
                                     'path' => '/tmp/mojo.tmp'
                                   }, 'Mojo::Asset::File' ),
                 'headers' => bless( {
                                       'state' => 'finished',
                                       'cache' => [],
                                       'headers' => {
                                                      'content-disposition' => [
                                                                                 [
                                                                                   'form-data; name="screenshot"; filename="Screenshot_2013-05-22-23-01-58.png"'
                                                                                 ]
                                                                               ],
                                                      'content-type' => [
                                                                          [
                                                                            'image/png'
                                                                          ]
                                                                        ]
                                                    },
                                       'max_line_size' => 10240
                                     }, 'Mojo::Headers' ),
                 'filename' => 'Screenshot_2013-05-22-23-01-58.png',
                 'name' => 'screenshot'
               }, 'Mojo::Upload' );

[Sun May 26 03:12:47 2013] [debug] 200 OK (0.000537s, 1862.197/s).
[Sun May 26 03:20:40 2013] [debug] Your secret passphrase needs to be changed!!!
[Sun May 26 03:20:40 2013] [debug] GET "/0/0/0/1/annotation/testupload".
[Sun May 26 03:20:40 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "testScreenshotUpload".
[Sun May 26 03:20:40 2013] [debug] Rendering template "leaves/annotation/testupload.html.ep".
[Sun May 26 03:20:40 2013] [debug] 200 OK (0.004603s, 217.250/s).
[Sun May 26 03:20:44 2013] [debug] POST "/0/0/0/1/annotation".
[Sun May 26 03:20:44 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "annotationCreation".
[Sun May 26 03:20:44 2013] [debug] could not open
[Sun May 26 03:20:44 2013] [debug] 
[Sun May 26 03:20:44 2013] [debug] $VAR1 = bless( {
                 'name' => 'screenshot',
                 'headers' => bless( {
                                       'headers' => {
                                                      'content-disposition' => [
                                                                                 [
                                                                                   'form-data; name="screenshot"; filename="Screenshot_2013-05-22-23-02-15.png"'
                                                                                 ]
                                                                               ],
                                                      'content-type' => [
                                                                          [
                                                                            'image/png'
                                                                          ]
                                                                        ]
                                                    },
                                       'max_line_size' => 10240,
                                       'state' => 'finished',
                                       'cache' => []
                                     }, 'Mojo::Headers' ),
                 'filename' => 'Screenshot_2013-05-22-23-02-15.png',
                 'asset' => bless( {
                                     'tmpdir' => '/tmp',
                                     'cleanup' => 1,
                                     'handle' => bless( \*Symbol::GEN52, 'IO::File' ),
                                     'path' => '/tmp/mojo.tmp'
                                   }, 'Mojo::Asset::File' )
               }, 'Mojo::Upload' );

[Sun May 26 03:20:44 2013] [error] Can't move file "/tmp/mojo.tmp" to "/home/matt/Documents/AnnoTree/WebServices/anno_tree/public/img//annotations/0/0/0/1/0_Screenshot_2013-05-22-23-02-15.png": No such file or directory at /home/matt/perl5/perlbrew/perls/5.18_threads/lib/site_perl/5.18.0/Mojo/Upload.pm line 13.

[Sun May 26 03:20:44 2013] [debug] Template "exception.development.html.ep" not found.
[Sun May 26 03:20:44 2013] [debug] Template "exception.html.ep" not found.
[Sun May 26 03:20:44 2013] [debug] Rendering inline template.
[Sun May 26 03:20:44 2013] [debug] Rendering inline template.
[Sun May 26 03:20:44 2013] [debug] 500 Internal Server Error (0.015803s, 63.279/s).
[Sun May 26 03:21:10 2013] [debug] Your secret passphrase needs to be changed!!!
[Sun May 26 03:21:10 2013] [debug] GET "/0/0/0/1/annotation/testupload".
[Sun May 26 03:21:10 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "testScreenshotUpload".
[Sun May 26 03:21:10 2013] [debug] Rendering template "leaves/annotation/testupload.html.ep".
[Sun May 26 03:21:10 2013] [debug] 200 OK (0.004564s, 219.106/s).
[Sun May 26 03:21:14 2013] [debug] POST "/0/0/0/1/annotation".
[Sun May 26 03:21:14 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "annotationCreation".
[Sun May 26 03:21:14 2013] [debug] could not open
[Sun May 26 03:21:14 2013] [debug] 
[Sun May 26 03:21:14 2013] [debug] $VAR1 = bless( {
                 'name' => 'screenshot',
                 'filename' => 'Screenshot_2013-05-22-23-02-15.png',
                 'headers' => bless( {
                                       'headers' => {
                                                      'content-disposition' => [
                                                                                 [
                                                                                   'form-data; name="screenshot"; filename="Screenshot_2013-05-22-23-02-15.png"'
                                                                                 ]
                                                                               ],
                                                      'content-type' => [
                                                                          [
                                                                            'image/png'
                                                                          ]
                                                                        ]
                                                    },
                                       'max_line_size' => 10240,
                                       'state' => 'finished',
                                       'cache' => []
                                     }, 'Mojo::Headers' ),
                 'asset' => bless( {
                                     'cleanup' => 1,
                                     'tmpdir' => '/tmp',
                                     'path' => '/tmp/mojo.tmp',
                                     'handle' => bless( \*Symbol::GEN52, 'IO::File' )
                                   }, 'Mojo::Asset::File' )
               }, 'Mojo::Upload' );

[Sun May 26 03:21:14 2013] [error] Can't move file "/tmp/mojo.tmp" to "/home/matt/Documents/AnnoTree/WebServices/anno_tree/public/img/annotations/0/0/0/1/0_Screenshot_2013-05-22-23-02-15.png": No such file or directory at /home/matt/perl5/perlbrew/perls/5.18_threads/lib/site_perl/5.18.0/Mojo/Upload.pm line 13.

[Sun May 26 03:21:14 2013] [debug] Template "exception.development.html.ep" not found.
[Sun May 26 03:21:14 2013] [debug] Template "exception.html.ep" not found.
[Sun May 26 03:21:14 2013] [debug] Rendering inline template.
[Sun May 26 03:21:14 2013] [debug] Rendering inline template.
[Sun May 26 03:21:14 2013] [debug] 500 Internal Server Error (0.015769s, 63.416/s).
[Sun May 26 03:23:35 2013] [debug] Your secret passphrase needs to be changed!!!
[Sun May 26 03:23:35 2013] [debug] GET "/0/0/0/1/annotation/testupload".
[Sun May 26 03:23:35 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "testScreenshotUpload".
[Sun May 26 03:23:35 2013] [debug] Rendering template "leaves/annotation/testupload.html.ep".
[Sun May 26 03:23:35 2013] [debug] 200 OK (0.004472s, 223.614/s).
[Sun May 26 03:23:39 2013] [debug] POST "/0/0/0/1/annotation".
[Sun May 26 03:23:39 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "annotationCreation".
[Sun May 26 03:23:39 2013] [debug] annotationdir: /home/matt/Documents/AnnoTree/WebServices/anno_tree/public/img/annotations/0/0/0/1
[Sun May 26 03:23:39 2013] [debug] could not open
[Sun May 26 03:23:39 2013] [debug] 
[Sun May 26 03:23:39 2013] [debug] $VAR1 = bless( {
                 'name' => 'screenshot',
                 'headers' => bless( {
                                       'headers' => {
                                                      'content-type' => [
                                                                          [
                                                                            'image/png'
                                                                          ]
                                                                        ],
                                                      'content-disposition' => [
                                                                                 [
                                                                                   'form-data; name="screenshot"; filename="Screenshot_2013-05-22-23-02-15.png"'
                                                                                 ]
                                                                               ]
                                                    },
                                       'max_line_size' => 10240,
                                       'state' => 'finished',
                                       'cache' => []
                                     }, 'Mojo::Headers' ),
                 'filename' => 'Screenshot_2013-05-22-23-02-15.png',
                 'asset' => bless( {
                                     'path' => '/tmp/mojo.tmp',
                                     'handle' => bless( \*Symbol::GEN52, 'IO::File' ),
                                     'cleanup' => 1,
                                     'tmpdir' => '/tmp'
                                   }, 'Mojo::Asset::File' )
               }, 'Mojo::Upload' );

[Sun May 26 03:23:39 2013] [error] Can't move file "/tmp/mojo.tmp" to "/home/matt/Documents/AnnoTree/WebServices/anno_tree/public/img/annotations/0/0/0/1/0_Screenshot_2013-05-22-23-02-15.png": No such file or directory at /home/matt/perl5/perlbrew/perls/5.18_threads/lib/site_perl/5.18.0/Mojo/Upload.pm line 13.

[Sun May 26 03:23:39 2013] [debug] Template "exception.development.html.ep" not found.
[Sun May 26 03:23:39 2013] [debug] Template "exception.html.ep" not found.
[Sun May 26 03:23:39 2013] [debug] Rendering inline template.
[Sun May 26 03:23:39 2013] [debug] Rendering inline template.
[Sun May 26 03:23:39 2013] [debug] 500 Internal Server Error (0.015807s, 63.263/s).
[Sun May 26 03:28:55 2013] [debug] Your secret passphrase needs to be changed!!!
[Sun May 26 03:28:55 2013] [debug] GET "/0/0/0/1/annotation/testupload".
[Sun May 26 03:28:55 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "testScreenshotUpload".
[Sun May 26 03:28:55 2013] [debug] Rendering template "leaves/annotation/testupload.html.ep".
[Sun May 26 03:28:55 2013] [debug] 200 OK (0.004491s, 222.668/s).
[Sun May 26 03:29:02 2013] [debug] POST "/0/0/0/1/annotation".
[Sun May 26 03:29:02 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "annotationCreation".
[Sun May 26 03:29:02 2013] [debug] annotationdir: /home/matt/Documents/AnnoTree/WebServices/anno_tree/public/img/screenshot/0/0/0/1
[Sun May 26 03:29:02 2013] [debug] $VAR1 = '2_Screenshot_2013-05-22-23-01-58.png';

$VAR2 = '1_Screenshot_2013-05-22-23-02-15.png';

$VAR3 = '..';

$VAR4 = '.';

[Sun May 26 03:29:02 2013] [debug] not a screenshot
[Sun May 26 03:29:02 2013] [debug] $VAR1 = bless( {
                 'asset' => bless( {
                                     'handle' => bless( \*Symbol::GEN52, 'IO::File' ),
                                     'path' => '/tmp/mojo.tmp',
                                     'tmpdir' => '/tmp',
                                     'cleanup' => 1
                                   }, 'Mojo::Asset::File' ),
                 'headers' => bless( {
                                       'headers' => {
                                                      'content-type' => [
                                                                          [
                                                                            'image/png'
                                                                          ]
                                                                        ],
                                                      'content-disposition' => [
                                                                                 [
                                                                                   'form-data; name="screenshot"; filename="Screenshot_2013-05-22-23-01-58.png"'
                                                                                 ]
                                                                               ]
                                                    },
                                       'max_line_size' => 10240,
                                       'state' => 'finished',
                                       'cache' => []
                                     }, 'Mojo::Headers' ),
                 'filename' => 'Screenshot_2013-05-22-23-01-58.png',
                 'name' => 'screenshot'
               }, 'Mojo::Upload' );

[Sun May 26 03:29:02 2013] [debug] 200 OK (0.002090s, 478.469/s).
[Sun May 26 03:29:51 2013] [debug] GET "/0/0/0/1/annotation/testupload".
[Sun May 26 03:29:51 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "testScreenshotUpload".
[Sun May 26 03:29:51 2013] [debug] Rendering cached template "leaves/annotation/testupload.html.ep".
[Sun May 26 03:29:51 2013] [debug] 200 OK (0.000796s, 1256.281/s).
[Sun May 26 03:29:55 2013] [debug] POST "/0/0/0/1/annotation".
[Sun May 26 03:29:55 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "annotationCreation".
[Sun May 26 03:29:55 2013] [debug] annotationdir: /home/matt/Documents/AnnoTree/WebServices/anno_tree/public/img/screenshot/0/0/0/1
[Sun May 26 03:29:55 2013] [debug] $VAR1 = '3_Screenshot_2013-05-22-23-01-58.png';

$VAR2 = '2_Screenshot_2013-05-22-23-01-58.png';

$VAR3 = '1_Screenshot_2013-05-22-23-02-15.png';

$VAR4 = '..';

$VAR5 = '.';

[Sun May 26 03:29:55 2013] [debug] not a screenshot
[Sun May 26 03:29:55 2013] [debug] $VAR1 = bless( {
                 'name' => 'screenshot',
                 'headers' => bless( {
                                       'headers' => {
                                                      'content-disposition' => [
                                                                                 [
                                                                                   'form-data; name="screenshot"; filename="Screenshot_2013-05-22-23-02-15.png"'
                                                                                 ]
                                                                               ],
                                                      'content-type' => [
                                                                          [
                                                                            'image/png'
                                                                          ]
                                                                        ]
                                                    },
                                       'max_line_size' => 10240,
                                       'cache' => [],
                                       'state' => 'finished'
                                     }, 'Mojo::Headers' ),
                 'filename' => 'Screenshot_2013-05-22-23-02-15.png',
                 'asset' => bless( {
                                     'path' => '/tmp/mojo.tmp',
                                     'handle' => bless( \*Symbol::GEN103, 'IO::File' ),
                                     'cleanup' => 1,
                                     'tmpdir' => '/tmp'
                                   }, 'Mojo::Asset::File' )
               }, 'Mojo::Upload' );

[Sun May 26 03:29:55 2013] [debug] 200 OK (0.000913s, 1095.290/s).
[Sun May 26 03:33:04 2013] [debug] Your secret passphrase needs to be changed!!!
[Sun May 26 03:33:04 2013] [debug] GET "/0/0/0/1/annotation/display".
[Sun May 26 03:33:04 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "annotationDisplay".
[Sun May 26 03:33:04 2013] [debug] 200 OK (0.001410s, 709.220/s).
[Sun May 26 03:33:08 2013] [debug] GET "/0/0/0/0/annotation/display".
[Sun May 26 03:33:08 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "annotationDisplay".
[Sun May 26 03:33:08 2013] [debug] 200 OK (0.000436s, 2293.578/s).
[Sun May 26 03:36:27 2013] [debug] Your secret passphrase needs to be changed!!!
[Sun May 26 03:36:27 2013] [debug] GET "/img/screenshot/0/0/0/0/".
[Sun May 26 03:36:27 2013] [debug] Template "not_found.development.html.ep" not found.
[Sun May 26 03:36:27 2013] [debug] Template "not_found.html.ep" not found.
[Sun May 26 03:36:27 2013] [debug] Rendering inline template.
[Sun May 26 03:36:27 2013] [debug] Rendering inline template.
[Sun May 26 03:36:27 2013] [debug] 404 Not Found (0.011886s, 84.133/s).
[Sun May 26 03:43:40 2013] [debug] Your secret passphrase needs to be changed!!!
[Sun May 26 03:43:40 2013] [debug] GET "/0/0/0/0/annotation/display".
[Sun May 26 03:43:40 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "annotationDisplay".
[Sun May 26 03:43:40 2013] [debug] Template "/templates/leaves/annotation/display.html.ep" not found.
[Sun May 26 03:43:40 2013] [debug] Template "not_found.development.html.ep" not found.
[Sun May 26 03:43:40 2013] [debug] Template "not_found.html.ep" not found.
[Sun May 26 03:43:40 2013] [debug] Rendering inline template.
[Sun May 26 03:43:40 2013] [debug] Rendering inline template.
[Sun May 26 03:43:40 2013] [debug] 404 Not Found (0.012602s, 79.352/s).
[Sun May 26 03:44:31 2013] [debug] Your secret passphrase needs to be changed!!!
[Sun May 26 03:44:31 2013] [debug] GET "/0/0/0/0/annotation/display".
[Sun May 26 03:44:31 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "annotationDisplay".
[Sun May 26 03:44:31 2013] [debug] Template "templates/leaves/annotation/display.html.ep" not found.
[Sun May 26 03:44:31 2013] [debug] Template "not_found.development.html.ep" not found.
[Sun May 26 03:44:31 2013] [debug] Template "not_found.html.ep" not found.
[Sun May 26 03:44:31 2013] [debug] Rendering inline template.
[Sun May 26 03:44:31 2013] [debug] Rendering inline template.
[Sun May 26 03:44:31 2013] [debug] 404 Not Found (0.013034s, 76.722/s).
[Sun May 26 03:44:51 2013] [debug] Your secret passphrase needs to be changed!!!
[Sun May 26 03:44:51 2013] [debug] GET "/0/0/0/0/annotation/display".
[Sun May 26 03:44:51 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "annotationDisplay".
[Sun May 26 03:44:51 2013] [debug] Rendering template "leaves/annotation/display.html.ep".
[Sun May 26 03:44:51 2013] [error] Global symbol "@files" requires explicit package name at template leaves/annotation/display.html.ep line 5.
1: <% 
2: my $imgDir = "/img/screenshot/$forestid/$treeid/$branchid/$leafid"; 
3: opendir(my $dir, $imgDir) || print "oh fuck";
4: my @images = reverse sort readdir($dir);
5: foreach my $img (@files) {
6: %>
7: <img src="<%= "$imgDir/$img" %>">
8: <% } %>

[Sun May 26 03:44:51 2013] [debug] Template "exception.development.html.ep" not found.
[Sun May 26 03:44:51 2013] [debug] Template "exception.html.ep" not found.
[Sun May 26 03:44:51 2013] [debug] Rendering inline template.
[Sun May 26 03:44:51 2013] [debug] Rendering inline template.
[Sun May 26 03:44:51 2013] [debug] 500 Internal Server Error (0.019294s, 51.830/s).
[Sun May 26 03:45:09 2013] [debug] Your secret passphrase needs to be changed!!!
[Sun May 26 03:45:09 2013] [debug] GET "/0/0/0/0/annotation/display".
[Sun May 26 03:45:09 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "annotationDisplay".
[Sun May 26 03:45:09 2013] [debug] Rendering template "leaves/annotation/display.html.ep".
[Sun May 26 03:45:09 2013] [debug] 200 OK (0.004103s, 243.724/s).
[Sun May 26 03:47:01 2013] [debug] Your secret passphrase needs to be changed!!!
[Sun May 26 03:47:01 2013] [debug] GET "/0/0/0/0/annotation/display".
[Sun May 26 03:47:01 2013] [error] Search pattern not terminated or ternary operator parsed as search pattern at /home/matt/Documents/AnnoTree/WebServices/anno_tree/script/../lib/AnnoTree/Leaves/Annotation.pm line 57.
Compilation failed in require at (eval 230) line 1.

[Sun May 26 03:47:01 2013] [debug] Template "exception.development.html.ep" not found.
[Sun May 26 03:47:01 2013] [debug] Template "exception.html.ep" not found.
[Sun May 26 03:47:01 2013] [debug] Rendering inline template.
[Sun May 26 03:47:01 2013] [debug] Rendering inline template.
[Sun May 26 03:47:01 2013] [debug] 500 Internal Server Error (0.017524s, 57.065/s).
[Sun May 26 03:47:16 2013] [debug] Your secret passphrase needs to be changed!!!
[Sun May 26 03:47:16 2013] [debug] GET "/0/0/0/0/annotation/display".
[Sun May 26 03:47:16 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "annotationDisplay".
[Sun May 26 03:47:16 2013] [debug] Rendering template "leaves/annotation/display.html.ep".
[Sun May 26 03:47:16 2013] [debug] 200 OK (0.004098s, 244.021/s).
[Sun May 26 03:47:16 2013] [debug] GET "/home/matt/Documents/AnnoTree/WebServices/anno_tree/public/img/screenshot".
[Sun May 26 03:47:16 2013] [debug] Template "not_found.development.html.ep" not found.
[Sun May 26 03:47:16 2013] [debug] Template "not_found.html.ep" not found.
[Sun May 26 03:47:16 2013] [debug] Rendering inline template.
[Sun May 26 03:47:16 2013] [debug] Rendering inline template.
[Sun May 26 03:47:16 2013] [debug] 404 Not Found (0.010526s, 95.003/s).
[Sun May 26 03:47:16 2013] [debug] GET "/home/matt/Documents/AnnoTree/WebServices/anno_tree/public/img/".
[Sun May 26 03:47:16 2013] [debug] Template "not_found.development.html.ep" not found.
[Sun May 26 03:47:16 2013] [debug] Template "not_found.html.ep" not found.
[Sun May 26 03:47:16 2013] [debug] Rendering cached inline template.
[Sun May 26 03:47:16 2013] [debug] Rendering cached inline template.
[Sun May 26 03:47:16 2013] [debug] 404 Not Found (0.003311s, 302.024/s).
[Sun May 26 03:47:16 2013] [debug] GET "/home/matt/Documents/AnnoTree/WebServices/anno_tree/public/".
[Sun May 26 03:47:16 2013] [debug] Template "not_found.development.html.ep" not found.
[Sun May 26 03:47:16 2013] [debug] Template "not_found.html.ep" not found.
[Sun May 26 03:47:16 2013] [debug] Rendering cached inline template.
[Sun May 26 03:47:16 2013] [debug] Rendering cached inline template.
[Sun May 26 03:47:16 2013] [debug] 404 Not Found (0.003052s, 327.654/s).
[Sun May 26 03:48:22 2013] [debug] Your secret passphrase needs to be changed!!!
[Sun May 26 03:48:22 2013] [debug] GET "/0/0/0/0/annotation/display".
[Sun May 26 03:48:22 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "annotationDisplay".
[Sun May 26 03:48:22 2013] [debug] Rendering template "leaves/annotation/display.html.ep".
[Sun May 26 03:48:22 2013] [debug] 200 OK (0.004183s, 239.063/s).
[Sun May 26 03:48:22 2013] [debug] GET "/img/screenshot/0/0/0/0/screenshot".
[Sun May 26 03:48:22 2013] [debug] Template "not_found.development.html.ep" not found.
[Sun May 26 03:48:22 2013] [debug] Template "not_found.html.ep" not found.
[Sun May 26 03:48:22 2013] [debug] Rendering inline template.
[Sun May 26 03:48:22 2013] [debug] Rendering inline template.
[Sun May 26 03:48:23 2013] [debug] 404 Not Found (0.010093s, 99.079/s).
[Sun May 26 03:48:23 2013] [debug] GET "/img/screenshot/0/0/0/0/".
[Sun May 26 03:48:23 2013] [debug] Template "not_found.development.html.ep" not found.
[Sun May 26 03:48:23 2013] [debug] Template "not_found.html.ep" not found.
[Sun May 26 03:48:23 2013] [debug] Rendering cached inline template.
[Sun May 26 03:48:23 2013] [debug] Rendering cached inline template.
[Sun May 26 03:48:23 2013] [debug] 404 Not Found (0.003203s, 312.207/s).
[Sun May 26 03:48:23 2013] [debug] GET "/img/screenshot/0/0/0/".
[Sun May 26 03:48:23 2013] [debug] Template "not_found.development.html.ep" not found.
[Sun May 26 03:48:23 2013] [debug] Template "not_found.html.ep" not found.
[Sun May 26 03:48:23 2013] [debug] Rendering cached inline template.
[Sun May 26 03:48:23 2013] [debug] Rendering cached inline template.
[Sun May 26 03:48:23 2013] [debug] 404 Not Found (0.003199s, 312.598/s).
[Sun May 26 03:49:21 2013] [debug] Your secret passphrase needs to be changed!!!
[Sun May 26 03:49:21 2013] [debug] GET "/0/0/0/0/annotation/display".
[Sun May 26 03:49:21 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "annotationDisplay".
[Sun May 26 03:49:21 2013] [debug] Rendering template "leaves/annotation/display.html.ep".
[Sun May 26 03:49:21 2013] [debug] 200 OK (0.004183s, 239.063/s).
[Sun May 26 03:49:44 2013] [debug] Your secret passphrase needs to be changed!!!
[Sun May 26 03:49:44 2013] [debug] GET "/0/0/0/0/annotation/display".
[Sun May 26 03:49:44 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "annotationDisplay".
[Sun May 26 03:49:44 2013] [debug] Rendering template "leaves/annotation/display.html.ep".
[Sun May 26 03:49:44 2013] [debug] 200 OK (0.004162s, 240.269/s).
[Sun May 26 03:49:44 2013] [debug] GET "/img/screenshot/0/0/0/".
[Sun May 26 03:49:44 2013] [debug] Template "not_found.development.html.ep" not found.
[Sun May 26 03:49:44 2013] [debug] Template "not_found.html.ep" not found.
[Sun May 26 03:49:44 2013] [debug] Rendering inline template.
[Sun May 26 03:49:44 2013] [debug] Rendering inline template.
[Sun May 26 03:49:44 2013] [debug] 404 Not Found (0.010194s, 98.097/s).
[Sun May 26 03:49:44 2013] [debug] GET "/img/screenshot/0/0/0/0/".
[Sun May 26 03:49:44 2013] [debug] Template "not_found.development.html.ep" not found.
[Sun May 26 03:49:44 2013] [debug] Template "not_found.html.ep" not found.
[Sun May 26 03:49:44 2013] [debug] Rendering cached inline template.
[Sun May 26 03:49:44 2013] [debug] Rendering cached inline template.
[Sun May 26 03:49:44 2013] [debug] 404 Not Found (0.003741s, 267.308/s).
[Sun May 26 03:50:25 2013] [debug] Your secret passphrase needs to be changed!!!
[Sun May 26 03:50:25 2013] [debug] GET "/0/0/0/0/annotation/display".
[Sun May 26 03:50:25 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "annotationDisplay".
[Sun May 26 03:50:25 2013] [debug] Rendering template "leaves/annotation/display.html.ep".
[Sun May 26 03:50:25 2013] [debug] 200 OK (0.004177s, 239.406/s).
[Sun May 26 03:50:25 2013] [debug] GET "/img/screenshot/0/0/0/".
[Sun May 26 03:50:25 2013] [debug] Template "not_found.development.html.ep" not found.
[Sun May 26 03:50:25 2013] [debug] Template "not_found.html.ep" not found.
[Sun May 26 03:50:25 2013] [debug] Rendering inline template.
[Sun May 26 03:50:25 2013] [debug] Rendering inline template.
[Sun May 26 03:50:25 2013] [debug] 404 Not Found (0.010277s, 97.305/s).
[Sun May 26 03:50:25 2013] [debug] GET "/img/screenshot/0/0/0/0/".
[Sun May 26 03:50:25 2013] [debug] Template "not_found.development.html.ep" not found.
[Sun May 26 03:50:25 2013] [debug] Template "not_found.html.ep" not found.
[Sun May 26 03:50:25 2013] [debug] Rendering cached inline template.
[Sun May 26 03:50:25 2013] [debug] Rendering cached inline template.
[Sun May 26 03:50:25 2013] [debug] 404 Not Found (0.003362s, 297.442/s).
[Sun May 26 03:50:39 2013] [debug] Your secret passphrase needs to be changed!!!
[Sun May 26 03:50:39 2013] [debug] GET "/0/0/0/0/annotation/display".
[Sun May 26 03:50:39 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "annotationDisplay".
[Sun May 26 03:50:39 2013] [debug] Rendering template "leaves/annotation/display.html.ep".
[Sun May 26 03:50:39 2013] [debug] 200 OK (0.004166s, 240.038/s).
[Sun May 26 03:50:39 2013] [debug] GET "/img/screenshot/0/0/0/".
[Sun May 26 03:50:39 2013] [debug] Template "not_found.development.html.ep" not found.
[Sun May 26 03:50:39 2013] [debug] Template "not_found.html.ep" not found.
[Sun May 26 03:50:39 2013] [debug] Rendering inline template.
[Sun May 26 03:50:39 2013] [debug] Rendering inline template.
[Sun May 26 03:50:39 2013] [debug] 404 Not Found (0.010353s, 96.590/s).
[Sun May 26 03:50:39 2013] [debug] GET "/img/screenshot/0/0/0/0/".
[Sun May 26 03:50:39 2013] [debug] Template "not_found.development.html.ep" not found.
[Sun May 26 03:50:39 2013] [debug] Template "not_found.html.ep" not found.
[Sun May 26 03:50:39 2013] [debug] Rendering cached inline template.
[Sun May 26 03:50:39 2013] [debug] Rendering cached inline template.
[Sun May 26 03:50:39 2013] [debug] 404 Not Found (0.003303s, 302.755/s).
[Sun May 26 03:50:49 2013] [debug] GET "/0/0/0/1/annotation/display".
[Sun May 26 03:50:49 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "annotationDisplay".
[Sun May 26 03:50:49 2013] [debug] Rendering cached template "leaves/annotation/display.html.ep".
[Sun May 26 03:50:49 2013] [debug] 200 OK (0.000781s, 1280.410/s).
[Sun May 26 03:50:49 2013] [debug] GET "/img/screenshot/0/0/0/1/".
[Sun May 26 03:50:49 2013] [debug] Template "not_found.development.html.ep" not found.
[Sun May 26 03:50:49 2013] [debug] Template "not_found.html.ep" not found.
[Sun May 26 03:50:49 2013] [debug] Rendering cached inline template.
[Sun May 26 03:50:49 2013] [debug] Rendering cached inline template.
[Sun May 26 03:50:49 2013] [debug] 404 Not Found (0.003953s, 252.972/s).
[Sun May 26 03:50:49 2013] [debug] GET "/img/screenshot/0/0/0/".
[Sun May 26 03:50:49 2013] [debug] Template "not_found.development.html.ep" not found.
[Sun May 26 03:50:49 2013] [debug] Template "not_found.html.ep" not found.
[Sun May 26 03:50:49 2013] [debug] Rendering cached inline template.
[Sun May 26 03:50:49 2013] [debug] Rendering cached inline template.
[Sun May 26 03:50:49 2013] [debug] 404 Not Found (0.003400s, 294.118/s).
[Sun May 26 03:52:11 2013] [debug] Your secret passphrase needs to be changed!!!
[Sun May 26 03:52:11 2013] [debug] GET "/0/0/0/1/annotation/display".
[Sun May 26 03:52:11 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "annotationDisplay".
[Sun May 26 03:52:11 2013] [debug] Rendering template "leaves/annotation/display.html.ep".
[Sun May 26 03:52:11 2013] [error] syntax error at template leaves/annotation/display.html.ep line 7, near ")
$_M "
2: my $imageDir = "$imgDir/screenshot/$forestid/$treeid/$branchid/$leafid"; 
3: opendir(my $dir, $imageDir) || print "oh fuck";
4: my @images = reverse sort readdir($dir);
5: foreach my $img (@images) {
6:     if ($img ne "." || $img != "..")
7: %>
8: <%= $img %><br />
9: <img src="<%= "/img/screenshot/$forestid/$treeid/$branchid/$leafid/$img" %>"><br />
10: <% } %>

[Sun May 26 03:52:11 2013] [debug] Template "exception.development.html.ep" not found.
[Sun May 26 03:52:11 2013] [debug] Template "exception.html.ep" not found.
[Sun May 26 03:52:11 2013] [debug] Rendering inline template.
[Sun May 26 03:52:11 2013] [debug] Rendering inline template.
[Sun May 26 03:52:11 2013] [debug] 500 Internal Server Error (0.018824s, 53.124/s).
[Sun May 26 03:52:24 2013] [debug] Your secret passphrase needs to be changed!!!
[Sun May 26 03:52:24 2013] [debug] GET "/0/0/0/1/annotation/display".
[Sun May 26 03:52:24 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "annotationDisplay".
[Sun May 26 03:52:24 2013] [debug] Rendering template "leaves/annotation/display.html.ep".
[Sun May 26 03:52:24 2013] [error] syntax error at template leaves/annotation/display.html.ep line 7, near ")
$_M "
syntax error at template leaves/annotation/display.html.ep line 10, near "} $_M "
Unmatched right curly bracket at template leaves/annotation/display.html.ep line 10, at end of line
syntax error at template leaves/annotation/display.html.ep line 10, near "} }"
5: foreach my $img (@images) {
6:     if ($img ne "." || $img != "..")
7: %>
8: <%= $img %><br />
9: <img src="<%= "/img/screenshot/$forestid/$treeid/$branchid/$leafid/$img" %>"><br />
10: <% }} %>

[Sun May 26 03:52:24 2013] [debug] Template "exception.development.html.ep" not found.
[Sun May 26 03:52:24 2013] [debug] Template "exception.html.ep" not found.
[Sun May 26 03:52:24 2013] [debug] Rendering inline template.
[Sun May 26 03:52:24 2013] [debug] Rendering inline template.
[Sun May 26 03:52:24 2013] [debug] 500 Internal Server Error (0.018847s, 53.059/s).
[Sun May 26 03:52:34 2013] [debug] Your secret passphrase needs to be changed!!!
[Sun May 26 03:52:34 2013] [debug] GET "/0/0/0/1/annotation/display".
[Sun May 26 03:52:34 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "annotationDisplay".
[Sun May 26 03:52:34 2013] [debug] Rendering template "leaves/annotation/display.html.ep".
[Sun May 26 03:52:34 2013] [error] syntax error at template leaves/annotation/display.html.ep line 10, near "} $_M "
Unmatched right curly bracket at template leaves/annotation/display.html.ep line 10, at end of line
syntax error at template leaves/annotation/display.html.ep line 10, near "} }"
5: foreach my $img (@images) {
6: if ($img ne "." || $img != "..") {}
7: %>
8: <%= $img %><br />
9: <img src="<%= "/img/screenshot/$forestid/$treeid/$branchid/$leafid/$img" %>"><br />
10: <% }} %>

[Sun May 26 03:52:34 2013] [debug] Template "exception.development.html.ep" not found.
[Sun May 26 03:52:34 2013] [debug] Template "exception.html.ep" not found.
[Sun May 26 03:52:34 2013] [debug] Rendering inline template.
[Sun May 26 03:52:34 2013] [debug] Rendering inline template.
[Sun May 26 03:52:34 2013] [debug] 500 Internal Server Error (0.018824s, 53.124/s).
[Sun May 26 03:52:55 2013] [debug] Your secret passphrase needs to be changed!!!
[Sun May 26 03:52:55 2013] [debug] GET "/0/0/0/1/annotation/display".
[Sun May 26 03:52:55 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "annotationDisplay".
[Sun May 26 03:52:55 2013] [debug] Rendering template "leaves/annotation/display.html.ep".
[Sun May 26 03:52:55 2013] [debug] 200 OK (0.004275s, 233.918/s).
[Sun May 26 03:52:55 2013] [debug] GET "/img/screenshot/0/0/0/".
[Sun May 26 03:52:55 2013] [debug] Template "not_found.development.html.ep" not found.
[Sun May 26 03:52:55 2013] [debug] Template "not_found.html.ep" not found.
[Sun May 26 03:52:55 2013] [debug] Rendering inline template.
[Sun May 26 03:52:55 2013] [debug] Rendering inline template.
[Sun May 26 03:52:55 2013] [debug] 404 Not Found (0.010214s, 97.905/s).
[Sun May 26 03:53:12 2013] [debug] Your secret passphrase needs to be changed!!!
[Sun May 26 03:53:12 2013] [debug] GET "/0/0/0/1/annotation/display".
[Sun May 26 03:53:12 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "annotationDisplay".
[Sun May 26 03:53:12 2013] [debug] Rendering template "leaves/annotation/display.html.ep".
[Sun May 26 03:53:12 2013] [debug] 200 OK (0.004155s, 240.674/s).
[Sun May 26 03:53:12 2013] [debug] GET "/img/screenshot/0/0/0/".
[Sun May 26 03:53:12 2013] [debug] Template "not_found.development.html.ep" not found.
[Sun May 26 03:53:12 2013] [debug] Template "not_found.html.ep" not found.
[Sun May 26 03:53:12 2013] [debug] Rendering inline template.
[Sun May 26 03:53:12 2013] [debug] Rendering inline template.
[Sun May 26 03:53:12 2013] [debug] 404 Not Found (0.010078s, 99.226/s).
[Sun May 26 03:53:12 2013] [debug] GET "/img/screenshot/0/0/0/1/".
[Sun May 26 03:53:12 2013] [debug] Template "not_found.development.html.ep" not found.
[Sun May 26 03:53:12 2013] [debug] Template "not_found.html.ep" not found.
[Sun May 26 03:53:12 2013] [debug] Rendering cached inline template.
[Sun May 26 03:53:12 2013] [debug] Rendering cached inline template.
[Sun May 26 03:53:12 2013] [debug] 404 Not Found (0.003212s, 311.333/s).
[Sun May 26 03:53:13 2013] [debug] GET "/0/0/0/1/annotation/display".
[Sun May 26 03:53:13 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "annotationDisplay".
[Sun May 26 03:53:13 2013] [debug] Rendering cached template "leaves/annotation/display.html.ep".
[Sun May 26 03:53:13 2013] [debug] 200 OK (0.000550s, 1818.182/s).
[Sun May 26 03:53:13 2013] [debug] GET "/img/screenshot/0/0/0/1/".
[Sun May 26 03:53:13 2013] [debug] Template "not_found.development.html.ep" not found.
[Sun May 26 03:53:13 2013] [debug] Template "not_found.html.ep" not found.
[Sun May 26 03:53:13 2013] [debug] Rendering cached inline template.
[Sun May 26 03:53:13 2013] [debug] Rendering cached inline template.
[Sun May 26 03:53:13 2013] [debug] 404 Not Found (0.003385s, 295.421/s).
[Sun May 26 03:53:13 2013] [debug] GET "/img/screenshot/0/0/0/".
[Sun May 26 03:53:13 2013] [debug] Template "not_found.development.html.ep" not found.
[Sun May 26 03:53:13 2013] [debug] Template "not_found.html.ep" not found.
[Sun May 26 03:53:13 2013] [debug] Rendering cached inline template.
[Sun May 26 03:53:13 2013] [debug] Rendering cached inline template.
[Sun May 26 03:53:13 2013] [debug] 404 Not Found (0.003233s, 309.310/s).
[Sun May 26 03:53:18 2013] [debug] GET "/0/0/0/1/annotation/display".
[Sun May 26 03:53:18 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "annotationDisplay".
[Sun May 26 03:53:18 2013] [debug] Rendering cached template "leaves/annotation/display.html.ep".
[Sun May 26 03:53:18 2013] [debug] 200 OK (0.000537s, 1862.197/s).
[Sun May 26 03:53:18 2013] [debug] GET "/img/screenshot/0/0/0/".
[Sun May 26 03:53:18 2013] [debug] Template "not_found.development.html.ep" not found.
[Sun May 26 03:53:18 2013] [debug] Template "not_found.html.ep" not found.
[Sun May 26 03:53:18 2013] [debug] Rendering cached inline template.
[Sun May 26 03:53:18 2013] [debug] Rendering cached inline template.
[Sun May 26 03:53:18 2013] [debug] 404 Not Found (0.003421s, 292.312/s).
[Sun May 26 03:53:18 2013] [debug] GET "/img/screenshot/0/0/0/1/".
[Sun May 26 03:53:18 2013] [debug] Template "not_found.development.html.ep" not found.
[Sun May 26 03:53:18 2013] [debug] Template "not_found.html.ep" not found.
[Sun May 26 03:53:18 2013] [debug] Rendering cached inline template.
[Sun May 26 03:53:18 2013] [debug] Rendering cached inline template.
[Sun May 26 03:53:18 2013] [debug] 404 Not Found (0.003181s, 314.367/s).
[Sun May 26 03:53:35 2013] [debug] Your secret passphrase needs to be changed!!!
[Sun May 26 03:53:35 2013] [debug] GET "/0/0/0/1/annotation/display".
[Sun May 26 03:53:35 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "annotationDisplay".
[Sun May 26 03:53:35 2013] [debug] Rendering template "leaves/annotation/display.html.ep".
[Sun May 26 03:53:35 2013] [debug] 200 OK (0.004142s, 241.429/s).
[Sun May 26 03:54:04 2013] [debug] Your secret passphrase needs to be changed!!!
[Sun May 26 03:54:04 2013] [debug] GET "/0/0/0/1/annotation/display".
[Sun May 26 03:54:04 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "annotationDisplay".
[Sun May 26 03:54:04 2013] [debug] Rendering template "leaves/annotation/display.html.ep".
[Sun May 26 03:54:04 2013] [debug] 200 OK (0.004212s, 237.417/s).
[Sun May 26 03:54:11 2013] [debug] GET "/0/0/0/2/annotation/display".
[Sun May 26 03:54:11 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "annotationDisplay".
[Sun May 26 03:54:11 2013] [debug] Rendering cached template "leaves/annotation/display.html.ep".
[Sun May 26 03:54:11 2013] [debug] 200 OK (0.000696s, 1436.782/s).
[Sun May 26 03:54:17 2013] [debug] GET "/0/0/0/0/annotation/display".
[Sun May 26 03:54:17 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "annotationDisplay".
[Sun May 26 03:54:17 2013] [debug] Rendering cached template "leaves/annotation/display.html.ep".
[Sun May 26 03:54:17 2013] [debug] 200 OK (0.000735s, 1360.544/s).
[Sun May 26 03:55:00 2013] [debug] GET "/0/0/0/0/annotation/display".
[Sun May 26 03:55:00 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "annotationDisplay".
[Sun May 26 03:55:00 2013] [debug] Rendering cached template "leaves/annotation/display.html.ep".
[Sun May 26 03:55:00 2013] [debug] 200 OK (0.000491s, 2036.660/s).
[Sun May 26 03:55:05 2013] [debug] GET "/0/0/0/0/annotation/testupload".
[Sun May 26 03:55:05 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "testScreenshotUpload".
[Sun May 26 03:55:05 2013] [debug] Rendering template "leaves/annotation/testupload.html.ep".
[Sun May 26 03:55:05 2013] [debug] 200 OK (0.002650s, 377.358/s).
[Sun May 26 03:55:09 2013] [debug] POST "/0/0/0/0/annotation".
[Sun May 26 03:55:09 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "annotationCreation".
[Sun May 26 03:55:09 2013] [debug] annotationdir: /home/matt/Documents/AnnoTree/WebServices/anno_tree/public/img/screenshot/0/0/0/0
[Sun May 26 03:55:09 2013] [debug] $VAR1 = '4_Screenshot_2013-05-22-23-02-15.png';

$VAR2 = '3_Screenshot_2013-05-22-23-11-37.png';

$VAR3 = '2_Screenshot_2013-05-22-23-02-15.png';

$VAR4 = '1_Screenshot_2013-05-22-23-11-37.png';

$VAR5 = '0_Screenshot_2013-05-22-23-02-15.png';

$VAR6 = '..';

$VAR7 = '.';

[Sun May 26 03:55:09 2013] [debug] not a screenshot
[Sun May 26 03:55:09 2013] [debug] $VAR1 = bless( {
                 'name' => 'screenshot',
                 'asset' => bless( {
                                     'tmpdir' => '/tmp',
                                     'cleanup' => 1,
                                     'handle' => bless( \*Symbol::GEN202, 'IO::File' ),
                                     'path' => '/tmp/mojo.tmp'
                                   }, 'Mojo::Asset::File' ),
                 'filename' => 'Screenshot_2013-05-22-23-11-37.png',
                 'headers' => bless( {
                                       'state' => 'finished',
                                       'cache' => [],
                                       'headers' => {
                                                      'content-disposition' => [
                                                                                 [
                                                                                   'form-data; name="screenshot"; filename="Screenshot_2013-05-22-23-11-37.png"'
                                                                                 ]
                                                                               ],
                                                      'content-type' => [
                                                                          [
                                                                            'image/png'
                                                                          ]
                                                                        ]
                                                    },
                                       'max_line_size' => 10240
                                     }, 'Mojo::Headers' )
               }, 'Mojo::Upload' );

[Sun May 26 03:55:09 2013] [debug] 200 OK (0.001084s, 922.509/s).
[Sun May 26 03:55:13 2013] [debug] GET "/0/0/0/0/annotation/display".
[Sun May 26 03:55:13 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "annotationDisplay".
[Sun May 26 03:55:13 2013] [debug] Rendering cached template "leaves/annotation/display.html.ep".
[Sun May 26 03:55:13 2013] [debug] 200 OK (0.000639s, 1564.945/s).
[Sun May 26 03:55:21 2013] [debug] GET "/0/0/0/1/annotation/testupload".
[Sun May 26 03:55:21 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "testScreenshotUpload".
[Sun May 26 03:55:21 2013] [debug] Rendering cached template "leaves/annotation/testupload.html.ep".
[Sun May 26 03:55:21 2013] [debug] 200 OK (0.001036s, 965.251/s).
[Sun May 26 03:55:29 2013] [debug] POST "/0/0/0/1/annotation".
[Sun May 26 03:55:29 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "annotationCreation".
[Sun May 26 03:55:29 2013] [debug] annotationdir: /home/matt/Documents/AnnoTree/WebServices/anno_tree/public/img/screenshot/0/0/0/1
[Sun May 26 03:55:29 2013] [debug] $VAR1 = '4_Screenshot_2013-05-22-23-02-15.png';

$VAR2 = '3_Screenshot_2013-05-22-23-01-58.png';

$VAR3 = '2_Screenshot_2013-05-22-23-01-58.png';

$VAR4 = '1_Screenshot_2013-05-22-23-02-15.png';

$VAR5 = '..';

$VAR6 = '.';

[Sun May 26 03:55:29 2013] [debug] not a screenshot
[Sun May 26 03:55:29 2013] [debug] $VAR1 = bless( {
                 'name' => 'screenshot',
                 'filename' => 'Screenshot_2013-05-22-23-01-58.png',
                 'headers' => bless( {
                                       'state' => 'finished',
                                       'cache' => [],
                                       'max_line_size' => 10240,
                                       'headers' => {
                                                      'content-disposition' => [
                                                                                 [
                                                                                   'form-data; name="screenshot"; filename="Screenshot_2013-05-22-23-01-58.png"'
                                                                                 ]
                                                                               ],
                                                      'content-type' => [
                                                                          [
                                                                            'image/png'
                                                                          ]
                                                                        ]
                                                    }
                                     }, 'Mojo::Headers' ),
                 'asset' => bless( {
                                     'tmpdir' => '/tmp',
                                     'cleanup' => 1,
                                     'handle' => bless( \*Symbol::GEN204, 'IO::File' ),
                                     'path' => '/tmp/mojo.tmp'
                                   }, 'Mojo::Asset::File' )
               }, 'Mojo::Upload' );

[Sun May 26 03:55:29 2013] [debug] 200 OK (0.002071s, 482.859/s).
[Sun May 26 03:55:33 2013] [debug] GET "/0/0/0/1/annotation/display".
[Sun May 26 03:55:33 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "annotationDisplay".
[Sun May 26 03:55:33 2013] [debug] Rendering cached template "leaves/annotation/display.html.ep".
[Sun May 26 03:55:33 2013] [debug] 200 OK (0.000617s, 1620.746/s).
[Sun May 26 13:17:53 2013] [debug] Your secret passphrase needs to be changed!!!
[Sun May 26 13:17:53 2013] [debug] GET "/img/screenshot/0/0/0/0/annotation/testupload".
[Sun May 26 13:17:53 2013] [debug] Template "not_found.development.html.ep" not found.
[Sun May 26 13:17:53 2013] [debug] Template "not_found.html.ep" not found.
[Sun May 26 13:17:53 2013] [debug] Rendering inline template.
[Sun May 26 13:17:53 2013] [debug] Rendering inline template.
[Sun May 26 13:17:53 2013] [debug] 404 Not Found (0.012210s, 81.900/s).
[Sun May 26 13:18:02 2013] [debug] GET "/0/0/0/0/annotation/testupload".
[Sun May 26 13:18:02 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "testScreenshotUpload".
[Sun May 26 13:18:02 2013] [debug] Rendering template "leaves/annotation/testupload.html.ep".
[Sun May 26 13:18:02 2013] [debug] 200 OK (0.003089s, 323.729/s).
[Sun May 26 13:18:08 2013] [debug] POST "/0/0/0/0/annotation".
[Sun May 26 13:18:08 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "annotationCreation".
[Sun May 26 13:18:08 2013] [debug] annotationdir: /home/matt/Documents/AnnoTree/WebServices/anno_tree/public/img/screenshot/0/0/0/0
[Sun May 26 13:18:08 2013] [debug] $VAR1 = '5_Screenshot_2013-05-22-23-11-37.png';

$VAR2 = '4_Screenshot_2013-05-22-23-02-15.png';

$VAR3 = '3_Screenshot_2013-05-22-23-11-37.png';

$VAR4 = '2_Screenshot_2013-05-22-23-02-15.png';

$VAR5 = '1_Screenshot_2013-05-22-23-11-37.png';

$VAR6 = '0_Screenshot_2013-05-22-23-02-15.png';

$VAR7 = '..';

$VAR8 = '.';

[Sun May 26 13:18:08 2013] [debug] annotationid: 1
[Sun May 26 13:18:08 2013] [debug] not a screenshot
[Sun May 26 13:18:08 2013] [debug] $VAR1 = bless( {
                 'name' => 'screenshot',
                 'asset' => bless( {
                                     'tmpdir' => '/tmp',
                                     'cleanup' => 1,
                                     'handle' => bless( \*Symbol::GEN52, 'IO::File' ),
                                     'path' => '/tmp/mojo.tmp'
                                   }, 'Mojo::Asset::File' ),
                 'headers' => bless( {
                                       'headers' => {
                                                      'content-disposition' => [
                                                                                 [
                                                                                   'form-data; name="screenshot"; filename="Screenshot_2013-05-22-23-02-15.png"'
                                                                                 ]
                                                                               ],
                                                      'content-type' => [
                                                                          [
                                                                            'image/png'
                                                                          ]
                                                                        ]
                                                    },
                                       'max_line_size' => 10240,
                                       'cache' => [],
                                       'state' => 'finished'
                                     }, 'Mojo::Headers' ),
                 'filename' => 'Screenshot_2013-05-22-23-02-15.png'
               }, 'Mojo::Upload' );

[Sun May 26 13:18:08 2013] [debug] 200 OK (0.001209s, 827.130/s).
[Sun May 26 13:19:40 2013] [debug] Your secret passphrase needs to be changed!!!
[Sun May 26 13:19:40 2013] [debug] GET "/0/0/0/0/annotation/testupload".
[Sun May 26 13:19:40 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "testScreenshotUpload".
[Sun May 26 13:19:40 2013] [debug] Rendering template "leaves/annotation/testupload.html.ep".
[Sun May 26 13:19:40 2013] [debug] 200 OK (0.004704s, 212.585/s).
[Sun May 26 13:19:44 2013] [debug] POST "/0/0/0/0/annotation".
[Sun May 26 13:19:44 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "annotationCreation".
[Sun May 26 13:19:44 2013] [debug] annotationdir: /home/matt/Documents/AnnoTree/WebServices/anno_tree/public/img/screenshot/0/0/0/0
[Sun May 26 13:19:44 2013] [debug] $VAR1 = '5_Screenshot_2013-05-22-23-11-37.png';

$VAR2 = '4_Screenshot_2013-05-22-23-02-15.png';

$VAR3 = '3_Screenshot_2013-05-22-23-11-37.png';

$VAR4 = '2_Screenshot_2013-05-22-23-02-15.png';

$VAR5 = '1_Screenshot_2013-05-22-23-11-37.png';

$VAR6 = '1_Screenshot_2013-05-22-23-02-15.png';

$VAR7 = '0_Screenshot_2013-05-22-23-02-15.png';

$VAR8 = '..';

$VAR9 = '.';

[Sun May 26 13:19:44 2013] [debug] annotationid: 1
[Sun May 26 13:19:44 2013] [debug] not a screenshot
[Sun May 26 13:19:44 2013] [debug] $VAR1 = bless( {
                 'name' => 'screenshot',
                 'asset' => bless( {
                                     'handle' => bless( \*Symbol::GEN52, 'IO::File' ),
                                     'path' => '/tmp/mojo.tmp',
                                     'tmpdir' => '/tmp',
                                     'cleanup' => 1
                                   }, 'Mojo::Asset::File' ),
                 'filename' => 'Screenshot_2013-05-22-23-01-58.png',
                 'headers' => bless( {
                                       'state' => 'finished',
                                       'cache' => [],
                                       'headers' => {
                                                      'content-disposition' => [
                                                                                 [
                                                                                   'form-data; name="screenshot"; filename="Screenshot_2013-05-22-23-01-58.png"'
                                                                                 ]
                                                                               ],
                                                      'content-type' => [
                                                                          [
                                                                            'image/png'
                                                                          ]
                                                                        ]
                                                    },
                                       'max_line_size' => 10240
                                     }, 'Mojo::Headers' )
               }, 'Mojo::Upload' );

[Sun May 26 13:19:44 2013] [debug] 200 OK (0.002108s, 474.383/s).
[Sun May 26 13:20:21 2013] [debug] Your secret passphrase needs to be changed!!!
[Sun May 26 13:20:21 2013] [debug] GET "/0/0/0/0/annotation/testupload".
[Sun May 26 13:20:21 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "testScreenshotUpload".
[Sun May 26 13:20:21 2013] [debug] Rendering template "leaves/annotation/testupload.html.ep".
[Sun May 26 13:20:21 2013] [debug] 200 OK (0.004845s, 206.398/s).
[Sun May 26 13:20:26 2013] [debug] POST "/0/0/0/0/annotation".
[Sun May 26 13:20:26 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "annotationCreation".
[Sun May 26 13:20:26 2013] [debug] annotationdir: /home/matt/Documents/AnnoTree/WebServices/anno_tree/public/img/screenshot/0/0/0/0
[Sun May 26 13:20:26 2013] [debug] $VAR1 = '5_Screenshot_2013-05-22-23-11-37.png';

$VAR2 = '4_Screenshot_2013-05-22-23-02-15.png';

$VAR3 = '3_Screenshot_2013-05-22-23-11-37.png';

$VAR4 = '2_Screenshot_2013-05-22-23-02-15.png';

$VAR5 = '1_Screenshot_2013-05-22-23-11-37.png';

$VAR6 = '1_Screenshot_2013-05-22-23-02-15.png';

$VAR7 = '1_Screenshot_2013-05-22-23-01-58.png';

$VAR8 = '0_Screenshot_2013-05-22-23-02-15.png';

$VAR9 = '..';

$VAR10 = '.';

[Sun May 26 13:20:26 2013] [debug] filename: 5_Screenshot_2013-05-22-23-11-37.png
[Sun May 26 13:20:26 2013] [debug] annotationid: 1
[Sun May 26 13:20:26 2013] [debug] not a screenshot
[Sun May 26 13:20:26 2013] [debug] $VAR1 = bless( {
                 'name' => 'screenshot',
                 'headers' => bless( {
                                       'state' => 'finished',
                                       'cache' => [],
                                       'headers' => {
                                                      'content-type' => [
                                                                          [
                                                                            'image/png'
                                                                          ]
                                                                        ],
                                                      'content-disposition' => [
                                                                                 [
                                                                                   'form-data; name="screenshot"; filename="Screenshot_2013-05-22-23-01-58.png"'
                                                                                 ]
                                                                               ]
                                                    },
                                       'max_line_size' => 10240
                                     }, 'Mojo::Headers' ),
                 'filename' => 'Screenshot_2013-05-22-23-01-58.png',
                 'asset' => bless( {
                                     'handle' => bless( \*Symbol::GEN52, 'IO::File' ),
                                     'path' => '/tmp/mojo.tmp',
                                     'tmpdir' => '/tmp',
                                     'cleanup' => 1
                                   }, 'Mojo::Asset::File' )
               }, 'Mojo::Upload' );

[Sun May 26 13:20:26 2013] [debug] 200 OK (0.002392s, 418.060/s).
[Sun May 26 13:22:18 2013] [debug] Your secret passphrase needs to be changed!!!
[Sun May 26 13:22:18 2013] [debug] GET "/0/0/0/0/annotation/testupload".
[Sun May 26 13:22:18 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "testScreenshotUpload".
[Sun May 26 13:22:18 2013] [debug] Rendering template "leaves/annotation/testupload.html.ep".
[Sun May 26 13:22:18 2013] [debug] 200 OK (0.004647s, 215.193/s).
[Sun May 26 13:22:22 2013] [debug] POST "/0/0/0/0/annotation".
[Sun May 26 13:22:22 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "annotationCreation".
[Sun May 26 13:22:22 2013] [debug] annotationdir: /home/matt/Documents/AnnoTree/WebServices/anno_tree/public/img/screenshot/0/0/0/0
[Sun May 26 13:22:22 2013] [debug] $VAR1 = '5_Screenshot_2013-05-22-23-11-37.png';

$VAR2 = '4_Screenshot_2013-05-22-23-02-15.png';

$VAR3 = '3_Screenshot_2013-05-22-23-11-37.png';

$VAR4 = '2_Screenshot_2013-05-22-23-02-15.png';

$VAR5 = '1_Screenshot_2013-05-22-23-11-37.png';

$VAR6 = '1_Screenshot_2013-05-22-23-02-15.png';

$VAR7 = '1_Screenshot_2013-05-22-23-01-58.png';

$VAR8 = '0_Screenshot_2013-05-22-23-02-15.png';

$VAR9 = '..';

$VAR10 = '.';

[Sun May 26 13:22:22 2013] [debug] filename: 5_Screenshot_2013-05-22-23-11-37.png
[Sun May 26 13:22:22 2013] [debug] annotationid: 5
[Sun May 26 13:22:22 2013] [debug] not a screenshot
[Sun May 26 13:22:22 2013] [debug] $VAR1 = bless( {
                 'headers' => bless( {
                                       'headers' => {
                                                      'content-disposition' => [
                                                                                 [
                                                                                   'form-data; name="screenshot"; filename="Screenshot_2013-05-22-23-02-15.png"'
                                                                                 ]
                                                                               ],
                                                      'content-type' => [
                                                                          [
                                                                            'image/png'
                                                                          ]
                                                                        ]
                                                    },
                                       'max_line_size' => 10240,
                                       'state' => 'finished',
                                       'cache' => []
                                     }, 'Mojo::Headers' ),
                 'filename' => 'Screenshot_2013-05-22-23-02-15.png',
                 'asset' => bless( {
                                     'handle' => bless( \*Symbol::GEN52, 'IO::File' ),
                                     'path' => '/tmp/mojo.tmp',
                                     'tmpdir' => '/tmp',
                                     'cleanup' => 1
                                   }, 'Mojo::Asset::File' ),
                 'name' => 'screenshot'
               }, 'Mojo::Upload' );

[Sun May 26 13:22:22 2013] [debug] 200 OK (0.001332s, 750.751/s).
[Sun May 26 13:23:05 2013] [debug] Your secret passphrase needs to be changed!!!
[Sun May 26 13:23:05 2013] [debug] GET "/0/0/0/0/annotation/testupload".
[Sun May 26 13:23:05 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "testScreenshotUpload".
[Sun May 26 13:23:05 2013] [debug] Rendering template "leaves/annotation/testupload.html.ep".
[Sun May 26 13:23:05 2013] [debug] 200 OK (0.004680s, 213.675/s).
[Sun May 26 13:23:10 2013] [debug] POST "/0/0/0/0/annotation".
[Sun May 26 13:23:10 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "annotationCreation".
[Sun May 26 13:23:10 2013] [debug] annotationdir: /home/matt/Documents/AnnoTree/WebServices/anno_tree/public/img/screenshot/0/0/0/0
[Sun May 26 13:23:10 2013] [debug] $VAR1 = '..';

$VAR2 = '.';

[Sun May 26 13:23:10 2013] [debug] filename: ..
[Sun May 26 13:23:10 2013] [debug] annotationid: 0
[Sun May 26 13:23:10 2013] [debug] not a screenshot
[Sun May 26 13:23:10 2013] [debug] $VAR1 = bless( {
                 'name' => 'screenshot',
                 'headers' => bless( {
                                       'cache' => [],
                                       'state' => 'finished',
                                       'headers' => {
                                                      'content-disposition' => [
                                                                                 [
                                                                                   'form-data; name="screenshot"; filename="Screenshot_2013-05-22-23-01-58.png"'
                                                                                 ]
                                                                               ],
                                                      'content-type' => [
                                                                          [
                                                                            'image/png'
                                                                          ]
                                                                        ]
                                                    },
                                       'max_line_size' => 10240
                                     }, 'Mojo::Headers' ),
                 'filename' => 'Screenshot_2013-05-22-23-01-58.png',
                 'asset' => bless( {
                                     'tmpdir' => '/tmp',
                                     'cleanup' => 1,
                                     'handle' => bless( \*Symbol::GEN52, 'IO::File' ),
                                     'path' => '/tmp/mojo.tmp'
                                   }, 'Mojo::Asset::File' )
               }, 'Mojo::Upload' );

[Sun May 26 13:23:10 2013] [debug] 200 OK (0.002390s, 418.410/s).
[Sun May 26 13:23:19 2013] [debug] GET "/0/0/0/0/annotation/testupload".
[Sun May 26 13:23:19 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "testScreenshotUpload".
[Sun May 26 13:23:19 2013] [debug] Rendering cached template "leaves/annotation/testupload.html.ep".
[Sun May 26 13:23:19 2013] [debug] 200 OK (0.000796s, 1256.281/s).
[Sun May 26 13:23:23 2013] [debug] POST "/0/0/0/0/annotation".
[Sun May 26 13:23:23 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "annotationCreation".
[Sun May 26 13:23:23 2013] [debug] annotationdir: /home/matt/Documents/AnnoTree/WebServices/anno_tree/public/img/screenshot/0/0/0/0
[Sun May 26 13:23:23 2013] [debug] $VAR1 = '0_Screenshot_2013-05-22-23-01-58.png';

$VAR2 = '..';

$VAR3 = '.';

[Sun May 26 13:23:23 2013] [debug] filename: 0_Screenshot_2013-05-22-23-01-58.png
[Sun May 26 13:23:23 2013] [debug] annotationid: 1
[Sun May 26 13:23:23 2013] [debug] not a screenshot
[Sun May 26 13:23:23 2013] [debug] $VAR1 = bless( {
                 'name' => 'screenshot',
                 'headers' => bless( {
                                       'headers' => {
                                                      'content-type' => [
                                                                          [
                                                                            'image/png'
                                                                          ]
                                                                        ],
                                                      'content-disposition' => [
                                                                                 [
                                                                                   'form-data; name="screenshot"; filename="Screenshot_2013-05-22-23-01-58.png"'
                                                                                 ]
                                                                               ]
                                                    },
                                       'max_line_size' => 10240,
                                       'state' => 'finished',
                                       'cache' => []
                                     }, 'Mojo::Headers' ),
                 'filename' => 'Screenshot_2013-05-22-23-01-58.png',
                 'asset' => bless( {
                                     'path' => '/tmp/mojo.tmp',
                                     'handle' => bless( \*Symbol::GEN53, 'IO::File' ),
                                     'cleanup' => 1,
                                     'tmpdir' => '/tmp'
                                   }, 'Mojo::Asset::File' )
               }, 'Mojo::Upload' );

[Sun May 26 13:23:23 2013] [debug] 200 OK (0.001638s, 610.501/s).
[Sun May 26 13:23:34 2013] [debug] GET "/0/0/0/1/annotation/testupload".
[Sun May 26 13:23:34 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "testScreenshotUpload".
[Sun May 26 13:23:34 2013] [debug] Rendering cached template "leaves/annotation/testupload.html.ep".
[Sun May 26 13:23:34 2013] [debug] 200 OK (0.000982s, 1018.330/s).
[Sun May 26 13:23:38 2013] [debug] POST "/0/0/0/1/annotation".
[Sun May 26 13:23:38 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "annotationCreation".
[Sun May 26 13:23:38 2013] [debug] annotationdir: /home/matt/Documents/AnnoTree/WebServices/anno_tree/public/img/screenshot/0/0/0/1
[Sun May 26 13:23:38 2013] [debug] $VAR1 = '5_Screenshot_2013-05-22-23-01-58.png';

$VAR2 = '4_Screenshot_2013-05-22-23-02-15.png';

$VAR3 = '3_Screenshot_2013-05-22-23-01-58.png';

$VAR4 = '2_Screenshot_2013-05-22-23-01-58.png';

$VAR5 = '1_Screenshot_2013-05-22-23-02-15.png';

$VAR6 = '..';

$VAR7 = '.';

[Sun May 26 13:23:38 2013] [debug] filename: 5_Screenshot_2013-05-22-23-01-58.png
[Sun May 26 13:23:38 2013] [debug] annotationid: 6
[Sun May 26 13:23:38 2013] [debug] not a screenshot
[Sun May 26 13:23:38 2013] [debug] $VAR1 = bless( {
                 'name' => 'screenshot',
                 'filename' => 'Screenshot_2013-05-22-23-11-37.png',
                 'headers' => bless( {
                                       'cache' => [],
                                       'state' => 'finished',
                                       'headers' => {
                                                      'content-type' => [
                                                                          [
                                                                            'image/png'
                                                                          ]
                                                                        ],
                                                      'content-disposition' => [
                                                                                 [
                                                                                   'form-data; name="screenshot"; filename="Screenshot_2013-05-22-23-11-37.png"'
                                                                                 ]
                                                                               ]
                                                    },
                                       'max_line_size' => 10240
                                     }, 'Mojo::Headers' ),
                 'asset' => bless( {
                                     'path' => '/tmp/mojo.tmp',
                                     'handle' => bless( \*Symbol::GEN54, 'IO::File' ),
                                     'cleanup' => 1,
                                     'tmpdir' => '/tmp'
                                   }, 'Mojo::Asset::File' )
               }, 'Mojo::Upload' );

[Sun May 26 13:23:38 2013] [debug] 200 OK (0.001090s, 917.431/s).
[Sun May 26 13:23:49 2013] [debug] GET "/0/0/0/1/annotation/testupload".
[Sun May 26 13:23:49 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "testScreenshotUpload".
[Sun May 26 13:23:49 2013] [debug] Rendering cached template "leaves/annotation/testupload.html.ep".
[Sun May 26 13:23:49 2013] [debug] 200 OK (0.000803s, 1245.330/s).
[Sun May 26 13:23:53 2013] [debug] POST "/0/0/0/1/annotation".
[Sun May 26 13:23:53 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "annotationCreation".
[Sun May 26 13:23:53 2013] [debug] annotationdir: /home/matt/Documents/AnnoTree/WebServices/anno_tree/public/img/screenshot/0/0/0/1
[Sun May 26 13:23:53 2013] [debug] $VAR1 = '6_Screenshot_2013-05-22-23-11-37.png';

$VAR2 = '5_Screenshot_2013-05-22-23-01-58.png';

$VAR3 = '4_Screenshot_2013-05-22-23-02-15.png';

$VAR4 = '3_Screenshot_2013-05-22-23-01-58.png';

$VAR5 = '2_Screenshot_2013-05-22-23-01-58.png';

$VAR6 = '1_Screenshot_2013-05-22-23-02-15.png';

$VAR7 = '..';

$VAR8 = '.';

[Sun May 26 13:23:53 2013] [debug] filename: 6_Screenshot_2013-05-22-23-11-37.png
[Sun May 26 13:23:53 2013] [debug] annotationid: 7
[Sun May 26 13:23:53 2013] [debug] not a screenshot
[Sun May 26 13:23:53 2013] [debug] $VAR1 = bless( {
                 'name' => 'screenshot',
                 'filename' => 'Screenshot_2013-05-22-23-11-37.png',
                 'headers' => bless( {
                                       'state' => 'finished',
                                       'cache' => [],
                                       'headers' => {
                                                      'content-disposition' => [
                                                                                 [
                                                                                   'form-data; name="screenshot"; filename="Screenshot_2013-05-22-23-11-37.png"'
                                                                                 ]
                                                                               ],
                                                      'content-type' => [
                                                                          [
                                                                            'image/png'
                                                                          ]
                                                                        ]
                                                    },
                                       'max_line_size' => 10240
                                     }, 'Mojo::Headers' ),
                 'asset' => bless( {
                                     'cleanup' => 1,
                                     'tmpdir' => '/tmp',
                                     'path' => '/tmp/mojo.tmp',
                                     'handle' => bless( \*Symbol::GEN55, 'IO::File' )
                                   }, 'Mojo::Asset::File' )
               }, 'Mojo::Upload' );

[Sun May 26 13:23:53 2013] [debug] 200 OK (0.000888s, 1126.126/s).
[Sun May 26 13:23:58 2013] [debug] GET "/0/0/0/1/annotation/testupload".
[Sun May 26 13:23:58 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "testScreenshotUpload".
[Sun May 26 13:23:58 2013] [debug] Rendering cached template "leaves/annotation/testupload.html.ep".
[Sun May 26 13:23:58 2013] [debug] 200 OK (0.000781s, 1280.410/s).
[Sun May 26 13:24:02 2013] [debug] POST "/0/0/0/1/annotation".
[Sun May 26 13:24:02 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "annotationCreation".
[Sun May 26 13:24:02 2013] [debug] annotationdir: /home/matt/Documents/AnnoTree/WebServices/anno_tree/public/img/screenshot/0/0/0/1
[Sun May 26 13:24:02 2013] [debug] $VAR1 = '7_Screenshot_2013-05-22-23-11-37.png';

$VAR2 = '6_Screenshot_2013-05-22-23-11-37.png';

$VAR3 = '5_Screenshot_2013-05-22-23-01-58.png';

$VAR4 = '4_Screenshot_2013-05-22-23-02-15.png';

$VAR5 = '3_Screenshot_2013-05-22-23-01-58.png';

$VAR6 = '2_Screenshot_2013-05-22-23-01-58.png';

$VAR7 = '1_Screenshot_2013-05-22-23-02-15.png';

$VAR8 = '..';

$VAR9 = '.';

[Sun May 26 13:24:02 2013] [debug] filename: 7_Screenshot_2013-05-22-23-11-37.png
[Sun May 26 13:24:02 2013] [debug] annotationid: 8
[Sun May 26 13:24:02 2013] [debug] not a screenshot
[Sun May 26 13:24:02 2013] [debug] $VAR1 = bless( {
                 'name' => 'screenshot',
                 'headers' => bless( {
                                       'headers' => {
                                                      'content-disposition' => [
                                                                                 [
                                                                                   'form-data; name="screenshot"; filename="Screenshot_2013-05-22-23-02-15.png"'
                                                                                 ]
                                                                               ],
                                                      'content-type' => [
                                                                          [
                                                                            'image/png'
                                                                          ]
                                                                        ]
                                                    },
                                       'max_line_size' => 10240,
                                       'cache' => [],
                                       'state' => 'finished'
                                     }, 'Mojo::Headers' ),
                 'filename' => 'Screenshot_2013-05-22-23-02-15.png',
                 'asset' => bless( {
                                     'cleanup' => 1,
                                     'tmpdir' => '/tmp',
                                     'path' => '/tmp/mojo.tmp',
                                     'handle' => bless( \*Symbol::GEN56, 'IO::File' )
                                   }, 'Mojo::Asset::File' )
               }, 'Mojo::Upload' );

[Sun May 26 13:24:02 2013] [debug] 200 OK (0.000980s, 1020.408/s).
[Sun May 26 13:24:08 2013] [debug] GET "/0/0/0/1/annotation/testupload".
[Sun May 26 13:24:08 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "testScreenshotUpload".
[Sun May 26 13:24:08 2013] [debug] Rendering cached template "leaves/annotation/testupload.html.ep".
[Sun May 26 13:24:08 2013] [debug] 200 OK (0.000892s, 1121.076/s).
[Sun May 26 13:24:11 2013] [debug] POST "/0/0/0/1/annotation".
[Sun May 26 13:24:11 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "annotationCreation".
[Sun May 26 13:24:11 2013] [debug] annotationdir: /home/matt/Documents/AnnoTree/WebServices/anno_tree/public/img/screenshot/0/0/0/1
[Sun May 26 13:24:11 2013] [debug] $VAR1 = '8_Screenshot_2013-05-22-23-02-15.png';

$VAR2 = '7_Screenshot_2013-05-22-23-11-37.png';

$VAR3 = '6_Screenshot_2013-05-22-23-11-37.png';

$VAR4 = '5_Screenshot_2013-05-22-23-01-58.png';

$VAR5 = '4_Screenshot_2013-05-22-23-02-15.png';

$VAR6 = '3_Screenshot_2013-05-22-23-01-58.png';

$VAR7 = '2_Screenshot_2013-05-22-23-01-58.png';

$VAR8 = '1_Screenshot_2013-05-22-23-02-15.png';

$VAR9 = '..';

$VAR10 = '.';

[Sun May 26 13:24:11 2013] [debug] filename: 8_Screenshot_2013-05-22-23-02-15.png
[Sun May 26 13:24:11 2013] [debug] annotationid: 9
[Sun May 26 13:24:11 2013] [debug] not a screenshot
[Sun May 26 13:24:11 2013] [debug] $VAR1 = bless( {
                 'name' => 'screenshot',
                 'asset' => bless( {
                                     'path' => '/tmp/mojo.tmp',
                                     'handle' => bless( \*Symbol::GEN57, 'IO::File' ),
                                     'cleanup' => 1,
                                     'tmpdir' => '/tmp'
                                   }, 'Mojo::Asset::File' ),
                 'filename' => 'Screenshot_2013-05-22-23-01-58.png',
                 'headers' => bless( {
                                       'headers' => {
                                                      'content-type' => [
                                                                          [
                                                                            'image/png'
                                                                          ]
                                                                        ],
                                                      'content-disposition' => [
                                                                                 [
                                                                                   'form-data; name="screenshot"; filename="Screenshot_2013-05-22-23-01-58.png"'
                                                                                 ]
                                                                               ]
                                                    },
                                       'max_line_size' => 10240,
                                       'state' => 'finished',
                                       'cache' => []
                                     }, 'Mojo::Headers' )
               }, 'Mojo::Upload' );

[Sun May 26 13:24:11 2013] [debug] 200 OK (0.001757s, 569.152/s).
[Sun May 26 13:24:17 2013] [debug] GET "/0/0/0/1/annotation/tst".
[Sun May 26 13:24:17 2013] [debug] Template "not_found.development.html.ep" not found.
[Sun May 26 13:24:17 2013] [debug] Template "not_found.html.ep" not found.
[Sun May 26 13:24:17 2013] [debug] Rendering inline template.
[Sun May 26 13:24:17 2013] [debug] Rendering inline template.
[Sun May 26 13:24:17 2013] [debug] 404 Not Found (0.010401s, 96.145/s).
[Sun May 26 13:24:20 2013] [debug] GET "/0/0/0/1/annotation/testupload".
[Sun May 26 13:24:20 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "testScreenshotUpload".
[Sun May 26 13:24:20 2013] [debug] Rendering cached template "leaves/annotation/testupload.html.ep".
[Sun May 26 13:24:20 2013] [debug] 200 OK (0.000837s, 1194.743/s).
[Sun May 26 13:24:24 2013] [debug] POST "/0/0/0/1/annotation".
[Sun May 26 13:24:24 2013] [debug] Routing to controller "AnnoTree::Leaves::Annotation" and action "annotationCreation".
[Sun May 26 13:24:24 2013] [debug] annotationdir: /home/matt/Documents/AnnoTree/WebServices/anno_tree/public/img/screenshot/0/0/0/1
[Sun May 26 13:24:24 2013] [debug] $VAR1 = '9_Screenshot_2013-05-22-23-01-58.png';

$VAR2 = '8_Screenshot_2013-05-22-23-02-15.png';

$VAR3 = '7_Screenshot_2013-05-22-23-11-37.png';

$VAR4 = '6_Screenshot_2013-05-22-23-11-37.png';

$VAR5 = '5_Screenshot_2013-05-22-23-01-58.png';

$VAR6 = '4_Screenshot_2013-05-22-23-02-15.png';

$VAR7 = '3_Screenshot_2013-05-22-23-01-58.png';

$VAR8 = '2_Screenshot_2013-05-22-23-01-58.png';

$VAR9 = '1_Screenshot_2013-05-22-23-02-15.png';

$VAR10 = '..';

$VAR11 = '.';

[Sun May 26 13:24:24 2013] [debug] filename: 9_Screenshot_2013-05-22-23-01-58.png
[Sun May 26 13:24:24 2013] [debug] annotationid: 10
[Sun May 26 13:24:24 2013] [debug] not a screenshot
[Sun May 26 13:24:24 2013] [debug] $VAR1 = bless( {
                 'name' => 'screenshot',
                 'asset' => bless( {
                                     'path' => '/tmp/mojo.tmp',
                                     'handle' => bless( \*Symbol::GEN58, 'IO::File' ),
                                     'cleanup' => 1,
                                     'tmpdir' => '/tmp'
                                   }, 'Mojo::Asset::File' ),
                 'filename' => 'Screenshot_2013-05-22-23-11-37.png',
                 'headers' => bless( {
                                       'state' => 'finished',
                                       'cache' => [],
                                       'max_line_size' => 10240,
                                       'headers' => {
                                                      'content-type' => [
                                                                          [
                                                                            'image/png'
                                                                          ]
                                                                        ],
                                                      'content-disposition' => [
                                                                                 [
                                                                                   'form-data; name="screenshot"; filename="Screenshot_2013-05-22-23-11-37.png"'
                                                                                 ]
                                                                               ]
                                                    }
                                     }, 'Mojo::Headers' )
               }, 'Mojo::Upload' );

[Sun May 26 13:24:24 2013] [debug] 200 OK (0.000891s, 1122.334/s).
